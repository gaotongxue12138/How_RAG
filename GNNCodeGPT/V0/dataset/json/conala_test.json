{"nl":"How can I send a signal from a python program?","code":"os.kill(os.getpid(), signal.SIGUSR1)","relevant":"for c in reversed(l):\n    os.write(sys.stdout.fileno(), struct.pack('b', c + 48))?_split_?from django.core.management.commands.runserver import Command as RunServer?_split_?s = 'i like stackoverflow and python'\nprint(''.join(c.upper() if i in indices else c for i, c in enumerate(s)))?_split_?"}
{"nl":"Decode Hex String in Python 3","code":"bytes.fromhex('4a4b4c').decode('utf-8')","relevant":"print(a)\nprint(b)\na = a + [2]\nprint(a)\nprint(b)?_split_?df.loc[df.filename == 'test2.dat', 'n'] = df2[df2.filename == 'test2.dat'].loc[\n    0]['n']?_split_?def f(query):\n    return values[bisect.bisect_left(keys, query)]?_split_?"}
{"nl":"check if all elements in a list are identical","code":"all(x == myList[0] for x in myList)","relevant":"for c in ('x', 'y', 'z'):\n    L.remove(c)?_split_?s.setsockopt(socket.SOL_IP, IP_MTU_DISCOVER, IP_PMTUDISC_DONT)?_split_?df = df.groupby(['actual', 'predicted']).size().unstack(fill_value=0)?_split_?"}
{"nl":"Format string dynamically","code":"print('%*s : %*s' % (20, 'Python', 20, 'Very Good'))","relevant":"body = urllib.parse.urlencode(post_data)\nhttp_client.fetch('http:\/\/0.0.0.0:8888', handle_request, method='POST',\n    headers=None, body=body)?_split_?diff_idx = np.where(np.any(np.diff(sorted_arr, axis=0), 1))[0]?_split_?from tornado.wsgi import WSGIContainer\nfrom tornado.httpserver import HTTPServer?_split_?"}
{"nl":"How to convert a string from CP-1251 to UTF-8?","code":"d.decode('cp1251').encode('utf8')","relevant":"cur.execute('INSERT INTO foo(bar) VALUES (?)', ('2003-06-25',))?_split_?path = op.join(CACHE, _file_from_url(url))?_split_?callback(text)?_split_?"}
{"nl":"How I can get rid of None values in dictionary?","code":"res = {k: v for k, v in list(kwargs.items()) if v is not None}","relevant":"@click.option('--name', prompt='Your name', help='The person to greet.')\ndef hello(count, name):\n    \"\"\"<insert text that you want to display in help screen> e.g: Simple program that greets NAME for a total of COUNT times.\"\"\"?_split_?print('#2 Backend:', plt.get_backend())\nplt.plot([1, 2, 6, 4])?_split_?my_array.compress([(x in ['this', 'that']) for x in my_array['job']])?_split_?"}
{"nl":"How I can get rid of None values in dictionary?","code":"res = dict((k, v) for k, v in kwargs.items() if v is not None)","relevant":"@click.option('--name', prompt='Your name', help='The person to greet.')\ndef hello(count, name):\n    \"\"\"<insert text that you want to display in help screen> e.g: Simple program that greets NAME for a total of COUNT times.\"\"\"?_split_?print('#2 Backend:', plt.get_backend())\nplt.plot([1, 2, 6, 4])?_split_?my_array.compress([(x in ['this', 'that']) for x in my_array['job']])?_split_?"}
{"nl":"Python: how to get the final output of multiple system commands?","code":"subprocess.check_output('ps -ef | grep something | wc -l', shell=True)","relevant":"with plt.xkcd():\n    pass?_split_?flat = tf.reshape(output, [-1, num_neurons])?_split_?plt.show()?_split_?"}
{"nl":"splitting and concatenating a string","code":"\"\"\"\"\"\".join(['a', 'b', 'c'])","relevant":"print(('The line contains', numvow, 'vowels'))\nprint(('and the most common are', most_com))?_split_?sql = 'INSERT INTO table VALUES (%s, %s, %s)'?_split_?def combinations(input_list, acc='', from_idx=0):\n    pass?_split_?"}
{"nl":"Finding the intersection between two series in Pandas","code":"pd.Series(list(set(s1).intersection(set(s2))))","relevant":"max_indices = [i]?_split_?0?_split_?help = action.help?_split_?"}
{"nl":"Sending http headers with python","code":"client.send('HTTP\/1.0 200 OK\\r\\n')","relevant":"import mysql.connector\nfrom sqlalchemy import create_engine\nengine = create_engine(\n    'mysql+mysqlconnector:\/\/[user]:[pass]@[host]:[port]\/[schema]', echo=False)\ndata.to_sql(name='sample_table2', con=engine, if_exists='append', index=False)?_split_??_split_?import package.b?_split_?"}
{"nl":"Python -Remove Time from Datetime String","code":"then = datetime.datetime.strptime(when, '%Y-%m-%d').date()","relevant":"self.call('print', socket.gethostname(), 'is here.')?_split_?sorted(data, key=lambda item: (int(item.partition(' ')[0]) if item[0].\n    isdigit() else float('inf'), item))?_split_?def co(amplitude, att_coeff, rel_coeff):\n    state = 0\nfor sample in amplitude:\n    pass?_split_?"}
{"nl":"How do I split a multi-line string into multiple lines?","code":"inputString.split('\\n')","relevant":"a0 = np.array([1.0, np.NAN, 2.0])?_split_?def treeview_changed(self, widget, event, data=None):\n    adj = widget.get_vadjustment()?_split_?alert('counter updated!')?_split_?"}
{"nl":"How do I split a multi-line string into multiple lines?","code":"' a \\n b \\r\\n c '.split('\\n')","relevant":"a0 = np.array([1.0, np.NAN, 2.0])?_split_?def treeview_changed(self, widget, event, data=None):\n    adj = widget.get_vadjustment()?_split_?alert('counter updated!')?_split_?"}
{"nl":"How to join mixed list (array) (with integers in it) in Python?","code":"\"\"\":\"\"\".join(str(x) for x in b)","relevant":"import numpy as np?_split_?import django\ndjango.setup()?_split_?for k, v in some_dict.items():\n    pass?_split_?"}
{"nl":"Fastest way to get the first object from a queryset in django?","code":"Entry.objects.filter()[:1].get()","relevant":"env.key_filename = '\/path\/to\/keyfile.pem'\n\ndef local_uname():\n    local('uname -a')\n\ndef remote_uname():\n    run('uname -a')?_split_?a[3, 0] + a[3, 1] + a[3, 2] + a[3, 4]\na[4, 0] + a[4, 1] + a[4, 2] + a[4, 3]?_split_?self.csrf_token = str(uuid4())[:8]?_split_?"}
{"nl":"How to calculate the sum of all columns of a 2D numpy array (efficiently)","code":"a.sum(axis=1)","relevant":"characters = splitre.split(credits)?_split_?results = pd.concat((table1, table2[cols_in_table1]))?_split_?admin.site.register(Class, ClassAdmin)?_split_?"}
{"nl":"Python, how to enable all warnings?","code":"warnings.simplefilter('always')","relevant":"if c == '\\x03':\n    pass?_split_?end_km = group.iloc[0, 5]?_split_?mysocket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nmysocket.settimeout(0.5)?_split_?"}
{"nl":"Python printing without commas","code":"print(' '.join(map(str, l)))","relevant":"def double_list(x):\n    return [(item * 2) for item in x]?_split_?from tkinter import *?_split_?out[1]?_split_?"}
{"nl":"OSError: [WinError 193] %1 is not a valid Win32 application","code":"subprocess.call(['python.exe', 'hello.py', 'htmlfilename.htm'])","relevant":"functor.arity = arity?_split_?item['title'] = post.xpath('.\/\/a[@class=\"title_txt\"]\/text()').extract()[0]\nitem['url'] = post.xpath('.\/\/a[@class=\"title_txt\"]\/@href').extract()[0]?_split_?plt.legend(loc=0)?_split_?"}
{"nl":"How can I parse a time string containing milliseconds in it with python?","code":"time.strptime('30\/03\/09 16:31:32.123', '%d\/%m\/%y %H:%M:%S.%f')","relevant":"return \"I'm a \" + name?_split_?if fullscreen:\n    window.unfullscreen()\nelse:\n    window.fullscreen()?_split_?now = datetime.now(get_localzone())?_split_?"}
{"nl":"How can I convert a string with dot and comma into a float number in Python","code":"my_float = float(my_string.replace(',', ''))","relevant":"name = models.CharField(max_length=60)?_split_?doc = nlp('The cat and the dog sleep in the basket near the door.')?_split_?from ThrdPartyDjangoLib import djangoTagIWantToUse\nregister = template.Library()\nregister.tag('djangoTagIWantToUse', djangoTagIWantToUse)?_split_?"}
{"nl":"How can I convert a string with dot and comma into a float number in Python","code":"float('123,456.908'.replace(',', ''))","relevant":"name = models.CharField(max_length=60)?_split_?doc = nlp('The cat and the dog sleep in the basket near the door.')?_split_?from ThrdPartyDjangoLib import djangoTagIWantToUse\nregister = template.Library()\nregister.tag('djangoTagIWantToUse', djangoTagIWantToUse)?_split_?"}
{"nl":"In Python script, how do I set PYTHONPATH?","code":"sys.path.append('\/path\/to\/whatever')","relevant":"self.setDaemon(True)?_split_?plt.show()?_split_?def home_page():\n    if request.is_xhr:\n        context = controllers.get_default_context()?_split_?"}
{"nl":"Determining the unmatched portion of a string using a regex in Python","code":"re.split('(\\\\W+)', 'Words, words, words.')","relevant":"a\na[np.where(a[:, (-1)])]\na[np.where(~a[:, (-1)].astype(bool))]?_split_?from datetime import datetime, timedelta\nthen = datetime.now() - timedelta(hours=2)\nnow = datetime.now()\nnow - then > timedelta(days=1)?_split_?def dynamic_field_definition(cls):\n    pass\n\ndef dynamic_field_definition(sender, **kwargs):\n    pass?_split_?"}
{"nl":"How to read data from Excel and write it to text file line by line?","code":"file = open('Output.txt', 'a')","relevant":"heading[0].findNext('table')?_split_?def singleton(cls):\n    return cls()?_split_?args = parser.parse_args()\nprint(args)?_split_?"}
{"nl":"download a file over HTTP","code":"urllib.request.urlretrieve('http:\/\/www.example.com\/songs\/mp3.mp3', 'mp3.mp3')","relevant":"DBHOST = 'localhost'?_split_?while 1:\n    _, frame = cap.read()\nhsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\nlower_white = np.array([0, 0, 0], dtype=np.uint8)\nupper_white = np.array([0, 0, 255], dtype=np.uint8)\nmask = cv2.inRange(hsv, lower_white, upper_white)\nres = cv2.bitwise_and(frame, frame, mask=mask)\ncv2.imshow('frame', frame)\ncv2.imshow('mask', mask)\ncv2.imshow('res', res)\nk = cv2.waitKey(5) & 255\nif k == 27:\n    break\ncv2.destroyAllWindows()?_split_?raise EverythingLostException('we are doomed!')?_split_?"}
{"nl":"download a file over HTTP","code":"u = urllib.request.urlopen(url)\nf = open(file_name, 'wb')\nmeta = u.info()\nfile_size = int(meta.getheaders('Content-Length')[0])\nprint(('Downloading: %s Bytes: %s' % (file_name, file_size)))\nfile_size_dl = 0\nblock_sz = 8192\nwhile True:\n    buffer = u.read(block_sz)\n    if (not buffer):\n        break\n    file_size_dl += len(buffer)\n    f.write(buffer)\n    status = ('%10d  [%3.2f%%]' % (file_size_dl, ((file_size_dl * 100.0) \/ file_size)))\n    status = (status + (chr(8) * (len(status) + 1)))\n    print(status, end=' ')\nf.close()","relevant":"DBHOST = 'localhost'?_split_?while 1:\n    _, frame = cap.read()\nhsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\nlower_white = np.array([0, 0, 0], dtype=np.uint8)\nupper_white = np.array([0, 0, 255], dtype=np.uint8)\nmask = cv2.inRange(hsv, lower_white, upper_white)\nres = cv2.bitwise_and(frame, frame, mask=mask)\ncv2.imshow('frame', frame)\ncv2.imshow('mask', mask)\ncv2.imshow('res', res)\nk = cv2.waitKey(5) & 255\nif k == 27:\n    break\ncv2.destroyAllWindows()?_split_?raise EverythingLostException('we are doomed!')?_split_?"}
{"nl":"download a file over HTTP","code":"response = urllib.request.urlopen('http:\/\/www.example.com\/')\nhtml = response.read()","relevant":"DBHOST = 'localhost'?_split_?while 1:\n    _, frame = cap.read()\nhsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\nlower_white = np.array([0, 0, 0], dtype=np.uint8)\nupper_white = np.array([0, 0, 255], dtype=np.uint8)\nmask = cv2.inRange(hsv, lower_white, upper_white)\nres = cv2.bitwise_and(frame, frame, mask=mask)\ncv2.imshow('frame', frame)\ncv2.imshow('mask', mask)\ncv2.imshow('res', res)\nk = cv2.waitKey(5) & 255\nif k == 27:\n    break\ncv2.destroyAllWindows()?_split_?raise EverythingLostException('we are doomed!')?_split_?"}
{"nl":"download a file over HTTP","code":"r = requests.get(url)","relevant":"DBHOST = 'localhost'?_split_?while 1:\n    _, frame = cap.read()\nhsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\nlower_white = np.array([0, 0, 0], dtype=np.uint8)\nupper_white = np.array([0, 0, 255], dtype=np.uint8)\nmask = cv2.inRange(hsv, lower_white, upper_white)\nres = cv2.bitwise_and(frame, frame, mask=mask)\ncv2.imshow('frame', frame)\ncv2.imshow('mask', mask)\ncv2.imshow('res', res)\nk = cv2.waitKey(5) & 255\nif k == 27:\n    break\ncv2.destroyAllWindows()?_split_?raise EverythingLostException('we are doomed!')?_split_?"}
{"nl":"download a file over HTTP","code":"response = requests.get(url, stream=True)\nwith open('10MB', 'wb') as handle:\n    for data in tqdm(response.iter_content()):\n        handle.write(data)","relevant":"DBHOST = 'localhost'?_split_?while 1:\n    _, frame = cap.read()\nhsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\nlower_white = np.array([0, 0, 0], dtype=np.uint8)\nupper_white = np.array([0, 0, 255], dtype=np.uint8)\nmask = cv2.inRange(hsv, lower_white, upper_white)\nres = cv2.bitwise_and(frame, frame, mask=mask)\ncv2.imshow('frame', frame)\ncv2.imshow('mask', mask)\ncv2.imshow('res', res)\nk = cv2.waitKey(5) & 255\nif k == 27:\n    break\ncv2.destroyAllWindows()?_split_?raise EverythingLostException('we are doomed!')?_split_?"}
{"nl":"Python's argparse to show program's version with prog and version string formatting","code":"parser.add_argument('--version', action='version', version='%(prog)s 2.0')","relevant":"return x?_split_?y = range(3, 7)\nz = chain(x, y)\nfor i in z:\n    pass?_split_?for filename in glob.iglob(os.path.join(folder, '*.grf')):\n    pass?_split_?"}
{"nl":"Remove key from dictionary in Python returning new dictionary","code":"{i: d[i] for i in d if i != 'c'}","relevant":"page = {'foo': ObjectId(), 'bar': [ObjectId(), ObjectId()]}\npage_sanitized = json.loads(json_util.dumps(page))?_split_?class C(A):\n\n    def __init__(self, n):\n        A.__init__(self, n)\nc = C(2)\nb = B(c)\nb.doSomething()?_split_?reload_package(email)?_split_?"}
{"nl":"Merging two pandas dataframes","code":"pd.merge(split_df, csv_df, on=['key'], suffixes=('_left', '_right'))","relevant":"name = models.CharField(max_length=50, null=False, blank=False)?_split_?arr = numpy.array(list(range(10)))\nresult = numpy.uint32(numpy.int32(arr))?_split_?def f1():\n    pass?_split_?"}
{"nl":"Python regular expression split() string","code":"s.split(' ', 4)","relevant":"button.pack()\nself.root.mainloop()?_split_?plt.show()?_split_?thebytes = pickle.dumps(myObj)?_split_?"}
{"nl":"How to read keyboard-input?","code":"input('Enter your input:')","relevant":"if y % 79 == 0:\n    x = y \/ 79?_split_?from dateutil import parser\nstrtime = str(datetime.now())?_split_?for thread in threads:\n    thread.join()?_split_?"}
{"nl":"Auto reloading python Flask app upon code changes","code":"app.run(debug=True)","relevant":"print(get_step(note), get_step(note) in ['F', 'C'])?_split_?return rv\n\n@app.route('\/')\ndef index():\n\n    def g():\n        for i, c in enumerate('hello' * 10):\n            time.sleep(0.1)\nyield i, c\nreturn Response(stream_template('index.html', data=g()))\nif __name__ == '__main__':\n    app.run(host='localhost', port=23423)?_split_?ssh_client.connect(host)?_split_?"}
{"nl":"Python save list and read data from file","code":"pickle.dump(mylist, open('save.txt', 'wb'))","relevant":"print('rounded   = %.2f' % num)?_split_?dWOut = np.zeros((X.shape[1], flag.shape[1]))\nidx1 = np.argwhere(flag.T > 0)\nX_ext1 = X[idx1[:, (1)]]\nshift_idx1 = np.append(0, np.where(np.diff(idx1[:, (0)]) > 0)[0] + 1)\ndWOut[:, (np.unique(idx1[:, (0)]))] += np.add.reduceat(X_ext1, shift_idx1,\n    axis=0).T\nidx2 = idx1[idx1[:, (1)].argsort()]\ncols_idx1 = y[idx2[:, (1)]]\nX_ext2 = X[idx2[:, (1)]]\nsort_idx = y[idx2[:, (1)]].argsort()\nX_ext2 = X_ext2[sort_idx]\nshift_idx2 = np.append(0, np.where(np.diff(cols_idx1[sort_idx]) > 0)[0] + 1)\ndWOut[:, (np.unique(cols_idx1))] -= np.add.reduceat(X_ext2, shift_idx2, axis=0\n    ).T?_split_?a, s = rx.match(t).groups()\nl = re.split('[@ ]+', a)[1:-1]\nprint(l)\nprint(s)?_split_?"}
{"nl":"Numpy: Multiplying a matrix with a 3d tensor -- Suggestion","code":"scipy.tensordot(P, T, axes=[1, 1]).swapaxes(0, 1)","relevant":"process = Popen(['swfdump', '\/tmp\/filename.swf', '-d'], stdout=PIPE, stderr\n    =PIPE)?_split_?fig, ax = plt.subplots()\nax.scatter(x, y, c=z, s=50, edgecolor='')?_split_?soup = BeautifulSoup(html)?_split_?"}
{"nl":"How to create nested lists in python?","code":"numpy.zeros((3, 3, 3))","relevant":"s = struct.pack('>f', x)\n\"\"\"\"\"\".join('%2.2x' % ord(c) for c in s)?_split_?data = open('requirements-prod.pip', 'r')\ndata2 = open('requirements-prod-no-version.pip', 'w')?_split_?return NULL?_split_?"}
{"nl":"Python: Cut off the last word of a sentence?","code":"\"\"\" \"\"\".join(content.split(' ')[:-1])","relevant":"class Tweeter(models.Model):\n    user = models.ManyToManyField('self', symmetrical=False, through=\n        'Relationship')\n\n\nclass Relationship(models.Model):\n    who = models.ForeignKey(Tweeter, related_name='who')\nwhom = models.ForeignKey(Tweeter, related_name='whom')?_split_?s = pd.Series([1001.0, 1002.0, None])?_split_?pos = f.tell()?_split_?"}
{"nl":"Numpy convert scalars to arrays","code":"x = np.asarray(x).reshape(1, -1)[(0), :]","relevant":"r = re.compile('[^\\\\W\\\\d_]', re.U)\nr.match('x')\nr.match('\\xe9')?_split_?return 1?_split_?lst = [1, 2, 3, 4]\n\ndef add(n):\n    return n + n\na = []\na.extend(map(add, lst))\nprint(a)?_split_?"}
{"nl":"Finding the sum of a nested list of ints","code":"sum(sum(i) if isinstance(i, list) else i for i in L)","relevant":"self.value = value?_split_?p = bokeh.plotting.figure(x_range=(0, 4), y_range=(0, 4), plot_height=200)\ncsource = bokeh.models.ColumnDataSource(data=dict(x=[1, 2, 3], y=[1, 2, 1],\n    colors1=['#ff0000', '#00ff00', '#0000ff'], colors2=['#ff00ff',\n    '#ffff00', '#00ffff']))\ncir = p.circle(x='x', y='y', fill_color='colors1', line_color='colors1',\n    size=20, source=csource)\ncb_cselect = bokeh.models.CustomJS(args=dict(cir=cir, csource=csource),\n    code=\n    \"\"\"\n    var selected_color = cb_obj.value;\n    cir.glyph.line_color.field = selected_color;\n    cir.glyph.fill_color.field = selected_color;\n    csource.trigger(\"change\")\n\"\"\"\n    )\ncolor_select = bokeh.models.Select(title='Select colors', value='colors1',\n    options=['colors1', 'colors2'], callback=cb_cselect)\nlayout = bokeh.layouts.gridplot([[p], [color_select]])\nbokeh.io.output_file('output.html')\nbokeh.io.show(layout)?_split_?[x for i, v in enumerate(range(0, len(unculledlist), 5)) if not v % 2 for x in\n    unculledlist[v:v + 5:2]]?_split_?"}
{"nl":"Convert hex to float","code":"struct.unpack('!f', '470FC614'.decode('hex'))[0]","relevant":"x = 4?_split_?return None?_split_?for k, v in m._fields.items():\n    if k == '_cls':\n        continue?_split_?"}
{"nl":"Python: Perform an operation on each dictionary value","code":"my_dict.update((x, y * 2) for x, y in list(my_dict.items()))","relevant":"n = np.array([-t[1], t[0]])?_split_?input_list = [4.0, 4.1, 4.2, 4.0, 9.0, 9.4, 8.9, 4.3]?_split_?def __str__(self):\n    pass?_split_?"}
{"nl":"Running bash script from within python","code":"subprocess.call('sleep.sh', shell=True)","relevant":"for x in b:\n    if x in a:\n        a.remove(x)?_split_?a.T.ravel()\na.ravel('F')\na?_split_?df = pd.DataFrame({'a': ['A', 'A', 'B', 'B', 'B', 'C'], 'b': [1, 2, 5, 5, 4,\n    6]})\ndf?_split_?"}
{"nl":"How would you make a comma-separated string from a list?","code":"\"\"\",\"\"\".join(l)","relevant":"aa?_split_?print(soup.prettify())?_split_?sys.exit()?_split_?"}
{"nl":"How would you make a comma-separated string from a list?","code":"myList = ','.join(map(str, myList))","relevant":"aa?_split_?print(soup.prettify())?_split_?sys.exit()?_split_?"}
{"nl":"Print a list in reverse order with range()?","code":"list(reversed(list(range(10))))","relevant":"print('\\\\20%')\n\"\"\"\\\\20%\"\"\"\nprint('\\\\20%')?_split_?new_src = replace_code_lines(src, start_token, end_token, replacement)?_split_?OKBLUE = '\\x1b[94m'?_split_?"}
{"nl":"How can i subtract two strings in python?","code":"print('lamp, bag, mirror'.replace('bag,', ''))","relevant":"[v for v in list2 if v in list1]?_split_?for name, value in (('ControlWord', 24640), ('StatusWord', 24641), (\n    'OperationMode', 24672)):\n    pass?_split_?for file in archive.namelist():\n    if file.startswith('foo\/'):\n        archive.extract(file, 'destination_path')?_split_?"}
{"nl":"python reverse tokens in a string","code":"\"\"\".\"\"\".join(s.split('.')[::-1])","relevant":"toolz.valmap(f, my_list)?_split_?fig = figure()\nax = fig.add_subplot(1, 1, 1, polar=True)?_split_?list(myseries[myseries == 7].index)?_split_?"}
{"nl":"converting epoch time with milliseconds to datetime","code":"datetime.datetime.fromtimestamp(s).strftime('%Y-%m-%d %H:%M:%S.%f')","relevant":"xexpected = [3, 7]\nyexpected = [4, 8]\nself.assertEqual(xargs[0], xexpected)\nself.assertEqual(yargs[0], yexpected)\nif __name__ == '__main__':\n    unittest.main()?_split_?print(task('Bob and Anna are meeting at noon'))?_split_?return 'energy \/ mass'?_split_?"}
{"nl":"converting epoch time with milliseconds to datetime","code":"time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(1236472051807 \/ 1000.0))","relevant":"xexpected = [3, 7]\nyexpected = [4, 8]\nself.assertEqual(xargs[0], xexpected)\nself.assertEqual(yargs[0], yexpected)\nif __name__ == '__main__':\n    unittest.main()?_split_?print(task('Bob and Anna are meeting at noon'))?_split_?return 'energy \/ mass'?_split_?"}
{"nl":"Getting the date of 7 days ago from current date in python","code":"(datetime.datetime.now() - datetime.timedelta(days=7)).date()","relevant":"p = Process(target=instance.start_listener)\np.start()?_split_?fv = numpy.vectorize(F)?_split_?image.file.seek(0)\nreturn image?_split_?"}
{"nl":"How can I sum a column of a list?","code":"print(sum(row[column] for row in data))","relevant":"def set(key, val):\n    data[key] = val\n\ndef get(key):\n    pass?_split_?if reqctx is not None:\n    pass?_split_?self.Bind(wx.EVT_SIZE, self._onSize)?_split_?"}
{"nl":"How can I sum a column of a list?","code":"[sum(row[i] for row in array) for i in range(len(array[0]))]","relevant":"def set(key, val):\n    data[key] = val\n\ndef get(key):\n    pass?_split_?if reqctx is not None:\n    pass?_split_?self.Bind(wx.EVT_SIZE, self._onSize)?_split_?"}
{"nl":"How to encode text to base64 in python","code":"base64.b64encode(bytes('your string', 'utf-8'))","relevant":"import number\n\ndef isnumber(x):\n    return isinstance(x, number.Number)?_split_?from tornado.web import RequestHandler\nfrom decorators import is_ajax\n\n\nclass MyHandler(RequestHandler):\n    pass?_split_?app = Klein()?_split_?"}
{"nl":"How can I combine dictionaries with the same keys in python?","code":"dict((k, [d[k] for d in dicts]) for k in dicts[0])","relevant":"list_display = ['to', 'subject', 'ok']?_split_?[0.23004382, 0.17836685, 0.39783538, 1.0, 0.84993082, 0.02756579],?_split_?[['a'], ['b'], ['c']]?_split_?"}
{"nl":"How can I combine dictionaries with the same keys in python?","code":"{k: [d[k] for d in dicts] for k in dicts[0]}","relevant":"list_display = ['to', 'subject', 'ok']?_split_?[0.23004382, 0.17836685, 0.39783538, 1.0, 0.84993082, 0.02756579],?_split_?[['a'], ['b'], ['c']]?_split_?"}
{"nl":"How do I get the url parameter in a Flask view","code":"request.args['myParam']","relevant":"fig = plt.figure()\nax = fig.add_subplot(111)\nax.tick_params(axis='both', which='major', labelsize=8)\nax.set_yticks([1], [\"\"\"A very long label\nbroken into 2 line\"\"\"],\n    linespacing=0.5)\nplt.show()?_split_?self.send_response(200)?_split_?queue[len(queue)] = {'name_first': 'Jane', 'name_last': 'Doe'}\nqueue[len(queue)] = {'name_first': 'J', 'name_last': 'Doe'}\nprint(queue)?_split_?"}
{"nl":"Identify duplicate values in a list in Python","code":"[k for k, v in list(Counter(mylist).items()) if v > 1]","relevant":"constant(4)?_split_?from scipy.sparse.linalg import spsolve?_split_?pl.colorbar(myplot, format='%.0e')?_split_?"}
{"nl":"How do you modify sys.path in Google App Engine (Python)?","code":"sys.path.insert(1, os.path.join(os.path.dirname(__file__), 'apps'))","relevant":"tmp = tmp.reshape(2, 2, 4)\nprint(tmp)?_split_?self.set_header('length', headers['length'])?_split_?from win32api import GetSystemMetrics?_split_?"}
{"nl":"How do you modify sys.path in Google App Engine (Python)?","code":"sys.path.append(os.path.join(os.path.dirname(__file__), 'subdir'))","relevant":"tmp = tmp.reshape(2, 2, 4)\nprint(tmp)?_split_?self.set_header('length', headers['length'])?_split_?from win32api import GetSystemMetrics?_split_?"}
{"nl":"Insert Null into SQLite3 in Python","code":"db.execute(\"INSERT INTO present VALUES('test2', ?, 10)\", (None,))","relevant":"return p?_split_?sorted(l1)?_split_?my_string = 'Hi! My name is {name}. I live in {state}'\nnew_string = my_string.format(name='Xi', state='Xo')\nprint(new_string)?_split_?"}
{"nl":"Flattening a shallow list in Python","code":"[image for menuitem in list_of_menuitems for image in menuitem]","relevant":"logging.basicConfig(level=logging.INFO, format='%(process)d %(message)s')\nmain()?_split_?f = x + y?_split_?mybook = Book.objects.get(name=\"Jason's Cookbook\")\ningredient_list = []\nfor recipe in mybook.recipe_set.all():\n    for ingredient in recipe.ingredients:\n        pass?_split_?"}
{"nl":"Append elements of a set to a list in Python","code":"a.extend(b)","relevant":"np.issubdtype(np.float32, float)?_split_?import datetime?_split_?C = array(B)?_split_?"}
{"nl":"Append elements of a set to a list in Python","code":"a.extend(list(b))","relevant":"np.issubdtype(np.float32, float)?_split_?import datetime?_split_?C = array(B)?_split_?"}
{"nl":"Python, Pandas : write content of DataFrame into text File","code":"np.savetxt('c:\\\\data\\\\np.txt', df.values, fmt='%d')","relevant":"return s[:p], s[p + 1:]?_split_?df1 = df.tz_localize('Europe\/Helsinki').tz_convert('UTC')\ndf1.reindex(date_range2)?_split_?['Arab World', 'ARB', '1971', '45271917893.3429']\n['Arab World', 'ARB', '1972', '54936622019.8224']?_split_?"}
{"nl":"Python, Pandas : write content of DataFrame into text File","code":"df.to_csv('c:\\\\data\\\\pandas.txt', header=None, index=None, sep=' ', mode='a')","relevant":"return s[:p], s[p + 1:]?_split_?df1 = df.tz_localize('Europe\/Helsinki').tz_convert('UTC')\ndf1.reindex(date_range2)?_split_?['Arab World', 'ARB', '1971', '45271917893.3429']\n['Arab World', 'ARB', '1972', '54936622019.8224']?_split_?"}
{"nl":"how to get the last part of a string before a certain character?","code":"print(x.rpartition('-')[0])","relevant":"x = staticmethod(lambda : bar())?_split_?df1.update(df2)\nprint(df1)?_split_?return rpath?_split_?"}
{"nl":"how to get the last part of a string before a certain character?","code":"print(x.rsplit('-', 1)[0])","relevant":"x = staticmethod(lambda : bar())?_split_?df1.update(df2)\nprint(df1)?_split_?return rpath?_split_?"}
{"nl":"FTP upload files Python","code":"ftp.storlines('STOR ' + filename, open(filename, 'r'))","relevant":"name_sets_2 = [set(i) for i in list_of_name_tuples_2]?_split_?print('in some method')\n\ndef isodd(self, n):\n    pass?_split_?import datetime, time?_split_?"}
{"nl":"Write value to hidden element with selenium python script","code":"browser.execute_script(\"document.getElementById('XYZ').value+='1'\")","relevant":"files = os.listdir(os.getcwd())\nfor file in files:\n    with open(file, 'r') as f:\n        pass?_split_?[1.5, 1.49999]?_split_?soup = BeautifulSoup('<html><p>foo<\/p><\/html>')\nr = soup.findAll('p', text=re.compile('foo'))\nprint(r[0].parent)?_split_?"}
{"nl":"Combining two numpy arrays to form an array with the largest value from each array","code":"np.maximum([2, 3, 4], [1, 5, 2])","relevant":"print(fmt.format(string, **other_dict))?_split_?xs = [np.array([i, i, i + 1, i + 1]) for i in range(N)]?_split_?bind = '127.0.0.1:9000'?_split_?"}
{"nl":"How to print an entire list while not starting by the first item","code":"print(l[3:] + l[:3])","relevant":"df = pd.DataFrame.from_records(t, columns=t.columns)?_split_?n = x2.shape[0]\nx2[:, (cols)] = x2[np.mod(np.arange(n)[:, (None)] + dirn, n), cols]?_split_?assert b == 's', (h(b), h(f.read(4)), repr(f.read(50)))?_split_?"}
{"nl":"loop over files","code":"for fn in os.listdir('.'):\n    if os.path.isfile(fn):\n        pass","relevant":"print(delimiter.join([('%s = %.2f' % (u, v)) for v, u in zip(vars, units)]))?_split_?try:\n    open('\/Users\/test\/Documents\/test')\nexcept IOError as e:\n    print(os.strerror(e.errno))?_split_?'https:\/\/www.google.com\/intl\/en\/policies\/privacy\/',?_split_?"}
{"nl":"loop over files","code":"for (root, dirs, filenames) in os.walk(source):\n    for f in filenames:\n        pass","relevant":"print(delimiter.join([('%s = %.2f' % (u, v)) for v, u in zip(vars, units)]))?_split_?try:\n    open('\/Users\/test\/Documents\/test')\nexcept IOError as e:\n    print(os.strerror(e.errno))?_split_?'https:\/\/www.google.com\/intl\/en\/policies\/privacy\/',?_split_?"}
{"nl":"Create random list of integers in Python","code":"[int(1000 * random.random()) for i in range(10000)]","relevant":"import PIL.Image\nimport cv2?_split_?f, axarr = plt.subplots(1, 3)?_split_?rect(x, 0, dx, y, color)?_split_?"}
{"nl":"Using %f with strftime() in Python to get microseconds","code":"datetime.datetime.now().strftime('%H:%M:%S.%f')","relevant":"from django.contrib.sessions.models import Session\nfrom django.contrib.auth.models import User\n\ndef message(request, socket, context, message):\n    session = Session.objects.get(session_key=message['session_key'])?_split_?letter_groups[name[0].upper()].append(name)?_split_?class Job(Base):\n    pass?_split_?"}
{"nl":"Build a GQL query (for Google App Engine) that has a condition on ReferenceProperty","code":"db.GqlQuery('SELECT * FROM Schedule WHERE station = $1', foo.key())","relevant":"'0' * 8\n'0' * '8'?_split_?d = defaultdict(list)?_split_?tgrid, pgrid = np.meshgrid(tgrid, pgrid)\nheat = np.zeros_like(tgrid)\nfor t, p, v in zip(times, price, volume):\n    delt = (t - tgrid) ** 2\ndelp = (p - pgrid) ** 2\nheat += v \/ (delt + delp * 0.01 + 0.5) ** 2\nfig = plt.figure()\nax = fig.add_subplot(111)\nax.pcolormesh(tgrid, pgrid, heat, cmap='gist_heat_r')\nplt.scatter(times, price, volume, marker='x')\nlocator = dates.DayLocator()\nax.xaxis.set_major_locator(locator)\nax.xaxis.set_major_formatter(dates.AutoDateFormatter(locator))\nfig.autofmt_xdate()\nplt.show()?_split_?"}
{"nl":"How to filter rows in pandas by regex","code":"df.b.str.contains('^f')","relevant":"n = match('[^\\\\s]+', a)?_split_?d = datetime.strptime('10:30', '%H:%M')\nd.strftime('%I:%M %p')?_split_?n, r = divmod(n, BASE)?_split_?"}
{"nl":"What is the best way to print a table with delimiters in Python","code":"print('\\n'.join('\\t'.join(str(col) for col in row) for row in tab))","relevant":"class Human(db.Model):\n    name = db.StringProperty(required=True)\ndrives = db.ReferenceProperty(reference_class=Car)?_split_?return any(i.isdigit() for i in string)?_split_?testDf['nunique'] = 1\nfor col1, col2 in zip(days, days[1:]):\n    testDf['nunique'] += ~(testDf[[col2]].values == testDf.ix[:, 'day1':\n        col1].values).any(axis=1)?_split_?"}
{"nl":"Pandas: Delete rows based on multiple columns values","code":"df.set_index(list('BC')).drop(tuples, errors='ignore').reset_index()","relevant":"[DisplayName('Text'), Browsable(true), Category('Design')]\n[Editor(typeof(StringArrayEditor), typeof(System.Drawing.Design.UITypeEditor))]?_split_?for i in range(1, n + 1):\n    cmb.extend(itertools.combinations(range(1, n + 1), i))?_split_?list1 = ['a', 'b', 'c']\nlist2 = ['a', 'stack', 'overflow']?_split_?"}
{"nl":"String Formatting in Python 3","code":"\"\"\"({:d} goals, ${:d})\"\"\".format(self.goals, self.penalties)","relevant":"out = [[]]?_split_?if regex_search:\n    p = re.compile(__searchtext__)\nfor dir, subdirs, subfiles in os.walk('c:\/docs\/2009'):\n    for name in fnmatch.filter(subfiles, '*.txt'):\n        fn = os.path.join(dir, name)\nwith open(fn, 'r') as f:\n    if regex_search:\n        pass?_split_?mu = np.array([-0.3, 0.17])\nS = np.array([[1.2, 0.35], [0.35, 2.1]])\np, i = mvn.mvnun(low, upp, mu, S)\nprint(p)\n0.2881578675080012?_split_?"}
{"nl":"String Formatting in Python 3","code":"\"\"\"({} goals, ${})\"\"\".format(self.goals, self.penalties)","relevant":"out = [[]]?_split_?if regex_search:\n    p = re.compile(__searchtext__)\nfor dir, subdirs, subfiles in os.walk('c:\/docs\/2009'):\n    for name in fnmatch.filter(subfiles, '*.txt'):\n        fn = os.path.join(dir, name)\nwith open(fn, 'r') as f:\n    if regex_search:\n        pass?_split_?mu = np.array([-0.3, 0.17])\nS = np.array([[1.2, 0.35], [0.35, 2.1]])\np, i = mvn.mvnun(low, upp, mu, S)\nprint(p)\n0.2881578675080012?_split_?"}
{"nl":"String Formatting in Python 3","code":"\"\"\"({0.goals} goals, ${0.penalties})\"\"\".format(self)","relevant":"out = [[]]?_split_?if regex_search:\n    p = re.compile(__searchtext__)\nfor dir, subdirs, subfiles in os.walk('c:\/docs\/2009'):\n    for name in fnmatch.filter(subfiles, '*.txt'):\n        fn = os.path.join(dir, name)\nwith open(fn, 'r') as f:\n    if regex_search:\n        pass?_split_?mu = np.array([-0.3, 0.17])\nS = np.array([[1.2, 0.35], [0.35, 2.1]])\np, i = mvn.mvnun(low, upp, mu, S)\nprint(p)\n0.2881578675080012?_split_?"}
{"nl":"Convert list of lists to list of integers","code":"[int(''.join(str(d) for d in x)) for x in L]","relevant":"x.sayHello()\nx = str('hello')?_split_?return float(item)?_split_?a = np.arange(12).reshape(3, 4)\na\na[1]\na.strides?_split_?"}
{"nl":"Convert list of lists to list of integers","code":"[''.join(str(d) for d in x) for x in L]","relevant":"x.sayHello()\nx = str('hello')?_split_?return float(item)?_split_?a = np.arange(12).reshape(3, 4)\na\na[1]\na.strides?_split_?"}
{"nl":"Convert list of lists to list of integers","code":"L = [int(''.join([str(y) for y in x])) for x in L]","relevant":"x.sayHello()\nx = str('hello')?_split_?return float(item)?_split_?a = np.arange(12).reshape(3, 4)\na\na[1]\na.strides?_split_?"}
{"nl":"How to write a list to a file with newlines in Python3","code":"myfile.write('\\n'.join(lines))","relevant":"zipobj = zipfile.ZipFile(foldername + '.zip', 'w', zipfile.ZIP_DEFLATED)?_split_?pwd()?_split_?h, w = im_th.shape[:2]?_split_?"}
{"nl":"Removing an element from a list based on a predicate","code":"[x for x in ['AAT', 'XAC', 'ANT', 'TTA'] if 'X' not in x and 'N' not in x]","relevant":"raise RuntimeError('Error while reading peer port')?_split_?successor.send(cust)?_split_?a_ext = np.concatenate(([0], a, [0]))?_split_?"}
{"nl":"python regular expression to remove repeated words","code":"text = re.sub('\\\\b(\\\\w+)( \\\\1\\\\b)+', '\\\\1', text)","relevant":"df = df.set_index('Choco_Type')\ndf = pd.concat([df.iloc[:, :4], df.iloc[:, 4:]]).reset_index()?_split_?import re?_split_?l = list(range(10))?_split_?"}
{"nl":"Counting non zero values in each column of a dataframe in python","code":"df.astype(bool).sum(axis=1)","relevant":"re.search('(?u)\\\\by\\\\b', '\\xc3\\xbcy\\xc3\\xbc')?_split_?it = iter(l)?_split_?from PIL import Image?_split_?"}
{"nl":"Python match string if it does not start with X","code":"re.search('(?<!Distillr)\\\\\\\\AcroTray\\\\.exe', 'C:\\\\SomeDir\\\\AcroTray.exe')","relevant":"positive_gauss = lambda mean, stddev, result=-1: positive_gauss(mean,\n    stddev, mean + np.random.randn() * stddev) if result < 0 else result?_split_?with open('words', 'rb') as f:\n    for line in f:\n        if i < 1000:\n            i = i + 1?_split_?def g(a, b):\n    pass?_split_?"}
{"nl":"String to list in Python","code":"\"\"\"QH QD JC KD JS\"\"\".split()","relevant":"return [(key, self[key]) for key in self._order]?_split_?return self.fn(*args)?_split_?a = 1\nx = 2\na, x = x, a?_split_?"}
{"nl":"Parsing XML in Python with regex","code":"print(re.search('>.*<', line).group(0))","relevant":"ip = get_ipython()\nformatter = ip.display_formatter.formatters['text\/latex']\n\ndef format_list(obj):\n    if not isinstance(obj, list):\n        return None\nif not all(isinstance(item, Decimal) for item in obj):\n    return None\nreturn '$$[%s]$$' % ';'.join(map(str, obj))\nformatter.for_type_by_name('builtins', 'list', format_list)?_split_?max_index = index?_split_?if len(num) % 2:\n    num = '0' + num\nreturn base64.b64encode(num.decode('hex'))?_split_?"}
{"nl":"How to empty a file using Python","code":"open(filename, 'w').close()","relevant":"return lst1[0:1] + interleave(lst2, lst1[1:])?_split_?tree = ET.parse('jerry.xml')?_split_?redirect('some_error_page')?_split_?"}
{"nl":"how to convert a string date into datetime format in python?","code":"datetime.datetime.strptime(string_date, '%Y-%m-%d %H:%M:%S.%f')","relevant":"class Report(models.Model):\n    job = models.ForeignKey(Job)?_split_?used_legends = set([])?_split_?print(stdout)?_split_?"}
{"nl":"What's the fastest way to locate a list element within a list in python?","code":"[index for index, item in enumerate(thelist) if item[0] == '332']","relevant":"url = 'http:\/\/example.com\/'\npayload = {'address': {'US': 'San Francisco', 'UK': 'London', 'CH': 'Shanghai'}\n    }?_split_?event.canvas.draw()?_split_?form = ContactForm()?_split_?"}
{"nl":"Python: trying to lower a string and remove non-alphanumeric characters aside from space","code":"re.sub('[^\\\\sa-zA-Z0-9]', '', text).lower().strip()","relevant":"multi_line_word << (split_word + multi_line_word | word)?_split_?if condiiton:\n    pass?_split_?with open('dump.pickle', 'r') as fh:\n    unpickler = pickle.Unpickler(fh)?_split_?"}
{"nl":"Python: trying to lower a string and remove non-alphanumeric characters aside from space","code":"re.sub('(?!\\\\s)[\\\\W_]', '', text).lower().strip()","relevant":"multi_line_word << (split_word + multi_line_word | word)?_split_?if condiiton:\n    pass?_split_?with open('dump.pickle', 'r') as fh:\n    unpickler = pickle.Unpickler(fh)?_split_?"}
{"nl":"Subscripting text in matplotlib labels","code":"plt.plot(x, y, label='H\\u2082O')","relevant":"return True?_split_?if k == '__main__':\n    pass?_split_?wb = load_workbook('C:\\\\Excel\\\\LOOKUP_TABLES_edited.xlsx')\nfor sheet in wb.worksheets:\n    pass?_split_?"}
{"nl":"Subscripting text in matplotlib labels","code":"plt.plot(x, y, label='$H_2O$')","relevant":"return True?_split_?if k == '__main__':\n    pass?_split_?wb = load_workbook('C:\\\\Excel\\\\LOOKUP_TABLES_edited.xlsx')\nfor sheet in wb.worksheets:\n    pass?_split_?"}
{"nl":"Looping over a list in Python","code":"[x for x in mylist if len(x) == 3]","relevant":"d1 = datetime.strptime('2010-01-01 16:31:22', fmt)\nd2 = datetime.strptime('2010-01-03 20:15:14', fmt)?_split_?def __init__(self, parent=None):\n    QtCore.QObject.__init__(self)?_split_?i = array([1, 3, 5, 4, 6])?_split_?"}
{"nl":"Initialize a list of objects in Python","code":"lst = [Object() for _ in range(100)]","relevant":"alphanumeric = RegexValidator('^[0-9a-zA-Z]*$',\n    'Only alphanumeric characters are allowed.')\nname = models.CharField(max_length=50, blank=True, null=True, validators=[\n    alphanumeric])\nemail = models.EmailField(max_length=50, unique=True, validators=[alphanumeric]\n    )?_split_?list(d.values())?_split_?from pyramid.events import subscriber\nfrom pyramid.events import BeforeRender?_split_?"}
{"nl":"Initialize a list of objects in Python","code":"lst = [Object() for i in range(100)]","relevant":"alphanumeric = RegexValidator('^[0-9a-zA-Z]*$',\n    'Only alphanumeric characters are allowed.')\nname = models.CharField(max_length=50, blank=True, null=True, validators=[\n    alphanumeric])\nemail = models.EmailField(max_length=50, unique=True, validators=[alphanumeric]\n    )?_split_?list(d.values())?_split_?from pyramid.events import subscriber\nfrom pyramid.events import BeforeRender?_split_?"}
{"nl":"selenium how to get the content of href within some targeted class","code":"self.driver.find_element_by_css_selector('.someclass a').get_attribute('href')","relevant":"WHERE?_split_?for primeNumber in primeList:\n    if num % primeNumber == 0:\n        isPrime = 0\nbreak\nif primeNumber > sqrtNum:\n    break\nif isPrime == 1:\n    primeList.append(num)\nelse:\n    isPrime = 1\nnum += 2?_split_?myWB.Close?_split_?"}
{"nl":"Joining Table\/DataFrames with common Column in Python","code":"df1.merge(df2, on='Date_Time')","relevant":"for x1, y1, x2, y2 in lines:\n    pass?_split_?args.parser.print_help()?_split_?serialized = pickle.dumps(a, protocol=0)?_split_?"}
{"nl":"insert variable values into a string in python","code":"'first string is: %s, second one is: %s' % (str1, 'geo.tif')","relevant":"s += str(a[i, j, k].imag) + ' '?_split_?data = [row1, row2, row3]\nchi2_contingency(data)?_split_?depth, size = a.shape\nx = np.zeros((depth, size, size))?_split_?"}
{"nl":"Split a string by a delimiter in python","code":"[x.strip() for x in '2.MATCHES $$TEXT$$ STRING'.split('$$TEXT$$')]","relevant":"from selenium import webdriver\nfrom pyvirtualdisplay import Display?_split_?v = CountVectorizer(analyzer=words_and_char_bigrams)?_split_?a = csv.writer(fp, delimiter=',')?_split_?"}
{"nl":"check if a directory exists and create it if necessary","code":"if (not os.path.exists(directory)):\n    os.makedirs(directory)","relevant":"for match in re.finditer(needle, haystack):\n    pass?_split_?def read_from_clipboard():\n    return subprocess.check_output('pbpaste', env={'LANG': 'en_US.UTF-8'}\n        ).decode('utf-8')?_split_?from rest_framework import routers?_split_?"}
{"nl":"check if a directory exists and create it if necessary","code":"try:\n    os.makedirs(path)\nexcept OSError:\n    if (not os.path.isdir(path)):\n        raise","relevant":"for match in re.finditer(needle, haystack):\n    pass?_split_?def read_from_clipboard():\n    return subprocess.check_output('pbpaste', env={'LANG': 'en_US.UTF-8'}\n        ).decode('utf-8')?_split_?from rest_framework import routers?_split_?"}
{"nl":"check if a directory exists and create it if necessary","code":"distutils.dir_util.mkpath(path)","relevant":"for match in re.finditer(needle, haystack):\n    pass?_split_?def read_from_clipboard():\n    return subprocess.check_output('pbpaste', env={'LANG': 'en_US.UTF-8'}\n        ).decode('utf-8')?_split_?from rest_framework import routers?_split_?"}
{"nl":"check if a directory exists and create it if necessary","code":"try:\n    os.makedirs(path)\nexcept OSError as exception:\n    if (exception.errno != errno.EEXIST):\n        raise","relevant":"for match in re.finditer(needle, haystack):\n    pass?_split_?def read_from_clipboard():\n    return subprocess.check_output('pbpaste', env={'LANG': 'en_US.UTF-8'}\n        ).decode('utf-8')?_split_?from rest_framework import routers?_split_?"}
{"nl":"Replace a substring when it is a separate word","code":"re.sub('\\\\bH3\\\\b', 'H1', text)","relevant":"tn.read_until(\"Escape character is '^]'.\", 2)?_split_?def draw_rectangle(drawing, coordinates, color, width=1):\n    pass?_split_?from sklearn import preprocessing?_split_?"}
{"nl":"Python: removing characters except digits from string","code":"re.sub('\\\\D', '', 'aas30dsa20')","relevant":"hs.place(x=5, y=5, width=150)?_split_?domain = \"\"\"\u0627\u0644\u0627\u0639\u0644\u064a-\u0644\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a.\u0642\u0637\u0631\"\"\"\ndomain_unicode = str(domain, 'utf8')\ndomain_idna = domain_unicode.encode('idna')\nurllib.request.urlopen('http:\/\/' + domain_idna).read()?_split_?plt.show()?_split_?"}
{"nl":"Python: removing characters except digits from string","code":"\"\"\"\"\"\".join([x for x in 'aas30dsa20' if x.isdigit()])","relevant":"hs.place(x=5, y=5, width=150)?_split_?domain = \"\"\"\u0627\u0644\u0627\u0639\u0644\u064a-\u0644\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a.\u0642\u0637\u0631\"\"\"\ndomain_unicode = str(domain, 'utf8')\ndomain_idna = domain_unicode.encode('idna')\nurllib.request.urlopen('http:\/\/' + domain_idna).read()?_split_?plt.show()?_split_?"}
{"nl":"How to access a tag called \"name\" in BeautifulSoup","code":"print(soup.find('name').string)","relevant":"d[key] = val?_split_?from fabric.api import env, run, cd?_split_?for i in reversedEnumerate(list(range(10))):\n    pass?_split_?"}
{"nl":"Iterate through PyMongo Cursor as key-value pair","code":"records = dict((record['_id'], record) for record in cursor)","relevant":"old_vote = query(poll_user_id=session['poll_user_id'], poll=poll_id)?_split_?glib = ctypes.CDLL('libglib-2.0-0.dll')?_split_?for _ in iterator:\n    pass?_split_?"}
{"nl":"Python how to combine two matrices in numpy","code":"np.concatenate((A, B))","relevant":"if len(string) == 0:\n    pass?_split_?return Response(token, status=200)?_split_?credentials = storage.get()\nstorage.put(credentials)?_split_?"}
{"nl":"Python how to combine two matrices in numpy","code":"np.vstack((A, B))","relevant":"if len(string) == 0:\n    pass?_split_?return Response(token, status=200)?_split_?credentials = storage.get()\nstorage.put(credentials)?_split_?"}
{"nl":"how to check the character count of a file in python","code":"os.stat(filepath).st_size","relevant":"content = f.read()?_split_?import os\nimport sys\nsys.path.extend('%s..\/' % os.getcwd())?_split_?r.close()?_split_?"}
{"nl":"count the occurrences of a list item","code":"l.count('a')","relevant":"try:\n    os.execv(sys.argv[0], sys.argv)\nexcept Exception as exc:\n    print('Failed re-exec:', exc)\nsys.exit(1)\nprint('Success:', os.environ['LD_LIBRARY_PATH'])?_split_?f.write('Hi!')?_split_?timestamp = str(int(time.time()))?_split_?"}
{"nl":"count the occurrences of a list item","code":"Counter(l)","relevant":"try:\n    os.execv(sys.argv[0], sys.argv)\nexcept Exception as exc:\n    print('Failed re-exec:', exc)\nsys.exit(1)\nprint('Success:', os.environ['LD_LIBRARY_PATH'])?_split_?f.write('Hi!')?_split_?timestamp = str(int(time.time()))?_split_?"}
{"nl":"count the occurrences of a list item","code":"[[x, l.count(x)] for x in set(l)]","relevant":"try:\n    os.execv(sys.argv[0], sys.argv)\nexcept Exception as exc:\n    print('Failed re-exec:', exc)\nsys.exit(1)\nprint('Success:', os.environ['LD_LIBRARY_PATH'])?_split_?f.write('Hi!')?_split_?timestamp = str(int(time.time()))?_split_?"}
{"nl":"count the occurrences of a list item","code":"dict(((x, l.count(x)) for x in set(l)))","relevant":"try:\n    os.execv(sys.argv[0], sys.argv)\nexcept Exception as exc:\n    print('Failed re-exec:', exc)\nsys.exit(1)\nprint('Success:', os.environ['LD_LIBRARY_PATH'])?_split_?f.write('Hi!')?_split_?timestamp = str(int(time.time()))?_split_?"}
{"nl":"count the occurrences of a list item","code":"l.count('b')","relevant":"try:\n    os.execv(sys.argv[0], sys.argv)\nexcept Exception as exc:\n    print('Failed re-exec:', exc)\nsys.exit(1)\nprint('Success:', os.environ['LD_LIBRARY_PATH'])?_split_?f.write('Hi!')?_split_?timestamp = str(int(time.time()))?_split_?"}
{"nl":"How to copy a file using python?","code":"shutil.copy(srcfile, dstdir)","relevant":"for x in dataframe.columns:\n    if x not in cols:\n        if front:\n            cols.append(x)\nelse:\n    cols.insert(0, x)\nreturn dataframe[cols]?_split_?return len(points) - 1?_split_?with self.container():\n    for i in range(0, 8):\n        pass?_split_?"}
{"nl":"Efficient way to find the largest key in a dictionary with non-zero value","code":"max(k for k, v in x.items() if v != 0)","relevant":"class ObjectChild(collections.MutableMapping):\n    pass?_split_?from django.forms import ModelForm, PasswordInput\n\n\nclass TwitterUserForm(ModelForm):\n    password = forms.CharField(widget=PasswordInput())\n\n\nclass Meta:\n    model = TwitterUser?_split_?n = 10?_split_?"}
{"nl":"Efficient way to find the largest key in a dictionary with non-zero value","code":"(k for k, v in x.items() if v != 0)","relevant":"class ObjectChild(collections.MutableMapping):\n    pass?_split_?from django.forms import ModelForm, PasswordInput\n\n\nclass TwitterUserForm(ModelForm):\n    password = forms.CharField(widget=PasswordInput())\n\n\nclass Meta:\n    model = TwitterUser?_split_?n = 10?_split_?"}
{"nl":"Efficient way to find the largest key in a dictionary with non-zero value","code":"max(k for k, v in x.items() if v != 0)","relevant":"class ObjectChild(collections.MutableMapping):\n    pass?_split_?from django.forms import ModelForm, PasswordInput\n\n\nclass TwitterUserForm(ModelForm):\n    password = forms.CharField(widget=PasswordInput())\n\n\nclass Meta:\n    model = TwitterUser?_split_?n = 10?_split_?"}
{"nl":"Re-read an open file Python","code":"file.seek(0)","relevant":"def save(self):\n    if not self.content_type:\n        self.content_type = ContentType.objects.get_for_model(self.__class__)\nself.save_base()\n\ndef as_leaf_class(self):\n    content_type = self.content_type\nmodel = content_type.model_class()\nif model == Base:\n    return self\nreturn model.objects.get(id=self.id)?_split_?print('\\n'.join(d['Name'] for d in thisismylist))?_split_?with open('result.json', 'w') as fp:\n    pass?_split_?"}
{"nl":"Coalesce values from 2 columns into a single column in a pandas dataframe","code":"df['c'] = np.where(df['a'].isnull, df['b'], df['a'])","relevant":"y = tf.placeholder(tf.float32, shape=[batch_size, y_dim])?_split_?x = [np.random.random((10, 10)) for _ in range(5)]\ny = np.dstack(x)\nprint(y.shape)\ny = np.rollaxis(y, -1)\nprint(y.shape)?_split_?google_price_data = [317.68, 396.05, 451.48, 428.03, 516.26, 604.83, 520.63,\n    573.48, 536.51, 542.84, 533.85, 660.87, 728.9]?_split_?"}
{"nl":"python: Is this a wrong way to remove an element from a dict?","code":"del d['ele']","relevant":"input_rtsp = 'rtsp:\/\/10.10.10.9:8080'\ncap = cv2.VideoCapture(input_rtsp)?_split_?toast()?_split_?m1.set_payload('test\\n')?_split_?"}
{"nl":"How can I subtract or add 100 years to a datetime field in the database in Django?","code":"MyModel.objects.update(timestamp=F('timestamp') + timedelta(days=36524.25))","relevant":"from sqlalchemy.ext.declarative import declarative_base?_split_?ouput = pd.merge(left_index=True, right_index=True, left=df, right=\n    destacked_tdrs)?_split_?key = reg.OpenKey(reg.HKEY_CURRENT_USER, 'Environment', 0, reg.KEY_ALL_ACCESS)?_split_?"}
{"nl":"How to merge multiple lists into one list in python?","code":"['it'] + ['was'] + ['annoying']","relevant":"return iter([])?_split_?@mod.route('\/recipes\/create', methods=['GET'])\ndef createRecipe():\n    categories = [(c.id, c.name) for c in g.user.categories.order_by(\n        Category.name).all()]\nform = RecipeForm(request.form)?_split_?data1 = np.memmap('tmp', dtype='i', mode='r+', order='F', offset=0, shape=size1\n    )?_split_?"}
{"nl":"How to increment a value with leading zeroes?","code":"str(int(x) + 1).zfill(len(x))","relevant":"linkstr = ''\nfor link in Listlinker:\n    linkstr = link.get_attribute('href')\nif linkstr in Domenesider:\n    pass\nelif str(HovedDomene) in linkstr:\n    pass?_split_?os.system('bzip2 %s' % path)?_split_?from dominate import document\nfrom dominate.tags import *?_split_?"}
{"nl":"How can I check if a Pandas dataframe's index is sorted","code":"all(df.index[:-1] <= df.index[1:])","relevant":"s.write('2')?_split_?mx = max(l, key=itemgetter(1))?_split_?import matplotlib.pyplot as plt?_split_?"}
{"nl":"Convert tuple to list","code":"list(t)","relevant":"def rreload(module):\n    \"\"\"Recursively reload modules.\"\"\"?_split_?print(a.my_member)\nprint(MyClass.my_member)?_split_?next((i for i, v in enumerate(a) if i == 666), None)?_split_?"}
{"nl":"Convert tuple to list","code":"tuple(l)","relevant":"def rreload(module):\n    \"\"\"Recursively reload modules.\"\"\"?_split_?print(a.my_member)\nprint(MyClass.my_member)?_split_?next((i for i, v in enumerate(a) if i == 666), None)?_split_?"}
{"nl":"Convert tuple to list and back","code":"level1 = map(list, level1)","relevant":"def stringify_children(node):\n    from lxml.etree import tostring\nfrom itertools import chain\nparts = [node.text] + list(chain(*([c.text, tostring(c), c.tail] for c in\n    node.getchildren()))) + [node.tail]?_split_?def rreload(module):\n    \"\"\"Recursively reload modules.\"\"\"?_split_?print(a.my_member)\nprint(MyClass.my_member)?_split_?"}
{"nl":"how to send the output of pprint module to a log file","code":"pprint.pprint(dataobject, logFile)","relevant":"def stepped_floor(n, step=1):\n    pass?_split_?print(x)\nprint(x.dimshuffle('x', 0).type)\nprint(x.dimshuffle(0, 'x').type)\nprint(x.reshape((1, x.shape[0])).type)\nprint(x.reshape((x.shape[0], 1)).type)\nf = theano.function([], outputs=[x, x.dimshuffle('x', 0), x.reshape((1, x.\n    shape[0]))])\ntheano.printing.debugprint(f)?_split_?model = db.StringProperty()\nproperty = db.StringProperty()\naction = db.EnumProperty(['insert', 'update', 'delete'])\nold = db.PickleProperty()\nnew = db.PickleProperty()\n\n\nclass HistoryEventModelLevel(db.Model):\n    date = db.DateTime()\nmodel = db.StringProperty()\naction = db.EnumProperty(['insert', 'update', 'delete'])\nchange = db.PickleProperty()?_split_?"}
{"nl":"Python Pandas: Get index of rows which column matches certain value","code":"df.loc[df['BoolCol']]","relevant":"def count(haystack, needle):\n    result = 0?_split_?key.set_contents_from_string('Version 2')?_split_?from functools import reduce\nreduce(lambda x, y: x.combine_first(y), [df1, df2, df3])?_split_?"}
{"nl":"Python Pandas: Get index of rows which column matches certain value","code":"df.iloc[np.flatnonzero(df['BoolCol'])]","relevant":"def count(haystack, needle):\n    result = 0?_split_?key.set_contents_from_string('Version 2')?_split_?from functools import reduce\nreduce(lambda x, y: x.combine_first(y), [df1, df2, df3])?_split_?"}
{"nl":"Python Pandas: Get index of rows which column matches certain value","code":"df[df['BoolCol'] == True].index.tolist()","relevant":"def count(haystack, needle):\n    result = 0?_split_?key.set_contents_from_string('Version 2')?_split_?from functools import reduce\nreduce(lambda x, y: x.combine_first(y), [df1, df2, df3])?_split_?"}
{"nl":"Python Pandas: Get index of rows which column matches certain value","code":"df[df['BoolCol']].index.tolist()","relevant":"def count(haystack, needle):\n    result = 0?_split_?key.set_contents_from_string('Version 2')?_split_?from functools import reduce\nreduce(lambda x, y: x.combine_first(y), [df1, df2, df3])?_split_?"}
{"nl":"How do I change directory back to my original working directory with Python?","code":"os.chdir(owd)","relevant":"print(NewList[0]._data)?_split_?p.terminate()?_split_?screen.getch()?_split_?"}
{"nl":"How to insert strings with quotes and newlines into sqlite db with Python?","code":"c.execute(\"INSERT INTO test VALUES (?, 'bar')\", (testfield,))","relevant":"for item in biglist2:\n    if (item['transaction'], item['date']) in biglist1_indexed:\n        matches.append(item)?_split_?to_calc = np.multiply(FTR_WEIGHTS, diff)?_split_?for _ in range(50):\n    sys.stdout.write(next(spinner))\nsys.stdout.flush()\ntime.sleep(0.1)\nsys.stdout.write('\\x08')?_split_?"}
{"nl":"Python - how to convert a \"raw\" string into a normal string","code":"\"\"\"\\\\x89\\\\n\"\"\".decode('string_escape')","relevant":"return HttpResponse(json.dumps(data))?_split_?def floatToBits(f):\n    s = struct.pack('>f', f)?_split_?self.init()?_split_?"}
{"nl":"Python - how to convert a \"raw\" string into a normal string","code":"raw_string.decode('string_escape')","relevant":"return HttpResponse(json.dumps(data))?_split_?def floatToBits(f):\n    s = struct.pack('>f', f)?_split_?self.init()?_split_?"}
{"nl":"Python - how to convert a \"raw\" string into a normal string","code":"raw_byte_string.decode('unicode_escape')","relevant":"return HttpResponse(json.dumps(data))?_split_?def floatToBits(f):\n    s = struct.pack('>f', f)?_split_?self.init()?_split_?"}
{"nl":"Splitting a string with repeated characters into a list using regex","code":"[m.group(0) for m in re.finditer('(\\\\d)\\\\1*', s)]","relevant":"cursor.execute('INSERT INTO foo (bar,baz) VALUES (?, ?)', (1, 2))\ncursor.execute('INSERT OR IGNORE INTO foo (bar,baz) VALUES (?, ?)', (1, 3))?_split_?groups = (list(g) for k, g in groupby(s))?_split_?def label_from_instance(self, obj):\n    return obj.get_full_name()?_split_?"}
{"nl":"How to do a scatter plot with empty circles in Python?","code":"plt.scatter(np.random.randn(100), np.random.randn(100), facecolors='none')","relevant":"Customer.query.join(Branch).join(Branch.salesmanagers).filter(SalesManager.\n    id == 1).all()?_split_?menubar.add_cascade(label='File', underline=0, menu=fileMenu)?_split_?with open(abs_path, 'w') as new_file:\n    with open(file_path) as old_file:\n        for line in old_file:\n            new_file.write(line.replace(pattern, subst))\nclose(fh)\nremove(file_path)\nmove(abs_path, file_path)?_split_?"}
{"nl":"How to do a scatter plot with empty circles in Python?","code":"plt.plot(np.random.randn(100), np.random.randn(100), 'o', mfc='none')","relevant":"Customer.query.join(Branch).join(Branch.salesmanagers).filter(SalesManager.\n    id == 1).all()?_split_?menubar.add_cascade(label='File', underline=0, menu=fileMenu)?_split_?with open(abs_path, 'w') as new_file:\n    with open(file_path) as old_file:\n        for line in old_file:\n            new_file.write(line.replace(pattern, subst))\nclose(fh)\nremove(file_path)\nmove(abs_path, file_path)?_split_?"}
{"nl":"Deleting a div with a particlular class using BeautifulSoup","code":"soup.find('div', id='main-content').decompose()","relevant":"some_long_process()\nend = time.time()\nremain = start + 10 * 60 - end\nif remain > 0:\n    time.sleep(remain)?_split_?def app(*args, **kwargs):\n    pass?_split_?from numpy import *\na = array([[1, 2, 3], [0, 3, NaN]])?_split_?"}
{"nl":"How to filter rows containing a string pattern from a Pandas dataframe","code":"df[df['ids'].str.contains('ball')]","relevant":"self.add_node(origin)\nfor destination in destinations:\n    pass?_split_?n = match('[^\\\\s]+', a)?_split_?d = datetime.strptime('10:30', '%H:%M')\nd.strftime('%I:%M %p')?_split_?"}
{"nl":"How to convert pandas index in a dataframe to a column?","code":"df.reset_index(level=0, inplace=True)","relevant":"import random\nrandom.choice([p for p in itertools.product(x, repeat=2)])\n6, 3?_split_?print('MemoryLoad: %d%%' % stat.dwMemoryLoad)?_split_?for j in range(i + 1, len(t) + 1):\n    yield t[:j] + (t[i],) + t[j:]?_split_?"}
{"nl":"How to convert pandas index in a dataframe to a column?","code":"df['index1'] = df.index","relevant":"import random\nrandom.choice([p for p in itertools.product(x, repeat=2)])\n6, 3?_split_?print('MemoryLoad: %d%%' % stat.dwMemoryLoad)?_split_?for j in range(i + 1, len(t) + 1):\n    yield t[:j] + (t[i],) + t[j:]?_split_?"}
{"nl":"How to convert pandas index in a dataframe to a column?","code":"df.reset_index(level=['tick', 'obs'])","relevant":"import random\nrandom.choice([p for p in itertools.product(x, repeat=2)])\n6, 3?_split_?print('MemoryLoad: %d%%' % stat.dwMemoryLoad)?_split_?for j in range(i + 1, len(t) + 1):\n    yield t[:j] + (t[i],) + t[j:]?_split_?"}
{"nl":"Generic reverse of list items in Python","code":"[x[::-1] for x in b]","relevant":"OKBLUE = '\\x1b[94m'?_split_?print('\\\\20%')\n\"\"\"\\\\20%\"\"\"\nprint('\\\\20%')?_split_?new_src = replace_code_lines(src, start_token, end_token, replacement)?_split_?"}
{"nl":"in Numpy, how to zip two 2-D arrays?","code":"np.array([zip(x, y) for x, y in zip(a, b)])","relevant":"p.wait()?_split_?b = 256?_split_?print(urlparse.urlunparse(newurl))?_split_?"}
{"nl":"in Numpy, how to zip two 2-D arrays?","code":"np.array(zip(a.ravel(), b.ravel()), dtype='i4,i4').reshape(a.shape)","relevant":"p.wait()?_split_?b = 256?_split_?print(urlparse.urlunparse(newurl))?_split_?"}
{"nl":"How to convert a list of longs into a comma separated string in python","code":"\"\"\",\"\"\".join([str(i) for i in list_of_ints])","relevant":"print(urllib.request.urlopen(request).read())?_split_?from django.db.models import Max?_split_?s.connect(('localhost', PORT_NUMBER))?_split_?"}
{"nl":"Posting raw data with Python","code":"requests.post(url, data=DATA, headers=HEADERS_DICT, auth=(username, password))","relevant":"np.array_split(x, 3)?_split_?def unicode_unquoter(match):\n    return chr(int(match.group(1), 16))?_split_?nrows = B.shape[0]?_split_?"}
{"nl":"Find last occurrence of character","code":"'abcd}def}'.rfind('}')","relevant":"pk = a_method_that_may_rise_an_exception()?_split_?data = np.loadtxt('datafile')?_split_?im = Image.open('tiger.jpg')\nim = add_corners(im, 100)\nim.save('tiger.png')?_split_?"}
{"nl":"Ending with a for loop in python","code":"print([item for item in [1, 2, 3]])","relevant":"response.url = req.url.decode('utf-8')?_split_?return 1?_split_?import codecs\nf = codecs.open('test.html', 'r')\nprint(f.read())?_split_?"}
{"nl":"transpose dictionary (extract all the values for one key from a list of dictionaries)","code":"[(x['x'], x['y']) for x in d]","relevant":"df = pd.DataFrame({'a': [1, 5, 5], 'b': [np.NaN, 7200.0, 580.0], 'c': [3, \n    20, 20]})\nprint((df, '\\n\\n'))\ndf['b'] = np.nan_to_num(df['b']).astype(int)\nprint(df)?_split_?session_factory = sessionmaker(bind=some_engine)?_split_?import this?_split_?"}
{"nl":"How to get the filename without the extension from a path in Python?","code":"print(os.path.splitext(os.path.basename('hemanth.txt'))[0])","relevant":"import pandas as pd?_split_?fact(3)?_split_?edges.append((edge['governor'], edge['dependent']))?_split_?"}
{"nl":"Make dictionary from list with python","code":"dict(x[i:i + 2] for i in range(0, len(x), 2))","relevant":"import sys?_split_?b = etree.SubElement(root, 'b')?_split_?PyErr_SetString(PyExc_ValueError, 'List items must be integers')\nreturn NULL?_split_?"}
{"nl":"Merging a list of lists","code":"values = sum([['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'H', 'I']], [])","relevant":"numpy.allclose(list(d1.values()), list(d2.values()))?_split_?last_item = self.items.pop()?_split_?c += 'a'\nprint(id(a))?_split_?"}
{"nl":"How to select rows in a DataFrame between two values, in Python Pandas?","code":"df = df[(df['closing_price'] >= 99) & (df['closing_price'] <= 101)]","relevant":"class SQLFunction(object):\n\n    def __init__(self, connection):\n        self.connection = connection\n\ndef __call__(self, args=None):\n    self.cursor = self.connection.cursor()\nself.run(args)\nself.cursor.commit()\nself.cursor.close()\n\n\nclass DeleteSession(SQLFunction):\n\n    def run(self, args):\n        self.cursor.execute('statement')\ndelete_session = DeleteSession(connection)?_split_?__import__('pkg_resources').declare_namespace(__name__)?_split_?blobstore.delete([item.blob_key])\ndb.delete(item)?_split_?"}
{"nl":"Replace all occurrences of a string in a pandas dataframe (Python)","code":"df.replace({'\\n': '<br>'}, regex=True)","relevant":"class CantTouchThis(type):\n    pass?_split_?import numpy\nnplats = numpy.array(lats)\nnplons = numpy.array(lons)\nindex = numpy.argmin(nplats)?_split_?print(x.apply(lambda a: list([v for v in a if v == v])))\n(0)[1, 2, 3]?_split_?"}
{"nl":"Replace all occurrences of a string in a pandas dataframe (Python)","code":"df.replace({'\\n': '<br>'}, regex=True)","relevant":"class CantTouchThis(type):\n    pass?_split_?import numpy\nnplats = numpy.array(lats)\nnplons = numpy.array(lons)\nindex = numpy.argmin(nplats)?_split_?print(x.apply(lambda a: list([v for v in a if v == v])))\n(0)[1, 2, 3]?_split_?"}
{"nl":"Mapping a string into a list of pairs","code":"[(x + y) for x, y in zip(word, word[1:])]","relevant":"self._devnull = os.open(os.devnull, os.O_WRONLY)?_split_?assert numpy.all((R - R_) ** 2 < 1e-16)?_split_?ranks\ncompressed = dict([(x['url'], int(x['rank'].replace(',', ''))) for x in ranks])?_split_?"}
{"nl":"Mapping a string into a list of pairs","code":"list(map(lambda x, y: x + y, word[:-1], word[1:]))","relevant":"self._devnull = os.open(os.devnull, os.O_WRONLY)?_split_?assert numpy.all((R - R_) ** 2 < 1e-16)?_split_?ranks\ncompressed = dict([(x['url'], int(x['rank'].replace(',', ''))) for x in ranks])?_split_?"}
{"nl":"How do you extract a url from a string using python?","code":"print(re.findall('(https?:\/\/[^\\\\s]+)', myString))","relevant":"\"\"\" Override this so that we know which instance it is \"\"\"?_split_?index = similarities.SparseMatrixSimilarity(tfidf[corpus], num_features=12)?_split_?@app.route('\/', methods=['GET', 'POST'])\ndef home():\n    if request.method == 'POST':\n        pass?_split_?"}
{"nl":"How do you extract a url from a string using python?","code":"print(re.search('(?P<url>https?:\/\/[^\\\\s]+)', myString).group('url'))","relevant":"\"\"\" Override this so that we know which instance it is \"\"\"?_split_?index = similarities.SparseMatrixSimilarity(tfidf[corpus], num_features=12)?_split_?@app.route('\/', methods=['GET', 'POST'])\ndef home():\n    if request.method == 'POST':\n        pass?_split_?"}
{"nl":"Remove all special characters, punctuation and spaces from string","code":"re.sub('[^A-Za-z0-9]+', '', mystring)","relevant":"def modify_bases(bases):\n\n    def decorator(cls):\n        return type(cls.__name__, tuple(classes), dict(cls.__dict__))\nreturn decorator?_split_?import matplotlib.pyplot as plt?_split_?d = {'a': '', 'b': '', 'c': 'oaeu'}\nany(map(bool, list(d.values())))?_split_?"}
{"nl":"How to get a daterange of the 2nd Fridays of each month?","code":"pd.date_range('2016-01-01', freq='WOM-2FRI', periods=13)","relevant":"cleaner.kill_tags = ['a', 'h1']\ncleaner.remove_tags = ['p']?_split_?user = item.data(QtCore.Qt.UserRole + 1)?_split_?\"\"\" JSONField with automatic serialization\/deserialization. \"\"\"?_split_?"}
{"nl":"Multidimensional array in Python","code":"matrix = [[a, b], [c, d], [e, f]]","relevant":"self.logger.info('Crawl de la page %s', response.url)?_split_?br = mechanize.Browser()\nbr.add_handler(PrettifyHandler())?_split_?print('einsum - total time:', min(timeit.repeat(stmt=einsum, setup=\n    setup_code, number=50, repeat=3)))?_split_?"}
{"nl":"How do I replace whitespaces with underscore and vice versa?","code":"mystring.replace(' ', '_')","relevant":"seq.ratio()?_split_?full_list = [[1, 1, 3, 4], [3, 99, 5, 2], [2, 4, 4], [3, 4, 5, 2, 60]]?_split_?a = []?_split_?"}
{"nl":"How to get an absolute file path in Python","code":"os.path.abspath('mydir\/myfile.txt')","relevant":"a = 3\na?_split_?import os\nAPP_ROOT = os.path.dirname(os.path.abspath(__file__))?_split_?outFile.write('\\xe2\\x97\\x8f')\noutFile.close()?_split_?"}
{"nl":"Is there a string-collapse library function in python?","code":"\"\"\" \"\"\".join(my_string.split())","relevant":"root = Tkinter.Tk()?_split_?a = '\"ONE\" # \"TWO\" # \"THREE\" # \"FOUR\" # \"FIVE\"'\nb = '\"NANA\" # \"PAA\" # \"THREE\" # \"ELI\"'\na_elements = set(a.split(' # '))\nb_elements = [key for key in b.split(' # ') if key not in a_elements]\nb = ' # '.join(b_elements)?_split_?e2 = cv2.erode(1 - im, k2, borderType=cv2.BORDER_CONSTANT)?_split_?"}
{"nl":"Get Filename Without Extension in Python","code":"os.path.splitext(filename)[0]","relevant":"edges.append((edge['governor'], edge['dependent']))?_split_?print('--------')\nif __name__ == '__main__':\n    main()?_split_?import re?_split_?"}
{"nl":"How to sum elements in functional way","code":"[sum(l[:i]) for i, _ in enumerate(l)]","relevant":"myapp.db.drop_all()?_split_?del iterators[i]?_split_?df2 = pandas.DataFrame(numpy.random.randn(10, 30), columns=[('col%d' % d) for\n    d in range(30)])\nprint(df1)\nprint() \nprint(df1['col1'])?_split_?"}
{"nl":"Python Regex Split Keeps Split Pattern Characters","code":"\"\"\"Docs\/src\/Scripts\/temp\"\"\".replace('\/', '\/\\x00\/').split('\\x00')","relevant":"mygrid.SetCellValue(row, col, databasevalue4rowcol)?_split_?d = {}\nd[t0.key] = t0\nd[t1.key] = t1?_split_?grads = [tf.gradients(yle, x)[0] for yle in yl]\ngradsp = tf.pack(grads)\ngradst = tf.reshape(gradsp, shape=(shapey[0], shapey[1], shapex[0], shapex[1]))\nreturn gradst?_split_?"}
{"nl":"Shuffle columns of an array with Numpy","code":"np.random.shuffle(np.transpose(r))","relevant":"def has_delete_permission(self, request, obj=None):\n    return request.user.groups.filter(name='Developers').exists()?_split_?f.write('%s%s\\n' % (letter, num))?_split_?image_output.save(output, 'PNG')\ncontents = output.getvalue()?_split_?"}
{"nl":"Copy all values in a column to a new column in a pandas dataframe","code":"df['D'] = df['B']","relevant":"ax.plot([1, 2, 3])?_split_?class TestCrossPlatform:\n    pass?_split_?from lxml import etree\nxml_str = '<parent><child>text<\/child><child>other text<\/child><\/parent>'\nroot = etree.fromstring(xml_str)?_split_?"}
{"nl":"Find a value within nested json dictionary in python","code":"list(data['A']['B'].values())[0]['maindata'][0]['Info']","relevant":"return self._value + n?_split_?for line in f:\n    b += len(line)?_split_?action = db.EnumProperty(['insert', 'update', 'delete'])?_split_?"}
{"nl":"True for all characters of a string","code":"all(predicate(x) for x in string)","relevant":"doc = Document.objects.get(pk=1)\nprint(doc.system_id)\nprint(doc.system.id)\nprint(doc.system.name)\nother_system = System.objects.using('system_db_name').get(pk=5)\ndoc.system = other_system\nprint(doc.system_id)?_split_?re.findall('#(\\\\w+)', 'http:\/\/example.org\/#comments')?_split_?def _target(queue, function, *args, **kwargs):\n    pass?_split_?"}
{"nl":"How to determine number of files on a drive with Python?","code":"os.statvfs('\/').f_files - os.statvfs('\/').f_ffree","relevant":"data_frame['cum_yobs'] = data_frame['yobs'].cumsum()\ndata_frame['cum_xobs'] = data_frame['xobs'].cumsum()?_split_?x = np.array([6, 1, 7, 6, 9, 0, 8, 2, 1, 8])\narrivals = np.array([4, 0, 1, 1, 3, 2, 1, 3, 2, 1])?_split_?class PostInline(admin.StackedInline):\n    pass?_split_?"}
{"nl":"how to get a single result from a SQLite query in python?","code":"cursor.fetchone()[0]","relevant":"app.logger.setLevel(logging.INFO)?_split_?f = lambda x: Series(np.histogram(x, bins=bins)[0], index=bins[:-1])\ndf1 = daily.apply(f)?_split_?print(line)?_split_?"}
{"nl":"How to convert a string list into an integer in python","code":"user_list = [int(number) for number in user_input.split(',')]","relevant":"fig, ax = plt.subplots()\nfig.savefig('myimage.svg', format='svg', dpi=1200)?_split_?dfA = pd.DataFrame.from_csv(StringIO(d1), sep='\\\\s+', index_col=None)?_split_?y = touch.y - self.center[1]?_split_?"}
{"nl":"How to convert a string list into an integer in python","code":"[int(s) for s in user.split(',')]","relevant":"fig, ax = plt.subplots()\nfig.savefig('myimage.svg', format='svg', dpi=1200)?_split_?dfA = pd.DataFrame.from_csv(StringIO(d1), sep='\\\\s+', index_col=None)?_split_?y = touch.y - self.center[1]?_split_?"}
{"nl":"Sorting a Python list by two criteria","code":"sorted(list, key=lambda x: (x[0], -x[1]))","relevant":"f.close()?_split_?yield '{\"orig\": '?_split_?ddb = boto3.resource('dynamodb', endpoint_url='http:\/\/localhost:8000')?_split_?"}
{"nl":"How to sort a list of objects , based on an attribute of the objects?","code":"ut.sort(key=cmpfun, reverse=True)","relevant":"for i in range(len(values)):\n    pass?_split_?df_yes = df[df['zip'].isin(keep)]\ndf_no = df[~df['zip'].isin(keep)]\ndf_yes?_split_?gen = iter([1, 2, 3])?_split_?"}
{"nl":"How to sort a list of objects , based on an attribute of the objects?","code":"ut.sort(key=lambda x: x.count, reverse=True)","relevant":"for i in range(len(values)):\n    pass?_split_?df_yes = df[df['zip'].isin(keep)]\ndf_no = df[~df['zip'].isin(keep)]\ndf_yes?_split_?gen = iter([1, 2, 3])?_split_?"}
{"nl":"How to sort a list of objects , based on an attribute of the objects?","code":"ut.sort(key=lambda x: x.count, reverse=True)","relevant":"for i in range(len(values)):\n    pass?_split_?df_yes = df[df['zip'].isin(keep)]\ndf_no = df[~df['zip'].isin(keep)]\ndf_yes?_split_?gen = iter([1, 2, 3])?_split_?"}
{"nl":"Click a href button with selenium and python?","code":"driver.find_element_by_partial_link_text('Send').click()","relevant":"if ret < 0:\n    errno = ctypes.get_errno()?_split_?dlist[a][1].append(b)?_split_?set(second_list).difference(dic)?_split_?"}
{"nl":"Click a href button with selenium and python?","code":"driver.findElement(By.linkText('Send InMail')).click()","relevant":"if ret < 0:\n    errno = ctypes.get_errno()?_split_?dlist[a][1].append(b)?_split_?set(second_list).difference(dic)?_split_?"}
{"nl":"Click a href button with selenium and python?","code":"driver.find_element_by_link_text('Send InMail').click()","relevant":"if ret < 0:\n    errno = ctypes.get_errno()?_split_?dlist[a][1].append(b)?_split_?set(second_list).difference(dic)?_split_?"}
{"nl":"Casting an int to a string in Python","code":"'ME' + str(i)","relevant":"y = list(range(8, 20))\nxs = set(x)?_split_?['dog', 'duck', 'duck', 'duck', 'duck', 'goose', 'goose', 'goose']\n[['dog'], ['duck', 'duck', 'duck', 'duck'], ['goose', 'goose', 'goose']]?_split_?df['Slow'] = df.Speed.apply(lambda x: 1 if x == 'Slow' else 0)\ndf['Fast'] = df.Speed.apply(lambda x: 1 if x == 'Fast' else 0)?_split_?"}
{"nl":"Sorting data in DataFrame Pandas","code":"df.sort_values(['System_num', 'Dis'])","relevant":"os.chdir('C:\\\\Users\\\\me\\\\Documents')?_split_?name = models.CharField(max_length=255)?_split_?if x == y:\n    return 0?_split_?"}
{"nl":"Prepend a line to an existing file in Python","code":"open('outfile', 'w').write('#test firstline\\n' + open('infile').read())","relevant":"\"\"\"insert into cnet values ('r', 's', 'e', 'c', 'w', 's', 'i', 'd', 't')\"\"\"?_split_?o = xmltodict.parse('<e> <a>text<\/a> <a>text<\/a> <\/e>')?_split_?def get_information(directory):\n    file_list = []\nfor i in os.listdir(directory):\n    a = os.stat(os.path.join(directory, i))\nfile_list.append([i, time.ctime(a.st_atime), time.ctime(a.st_ctime)])\nreturn file_list\nprint(get_information('\/'))?_split_?"}
{"nl":"Python sort a List by length of value in tuple","code":"l.sort(key=lambda t: len(t[1]), reverse=True)","relevant":"title = content.split('<title>')[1].split('<\/title>')[0].strip()?_split_?it = iter(seq)?_split_?def capitalizeMatch(m):\n    return m.group(0).capitalize()\n\ndef capitalizeWords(s):\n    pass?_split_?"}
{"nl":"Split by suffix with Python regular expression","code":"re.findall('\\\\b(\\\\w+)d\\\\b', s)","relevant":"button.pack()\nself.root.mainloop()?_split_?words = ['fan', 'ban', 'fbn', 'ana', 'and', 'ann']\n\ndef isChildOf(a, b):\n    return sum(map(lambda xy: xy[0] == xy[1], zip(a, b))) >= 2\nresult = defaultdict(set)\nfor word in words:\n    result[word] = {x for x in words if isChildOf(word, x) and x != word}\nfor word in words:\n    pass?_split_?grammar.check_coverage('please turn off the lights'.split())?_split_?"}
{"nl":"python's re: return True if regex contains in the string","code":"bool(re.search('ba[rzd]', 'foobarrrr'))","relevant":"return hashlib.md5(s.encode('utf8')).digest()[0]?_split_?for i in m:\n    pass?_split_?log.addHandler(console_handler)?_split_?"}
{"nl":"Removing duplicates in lists","code":"list(set(t))","relevant":"a = np.arange(15).reshape(5, 3)\nb = np.arange(9).reshape(3, 3)?_split_?from selenium import webdriver\nbrowser = webdriver.Firefox()?_split_?if cookie:\n    pass?_split_?"}
{"nl":"Removing duplicates in lists","code":"list(set(source_list))","relevant":"a = np.arange(15).reshape(5, 3)\nb = np.arange(9).reshape(3, 3)?_split_?from selenium import webdriver\nbrowser = webdriver.Firefox()?_split_?if cookie:\n    pass?_split_?"}
{"nl":"Removing duplicates in lists","code":"list(OrderedDict.fromkeys('abracadabra'))","relevant":"a = np.arange(15).reshape(5, 3)\nb = np.arange(9).reshape(3, 3)?_split_?from selenium import webdriver\nbrowser = webdriver.Firefox()?_split_?if cookie:\n    pass?_split_?"}
{"nl":"How to make List from Numpy Matrix in Python","code":"numpy.array(a).reshape(-1).tolist()","relevant":"def splittedname(s):\n    return tuple(tryint(x) for x in re.split('([0-9]+)', s))?_split_?last_name = models.CharField(max_length=50)?_split_?eX, eY = 30, 60\nbbox = x \/ 2 - eX \/ 2, y \/ 2 - eY \/ 2, x \/ 2 + eX \/ 2, y \/ 2 + eY \/ 2\ndraw = ImageDraw.Draw(im)\ndraw.ellipse(bbox, fill=128)\ndel draw\nim.save('output.png')\nim.show()?_split_?"}
{"nl":"How to make List from Numpy Matrix in Python","code":"numpy.array(a)[0].tolist()","relevant":"def splittedname(s):\n    return tuple(tryint(x) for x in re.split('([0-9]+)', s))?_split_?last_name = models.CharField(max_length=50)?_split_?eX, eY = 30, 60\nbbox = x \/ 2 - eX \/ 2, y \/ 2 - eY \/ 2, x \/ 2 + eX \/ 2, y \/ 2 + eY \/ 2\ndraw = ImageDraw.Draw(im)\ndraw.ellipse(bbox, fill=128)\ndel draw\nim.save('output.png')\nim.show()?_split_?"}
{"nl":"Beautifulsoup - nextSibling","code":"print(soup.find(text='Address:').findNext('td').contents[0])","relevant":"L = [1] * 5?_split_?import sys\nsys.modules['packageA'] = packageA?_split_?import site?_split_?"}
{"nl":"Converting lists of tuples to strings Python","code":"\"\"\" \"\"\".join([('%d@%d' % t) for t in l])","relevant":"reversed_pos_min = np.argmin(reversed_row)?_split_?print('<br>')?_split_?li = []?_split_?"}
{"nl":"Converting lists of tuples to strings Python","code":"\"\"\" \"\"\".join([('%d@%d' % (t[0], t[1])) for t in l])","relevant":"reversed_pos_min = np.argmin(reversed_row)?_split_?print('<br>')?_split_?li = []?_split_?"}
{"nl":"Splinter or Selenium: Can we get current html page after clicking a button?","code":"driver.execute_script('return document.documentElement.outerHTML;')","relevant":"[['string 1', 'atest string:'], ['string 1', 'test 2: anothertest string']]?_split_?return 0?_split_?[next(it) for it in islice(iters, len(a))]\n[next(it) for it in islice(iters, len(a))]?_split_?"}
{"nl":"Find a specific pattern (regular expression) in a list of strings (Python)","code":"[i for i in teststr if re.search('\\\\d+[xX]', i)]","relevant":"from itertools import starmap\nlst = [1, 2, 3]\nprint('\\n'.join(starmap('{}: {}'.format, enumerate(lst))))?_split_?keep = []?_split_?if result:\n    pass?_split_?"}
{"nl":"Selecting with complex criteria from pandas.DataFrame","code":"df['A'][(df['B'] > 50) & (df['C'] == 900)]","relevant":"app.merge(confdict)?_split_?if width == screen.width_in_pixels and height == screen.height_in_pixels:\n    num_of_fs += 1\nprint(num_of_fs)?_split_?self.myobj = origobj?_split_?"}
{"nl":"How to sort dictionaries by keys in Python","code":"sorted(o.items())","relevant":"a = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\na_out = skipped_view(a, 4)?_split_?curl.setopt(curl.USERPWD, '%s:%s' % ('youruser', 'yourpassword'))\ncurl.setopt(curl.WRITEFUNCTION, response_buffer.write)?_split_?f = open('foo.file', 'wb')\nf.seek(-len(os.linesep), os.SEEK_END)?_split_?"}
{"nl":"How to sort dictionaries by keys in Python","code":"sorted(d)","relevant":"a = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\na_out = skipped_view(a, 4)?_split_?curl.setopt(curl.USERPWD, '%s:%s' % ('youruser', 'yourpassword'))\ncurl.setopt(curl.WRITEFUNCTION, response_buffer.write)?_split_?f = open('foo.file', 'wb')\nf.seek(-len(os.linesep), os.SEEK_END)?_split_?"}
{"nl":"How to sort dictionaries by keys in Python","code":"sorted(d.items())","relevant":"a = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\na_out = skipped_view(a, 4)?_split_?curl.setopt(curl.USERPWD, '%s:%s' % ('youruser', 'yourpassword'))\ncurl.setopt(curl.WRITEFUNCTION, response_buffer.write)?_split_?f = open('foo.file', 'wb')\nf.seek(-len(os.linesep), os.SEEK_END)?_split_?"}
{"nl":"convert strings into integers","code":"int('1')","relevant":"false = False?_split_?t1.start()\nt2.start()\nt1.join()\nt2.join()?_split_?return np.asarray(res)?_split_?"}
{"nl":"convert strings into integers","code":"int()","relevant":"false = False?_split_?t1.start()\nt2.start()\nt1.join()\nt2.join()?_split_?return np.asarray(res)?_split_?"}
{"nl":"convert strings into integers","code":"T2 = [map(int, x) for x in T1]","relevant":"false = False?_split_?t1.start()\nt2.start()\nt1.join()\nt2.join()?_split_?return np.asarray(res)?_split_?"}
{"nl":"How to call a shell script from python code?","code":"subprocess.call(['.\/test.sh'])","relevant":"major, minor, micro, releaselevel, serial = sys.version_info?_split_?scrollbar = tk.Scrollbar(root, orient='vertical')?_split_?(12, 'H', 97.79700070323196), (13, 'H', 108.2841293816308)?_split_?"}
{"nl":"How to call a shell script from python code?","code":"subprocess.call(['notepad'])","relevant":"major, minor, micro, releaselevel, serial = sys.version_info?_split_?scrollbar = tk.Scrollbar(root, orient='vertical')?_split_?(12, 'H', 97.79700070323196), (13, 'H', 108.2841293816308)?_split_?"}
{"nl":"Interleaving two lists in Python","code":"[val for pair in zip(l1, l2) for val in pair]","relevant":"zeros_and_ones = numpy.zeros([width, height])?_split_?rdd.map(process).foreachPartition(store_partition)?_split_?rgbArray[..., (2)] = b * 256\nimg = Image.fromarray(rgbArray)\nimg.save('myimg.jpeg')?_split_?"}
{"nl":"Base64 encoding in Python 3","code":"encoded = base64.b64encode('data to be encoded')","relevant":"from tornado.web import RequestHandler\nfrom decorators import is_ajax\n\n\nclass MyHandler(RequestHandler):\n    pass?_split_?app = Klein()?_split_?import number\n\ndef isnumber(x):\n    return isinstance(x, number.Number)?_split_?"}
{"nl":"Base64 encoding in Python 3","code":"encoded = 'data to be encoded'.encode('ascii')","relevant":"from tornado.web import RequestHandler\nfrom decorators import is_ajax\n\n\nclass MyHandler(RequestHandler):\n    pass?_split_?app = Klein()?_split_?import number\n\ndef isnumber(x):\n    return isinstance(x, number.Number)?_split_?"}
{"nl":"Parsing CSV \/ tab-delimited txt file with Python","code":"lol = list(csv.reader(open('text.txt', 'rb'), delimiter='\\t'))","relevant":"data = \"\"\"\n<ol>\n<li>a<\/li>\n<li>b<\/li>\n<li>c<\/li>\n<li>d<\/li>\n<\/ol>\n\"\"\"\ntree = ET.fromstring(data)?_split_?def wrapper(self, *args, **kwargs):\n    auth_id = self.request.cookies.get('auth_id', '')?_split_?l1 = list(range(10))?_split_?"}
{"nl":"Python - Access object attributes as in a dictionary","code":"getattr(my_object, my_str)","relevant":"\"\"\"I'm sorry, but you don't have enough dollars to buy that item.\"\"\"?_split_?def open_xls_as_xlsx(filename):\n    book = xlrd.open_workbook(filename)\nindex = 0\nnrows, ncols = 0, 0\nwhile nrows * ncols == 0:\n    sheet = book.sheet_by_index(index)\nnrows = sheet.nrows\nncols = sheet.ncols\nindex += 1\nbook1 = Workbook()\nsheet1 = book1.get_active_sheet()\nfor row in range(0, nrows):\n    for col in range(0, ncols):\n        sheet1.cell(row=row, column=col).value = sheet.cell_value(row, col)\nreturn book1?_split_?args = parse.parse_args()?_split_?"}
{"nl":"list of dicts to\/from dict of lists","code":"print(dict(zip(LD[0], zip(*[list(d.values()) for d in LD]))))","relevant":"ctx = krbV.default_context()\ncc = ctx.default_ccache()?_split_?ngroups = (d.shape[0] - (consec + (nsub - 1) * offset - 1)) \/\/ pace?_split_?@app.route('\/transform-file', methods=['POST'])\ndef transform():\n    pass?_split_?"}
{"nl":"How do I sum the first value in each tuple in a list of tuples in Python?","code":"sum([pair[0] for pair in list_of_pairs])","relevant":"return dt + datetime.timedelta(0, rounding - seconds, -dt.microsecond)?_split_?def send_email(self, sender, instance, created, **kwargs):\n    if created:\n        pass?_split_?ax.set_zlim3d(0, 1000)?_split_?"}
{"nl":"Convert unicode string dictionary into dictionary in python","code":"d = ast.literal_eval(\"{'code1':1,'code2':1}\")","relevant":"N = 100000\nbits = random.getrandbits(N)?_split_?from functools import reduce\ncum = reduce(accum, [s.split(', ') for s in data], defaultdict(int))?_split_?b = myarray[i2][j2]?_split_?"}
{"nl":"Find all words in a string that start with the $ sign in Python","code":"[word for word in mystring.split() if word.startswith('$')]","relevant":"src = cv2.imread('\/directorypath\/image.bmp')?_split_?arg_test(a=1, b=2, c=3)?_split_?def __init__(self):\n    pass?_split_?"}
{"nl":"How to remove any URL within a string in Python","code":"text = re.sub('^https?:\\\\\/\\\\\/.*[\\\\r\\\\n]*', '', text, flags=re.MULTILINE)","relevant":"return self.user_id == other.user_id?_split_?self.var = 0?_split_?im = Image.open('\/home\/seif\/Pictures\/prw.jpg')\nbuffer = StringIO.StringIO()\nim.save(buffer, format='PNG')\nbuffer.seek(0)\ncr.save()\ncr.set_source_surface(ImageSurface.create_from_png(buffer))\ncr.paint()?_split_?"}
{"nl":"How to find all elements in a numpy 2-dimensional array that match a certain list?","code":"np.where(np.in1d(A, [1, 3, 4]).reshape(A.shape), A, 0)","relevant":"SetWindowPos(window.winId(), win32con.HWND_TOPMOST, 0, 0, 0, 0, win32con.\n    SWP_NOMOVE | win32con.SWP_NOSIZE | win32con.SWP_SHOWWINDOW)?_split_?a = SomeKindOfClass()\na.some_expensive_function()\narray[index] = a.output\n\ndef main():\n    n = 8\nmanager = multiprocessing.Manager()\narray = manager.list([0] * n)\npool = multiprocessing.Pool(4)\npool.map(worker, [(i, array) for i in range(n)])\nprint(array)?_split_?test2 = [{'A': ['a', 'b']}, {'B': 'b'}]\nyaml.dump(test2)\nimport sys?_split_?"}
{"nl":"Calculate mean across dimension in a 2D array","code":"np.mean(a, axis=1)","relevant":"print(list(sub_findre(s, substring, 2)))\n['SSPQ', 'SPQQ', 'QQQP', 'SSSS', 'SSSQ', 'SSQQ', 'SQQQ', 'SSQP', 'PSQS',\n    'SSQP', 'SSQP', 'SQPP', 'SSSS', 'SSSQ', 'SSQP', 'PSQS', 'SSQP', 'SSSS',\n    'SSSQ', 'SSQP', 'PSQS', 'SSQP', 'SSSS', 'SSSQ', 'SSQP', 'PSQ']?_split_?print(lastHourDateTime.strftime('%Y-%m-%d %H:%M:%S'))?_split_?some_dict = {'abc4589': 4578, 'abc7812': 798, 'kjuy45763': 1002}\nanother_dict = {'boumboum14': 'WSZE x478', 'tagada4783': 'ocean11',\n    'maracuna102455': None}\nstill_another = {(12): 'jfg', (45): 'klsjgf'}\nname, obj = None, None\nselected_dicos = [(name, obj) for name, obj in globals().items() if \n    type(obj) == dict and all(type(x) == str for x in obj.keys())]\nprint('names of selected_dicos ==', [name for name, obj in selected_dicos])\nfor k, v in selected_dicos:\n    globals()[k] = MyDict(v)\nprint(\"some_dict['7812'] ==\", some_dict['7812'])?_split_?"}
{"nl":"Running R script from python","code":"subprocess.call(['\/usr\/bin\/Rscript', '--vanilla', '\/pathto\/MyrScript.r'])","relevant":"name = StringField()?_split_?if sublist not in b:\n    b.append(sublist)?_split_?plt.show()?_split_?"}
{"nl":"Running R script from python","code":"subprocess.call('\/usr\/bin\/Rscript --vanilla \/pathto\/MyrScript.r', shell=True)","relevant":"name = StringField()?_split_?if sublist not in b:\n    b.append(sublist)?_split_?plt.show()?_split_?"}
{"nl":"How to add a header to a csv file in Python?","code":"writer.writeheader()","relevant":"dct['a'] = 1\ndct['b'] = 2?_split_?ax.grid(clip_on=False, marker='o', markersize=10)\nplt.savefig('crosses.png')\nplt.show()?_split_?x = np.arange(100)\ny = x * 0.6\nplt.scatter(x, y, c='b')\nplt.scatter(x, y - np.std(y), c='y')?_split_?"}
{"nl":"Pandas Dataframe: Replacing NaN with row average","code":"df.fillna(df.mean(axis=1), axis=1)","relevant":"if ordinal > 59:\n    ordinal -= 1?_split_?ACTOR_CACHE_KEY_PREFIX = 'actor_'?_split_?install('mypackagename')?_split_?"}
{"nl":"Python: Converting Epoch time into the datetime","code":"time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(1347517370))","relevant":"mixins.RetrieveModelMixin,?_split_?intids = getUtility(IIntIds)\nsource.relatedItems = [RelationValue(self.intids.getId(target))]?_split_?results = Queue()?_split_?"}
{"nl":"Calling a base class's classmethod in Python","code":"super(Derived, cls).do(a)","relevant":"doc = docx.Document(filename)?_split_?A[:, (list(range(3)) + [6, 7])]?_split_?pass?_split_?"}
{"nl":"selecting rows in numpy ndarray based on the value of two columns","code":"a[np.where((a[:, (0)] == 0) * (a[:, (1)] == 1))]","relevant":"l.debug('Format this message {0}', 1)?_split_?sorted(a, key=my_key)?_split_?import cv2, sys?_split_?"}
{"nl":"Python regex separate space-delimited words into a list","code":"re.split(' +', 'hello world sample text')","relevant":"[f(0) for f in fs]?_split_?server.starttls()?_split_?from datetime import date, timedelta?_split_?"}
{"nl":"Length of longest word in a list","code":"len(max(words, key=len))","relevant":"a = [[]] * 10?_split_?layout = device.get_result()?_split_?System.out.println(map.keySet())?_split_?"}
{"nl":"accessing python dictionary","code":"result[0]['from_user']","relevant":"ax1 = fig.add_subplot(111)?_split_?class UserSerializer(serializers.ModelSerializer):\n    pass?_split_?with open(filename, 'r') as f:\n    pass?_split_?"}
{"nl":"Save line in file to list","code":"[line.split() for line in open('File.txt')]","relevant":"def f(name, value):\n    item[name] = value?_split_?Post.objects.annotate(target_date=ExpressionWrapper(timezone.now() - F(\n    'plan__days'), output_field=DateTimeField())).filter(createdAt__lte=F(\n    'target_date'))?_split_?from openpyxl import Workbook?_split_?"}
{"nl":"Python: Best Way to Exchange Keys with Values in a Dictionary?","code":"res = dict((v, k) for k, v in a.items())","relevant":"x = numpy.random.rand(100, 5)\nnumpy.random.shuffle(x)\ntraining, test = x[:80, :], x[80:, :]?_split_?return list(range(1, n + 1, 2))?_split_?yaml.add_multi_constructor('!ruby\/object:', construct_ruby_object)\nyaml.add_constructor('!ruby\/sym', construct_ruby_sym)\nstream = file('201203130939.yaml', 'r')\nmydata = yaml.load(stream)\nprint(mydata)?_split_?"}
{"nl":"creating a tmp file in python","code":"new_file = open('path\/to\/FILE_NAME.ext', 'w')","relevant":"return df?_split_?f = theano.function([temp], hy)?_split_?l = [[1, 2, 3], [1, 3, 4], [1, 4, 5], [2, 4, 3], [2, 5, 6], [2, 1, 3]]\nd = SortedDict()\nfor sub in l:\n    k = sub[0]\nif k not in d or sub[1] < d[k][1]:\n    d[k] = sub\nprint(list(d.values()))?_split_?"}
{"nl":"How to count distinct values in a column of a pandas group by object?","code":"df.groupby(['col1', 'col2'])['col3'].nunique().reset_index()","relevant":"def test4(u, v):\n    mysum = 0?_split_?cursor.execute('SELECT username, password FROM galaxy_user')\nnames, passw = zip(*cursor.fetchall())\ndb.close()?_split_?bad_example = {'foo': 'bar', 'hello': 'world'}?_split_?"}
{"nl":"Check for a key pattern in a dictionary in python","code":"any(key.startswith('EMP$$') for key in dict1)","relevant":"clone_field_list('fieldset:last')?_split_?n = decimal.Decimal('54.12')?_split_?self.name_list.pop(index)?_split_?"}
{"nl":"Check for a key pattern in a dictionary in python","code":"[value for key, value in list(dict1.items()) if key.startswith('EMP$$')]","relevant":"clone_field_list('fieldset:last')?_split_?n = decimal.Decimal('54.12')?_split_?self.name_list.pop(index)?_split_?"}
{"nl":"python, best way to convert a pandas series into a pandas dataframe","code":"pd.DataFrame({'email': sf.index, 'list': sf.values})","relevant":"logFile.write(text)?_split_?def encodekeyval(key, val):\n    key = urllib.parse.quote(key, '')\nval = urllib.parse.quote(val, '')\nreturn urllib.parse.quote(key + '=' + val, '')\n\ndef signature_base_string(urlstr, oauthdata):\n    sigstr = 'POST&' + urllib.parse.quote(urlstr, '') + '&'?_split_?df.pivot_table(index='saleid', columns='upc', aggfunc='size', fill_value=0)?_split_?"}
{"nl":"printing tab-separated values of a list","code":"print('\\t'.join(map(str, list)))","relevant":"answerlist.append(templist[d])?_split_?get_uuid = HardwareUuid()?_split_?admin.site.unregister(Group)?_split_?"}
{"nl":"Python unicode string with UTF-8?","code":"print('\\xd0\\xbf\\xd1\\x80\\xd0\\xb8'.encode('raw_unicode_escape'))","relevant":"df[df.columns[df.max() > 0]]?_split_?label_input = tf.placeholder(tf.int32, shape=[])\nq = tf.FIFOQueue(100, [tf.float32, tf.int32], shapes=[[100], []])?_split_?def __setitem__(self, key, value):\n    raise KeyError(key)?_split_?"}
{"nl":"Python unicode string with UTF-8?","code":"'Sopet\\xc3\\xb3n'.encode('latin-1').decode('utf-8')","relevant":"df[df.columns[df.max() > 0]]?_split_?label_input = tf.placeholder(tf.int32, shape=[])\nq = tf.FIFOQueue(100, [tf.float32, tf.int32], shapes=[[100], []])?_split_?def __setitem__(self, key, value):\n    raise KeyError(key)?_split_?"}
{"nl":"How to adjust the quality of a resized image in Python Imaging Library?","code":"image = image.resize((x, y), Image.ANTIALIAS)","relevant":"class Choice(models.Model):\n\n    def __unicode__(self):\n        pass?_split_?class timespec(Structure):\n    _fields_ = [('tv_sec', c_long), ('tv_nsec', c_long)]\nres = timespec()?_split_?print('My name is %s' % getframeinfo(currentframe())[2])?_split_?"}
{"nl":"Regex, find pattern only in middle of string","code":"re.findall('n(?<=[^n]n)n+(?=[^n])(?i)', s)","relevant":"if not is_change_currency_displayed:\n    one = WebDriverWait(driver1, 10).until(EC.element_to_be_clickable((By.\n        CLASS_NAME, 'selected-currency')))?_split_?self.response.headers['Content-Type'] = 'text\/plain'?_split_?rpdb2.setbreak(depth=1)?_split_?"}
{"nl":"how to show Percentage in python","code":"print('{0:.0f}%'.format(1.0 \/ 3 * 100))","relevant":"array1 = np.array([10, 11, 200])?_split_?conn.commit()?_split_?def change(self):\n    pass?_split_?"}
{"nl":"Sort a list of dicts by dict values","code":"mylist.sort(key=lambda x: x['title'])","relevant":"return spider?_split_?for colour, array_ in h:\n    if colour in out:\n        out[colour] += array_?_split_?module = imp.load_module(fullname, fp, filename, self._c_ext_tuple)?_split_?"}
{"nl":"Sort a list of dicts by dict values","code":"l.sort(key=lambda x: x['title'])","relevant":"return spider?_split_?for colour, array_ in h:\n    if colour in out:\n        out[colour] += array_?_split_?module = imp.load_module(fullname, fp, filename, self._c_ext_tuple)?_split_?"}
{"nl":"Sort a list of dicts by dict values","code":"l.sort(key=lambda x: (x['title'], x['title_url'], x['id']))","relevant":"return spider?_split_?for colour, array_ in h:\n    if colour in out:\n        out[colour] += array_?_split_?module = imp.load_module(fullname, fp, filename, self._c_ext_tuple)?_split_?"}
{"nl":"finding n largest differences between two lists","code":"heapq.nlargest(10, range(len(l1)), key=lambda i: abs(l1[i] - l2[i]))","relevant":"WSGI = WSGIResource(reactor, reactor.getThreadPool(), app)?_split_?sample = struct.unpack('<h', wav.readframes(1))?_split_?df = df.dot(p_value)?_split_?"}
{"nl":"Finding multiple attributes within the span tag in Python","code":"soup.find_all('span', {'class': 'starGryB sp'})","relevant":"s.sendmail(me, you.split(','), msg.as_string())?_split_?return True\n\ndef on_error(self, status):\n    pass?_split_?v.remove(a)?_split_?"}
{"nl":"Pandas writing dataframe to other postgresql schema","code":"df.to_sql('test', engine, schema='a_schema')","relevant":"websites_urls.append(image['url'])?_split_?[v for v in x if v == v]?_split_?tree = etree.HTML(result.read(), etree.HTMLParser())?_split_?"}
{"nl":"Regular Expression to find brackets in a string","code":"brackets = re.sub('[^(){}[\\\\]]', '', s)","relevant":"if n == 0:\n    os.system('cls')?_split_?my_debug = True?_split_?\"\"\"string\"\"\"?_split_?"}
{"nl":"Removing duplicates from list of lists in Python","code":"list(dict((x[0], x) for x in L).values())","relevant":"threshold(imgrey, imgrey, 100, 255, 0)?_split_?a = np.zeroes(shape=(5, 5), dtype=float)\nfor e in a.flat:\n    pass?_split_?a = np.arange(15).reshape(5, 3)\nb = np.arange(9).reshape(3, 3)?_split_?"}
{"nl":"Reading a file without newlines","code":"[line.rstrip('\\n') for line in file]","relevant":"np.diff(data.value.values)\nnp.diff(data.value)\nnp.diff(data.value.index)?_split_?data = socket.gethostbyname_ex(x)\nprint(\"\"\"\nThe IP Address of the Domain Name is: \"\"\" + repr(data))\nx = input(\"\"\"\nSelect enter to proceed back to Main Menu\n\"\"\")\nif x == '1':\n    exec(compile(open('C:\\\\python\\\\main_menu.py').read(), 'C:\\\\python\\\\main_menu.py', 'exec'))?_split_?class MyOwnTestRunner(DjangoTestSuiteRunner):\n\n    def run_tests(self, test_labels, extra_tests=None, **kwargs):\n        logging.disable(logging.CRITICAL)\nreturn super(MyOwnTestRunner, self).run_tests(test_labels, extra_tests, **\n    kwargs)?_split_?"}
{"nl":"get item's position in a list","code":"[i for (i, x) in enumerate(testlist) if (x == 1)]","relevant":"num = np.array([data_id[datum] for datum in data])?_split_?yield key, getattr(self, key)?_split_?trainer = BackpropTrainer(net, ds, learningrate=0.05, momentum=0.99)?_split_?"}
{"nl":"get item's position in a list","code":"[i for (i, x) in enumerate(testlist) if (x == 1)]","relevant":"num = np.array([data_id[datum] for datum in data])?_split_?yield key, getattr(self, key)?_split_?trainer = BackpropTrainer(net, ds, learningrate=0.05, momentum=0.99)?_split_?"}
{"nl":"get item's position in a list","code":"for i in [i for (i, x) in enumerate(testlist) if (x == 1)]:\n    pass","relevant":"num = np.array([data_id[datum] for datum in data])?_split_?yield key, getattr(self, key)?_split_?trainer = BackpropTrainer(net, ds, learningrate=0.05, momentum=0.99)?_split_?"}
{"nl":"get item's position in a list","code":"for i in (i for (i, x) in enumerate(testlist) if (x == 1)):\n    pass","relevant":"num = np.array([data_id[datum] for datum in data])?_split_?yield key, getattr(self, key)?_split_?trainer = BackpropTrainer(net, ds, learningrate=0.05, momentum=0.99)?_split_?"}
{"nl":"get item's position in a list","code":"gen = (i for (i, x) in enumerate(testlist) if (x == 1))\nfor i in gen:\n    pass","relevant":"num = np.array([data_id[datum] for datum in data])?_split_?yield key, getattr(self, key)?_split_?trainer = BackpropTrainer(net, ds, learningrate=0.05, momentum=0.99)?_split_?"}
{"nl":"get item's position in a list","code":"print(testlist.index(element))","relevant":"num = np.array([data_id[datum] for datum in data])?_split_?yield key, getattr(self, key)?_split_?trainer = BackpropTrainer(net, ds, learningrate=0.05, momentum=0.99)?_split_?"}
{"nl":"get item's position in a list","code":"try:\n    print(testlist.index(element))\nexcept ValueError:\n    pass","relevant":"num = np.array([data_id[datum] for datum in data])?_split_?yield key, getattr(self, key)?_split_?trainer = BackpropTrainer(net, ds, learningrate=0.05, momentum=0.99)?_split_?"}
{"nl":"Find the maximum value in a list of tuples in Python","code":"max(lis, key=lambda item: item[1])[0]","relevant":"for b in bases:\n    if isinstance(b, deprecated_base_class):\n        pass?_split_?b = set(a)\nb?_split_?\"\"\"Everything a single user does\"\"\"?_split_?"}
{"nl":"Find the maximum value in a list of tuples in Python","code":"max(lis, key=itemgetter(1))[0]","relevant":"for b in bases:\n    if isinstance(b, deprecated_base_class):\n        pass?_split_?b = set(a)\nb?_split_?\"\"\"Everything a single user does\"\"\"?_split_?"}
{"nl":"How do I simulate a progress counter in a command line application in Python?","code":"time.sleep(1)","relevant":"response = test_client.get(url_for('whatever.url'), follow_redirects=True)?_split_?sanitised_filename = sanitise_filesystem_name(filename)?_split_?with open('myfile.tmx', 'w') as f:\n    pass?_split_?"}
{"nl":"Tuple conversion to a string","code":"\"\"\", \"\"\".join('(' + ', '.join(i) + ')' for i in L)","relevant":"res = urllib.request.urlopen(req)?_split_?iterator = (i * i for i in range(100) if i % 3 == 0)?_split_?xd.sheet_names\ndf = xd.parse(xd.sheet_names[-1], header=None)\ndf?_split_?"}
{"nl":"Default value for field in Django model","code":"b = models.CharField(max_length=7, default='0000000', editable=False)","relevant":"class A(Base):\n    __tablename__ = 'a'\nid = Column(Integer, primary_key=True)?_split_?import clr\nimport foo?_split_?content_length = int(response.getheader('Content-Length', '0'))?_split_?"}
{"nl":"How do I perform secondary sorting in python?","code":"sorted(list5, lambda x: (degree(x), x))","relevant":"{{my_floatvar | unlocalize}}?_split_?exists('moo', 'ooo')?_split_?to_date = from_date + datetime.timedelta(days=1)?_split_?"}
{"nl":"How do I perform secondary sorting in python?","code":"sorted(list5, key=lambda vertex: (degree(vertex), vertex))","relevant":"{{my_floatvar | unlocalize}}?_split_?exists('moo', 'ooo')?_split_?to_date = from_date + datetime.timedelta(days=1)?_split_?"}
{"nl":"Python: convert list to generator","code":"(n for n in [1, 2, 3, 5])","relevant":"result_list = [elements[i] for i in indices]?_split_?column_names = [row[0] for row in cursor]?_split_?print('reply2')?_split_?"}
{"nl":"Remove multiple items from list in Python","code":"newlist = [v for i, v in enumerate(oldlist) if i not in removelist]","relevant":"current_observation = tf.gather(values, current_index)?_split_?date_parser = lambda x: datetime.datetime.strptime('2001 ' + x, '%Y %j %H%M %S'\n    )\ncolumns = ['station', 'julian_day', 'hours', 'seconds', 'U', 'Ud', 'T', 'RH']?_split_?class BitsInteger:\n    \"\"\"BitsInteger docstring\"\"\"\n\ndef __init__(self, num):\n    pass\n\ndef singleton(cls):\n    return cls()\n\n@wrapt.decorator\ndef singletonfunction(func):\n    return func()?_split_?"}
{"nl":"Deleting a specific line in a file (python)","code":"f = open('yourfile.txt', 'w')","relevant":"lis = [[1], [1, 2], [1, 2, 3]]?_split_?'cag', 'cgu', 'cgc', 'cga', 'cgg', 'auu', 'auc', 'aua', 'acu'?_split_?l = []\nfor i in range(1000):\n    pass?_split_?"}
{"nl":"Attribute getters in python","code":"getattr(obj, 'attr')","relevant":"nesting_grounds = 'Throatwarbler Man Grove'?_split_?def get(self, File_Name):\n    File = open(File_Name, 'r')\nself.write(File.read())\nFile.close()\n\ndef post(self, File_Name):\n    File = open(File_Name, 'r')\nself.write(File.read())\nFile.close()?_split_?class MyForm(forms.Form):\n    password = forms.CharField(widget=forms.PasswordInput)\n\ndef __init__(self, user, *args, **kwargs):\n    super(MyForm, self).__init__(*args, **kwargs)\nself.user = user\n\ndef clean_password(self):\n    valid = self.user.check_password(self.cleaned_data['password'])\nif not valid:\n    raise forms.ValidationError('Password Incorrect')\nreturn valid?_split_?"}
{"nl":"How do I convert tuple of tuples to list in one line (pythonic)?","code":"from functools import reduce\nreduce(lambda a, b: a + b, (('aa',), ('bb',), ('cc',)))","relevant":"return False?_split_?return json.load(*args, **kwargs)?_split_?print('connected to host (%s) in %0.2f seconds:' % (host, time.time() - t0))?_split_?"}
{"nl":"How do I convert tuple of tuples to list in one line (pythonic)?","code":"map(lambda a: a[0], (('aa',), ('bb',), ('cc',)))","relevant":"return False?_split_?return json.load(*args, **kwargs)?_split_?print('connected to host (%s) in %0.2f seconds:' % (host, time.time() - t0))?_split_?"}
{"nl":"Python Pandas: How to replace a characters in a column of a dataframe?","code":"df['range'].replace(',', '-', inplace=True)","relevant":"class CantTouchThis(type):\n    pass?_split_?import re\nstring = '  blah, lots  ,  of ,  spaces, here '?_split_?def __init__(self, *args, **kwargs):\n    super(SomeForm, self).__init__(*args, **kwargs)\nmock_initial = kwargs['initial']['field']\nself.fields['mock_field'].choices = [(mock_initial, mock_initial)]?_split_?"}
{"nl":"inverse of zip","code":"zip(*[('a', 1), ('b', 2), ('c', 3), ('d', 4)])","relevant":"def setter(self, value):\n    pass?_split_?super(B, obj_a).my_method()?_split_?from enchant.checker import SpellChecker\nmy_dict = DictWithPWL('en_US', 'mywords.txt')\nmy_checker = SpellChecker(my_dict)\nmy_checker.set_text('This is sme sample txt with erors.')\nfor error in my_checker:\n    pass?_split_?"}
{"nl":"inverse of zip","code":"zip(*[('a', 1), ('b', 2), ('c', 3), ('d', 4)])","relevant":"def setter(self, value):\n    pass?_split_?super(B, obj_a).my_method()?_split_?from enchant.checker import SpellChecker\nmy_dict = DictWithPWL('en_US', 'mywords.txt')\nmy_checker = SpellChecker(my_dict)\nmy_checker.set_text('This is sme sample txt with erors.')\nfor error in my_checker:\n    pass?_split_?"}
{"nl":"inverse of zip","code":"result = ([a for (a, b) in original], [b for (a, b) in original])","relevant":"def setter(self, value):\n    pass?_split_?super(B, obj_a).my_method()?_split_?from enchant.checker import SpellChecker\nmy_dict = DictWithPWL('en_US', 'mywords.txt')\nmy_checker = SpellChecker(my_dict)\nmy_checker.set_text('This is sme sample txt with erors.')\nfor error in my_checker:\n    pass?_split_?"}
{"nl":"inverse of zip","code":"result = ((a for (a, b) in original), (b for (a, b) in original))","relevant":"def setter(self, value):\n    pass?_split_?super(B, obj_a).my_method()?_split_?from enchant.checker import SpellChecker\nmy_dict = DictWithPWL('en_US', 'mywords.txt')\nmy_checker = SpellChecker(my_dict)\nmy_checker.set_text('This is sme sample txt with erors.')\nfor error in my_checker:\n    pass?_split_?"}
{"nl":"inverse of zip","code":"zip(*[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e',)])","relevant":"def setter(self, value):\n    pass?_split_?super(B, obj_a).my_method()?_split_?from enchant.checker import SpellChecker\nmy_dict = DictWithPWL('en_US', 'mywords.txt')\nmy_checker = SpellChecker(my_dict)\nmy_checker.set_text('This is sme sample txt with erors.')\nfor error in my_checker:\n    pass?_split_?"}
{"nl":"inverse of zip","code":"map(None, *[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e',)])","relevant":"def setter(self, value):\n    pass?_split_?super(B, obj_a).my_method()?_split_?from enchant.checker import SpellChecker\nmy_dict = DictWithPWL('en_US', 'mywords.txt')\nmy_checker = SpellChecker(my_dict)\nmy_checker.set_text('This is sme sample txt with erors.')\nfor error in my_checker:\n    pass?_split_?"}
{"nl":"Python JSON serialize a Decimal object","code":"json.dumps(Decimal('3.9'))","relevant":"sample.sum()?_split_?s.substitute(who='tim', what='kung pao')?_split_?mynamedtuple = collections.namedtuple('mynamedtuple', ('val1', 'val2',\n    'val3', 'box'))\nsomenamedtuple = mynamedtuple('a1', 'a2', 'a3', ['d1', 'e1', 'f1'])\nsomenamedtuple.box?_split_?"}
{"nl":"Add key to a dictionary","code":"d['mynewkey'] = 'mynewvalue'","relevant":"if not self.subject_init:\n    pass?_split_?class Meta(type):\n    pass?_split_?\"\"\"Load plugin from directory and return list of modules\"\"\"\nfiles = os.listdir(path)\ntest = re.compile('.py$', re.IGNORECASE)?_split_?"}
{"nl":"Add key to a dictionary","code":"data.update({'a': 1, })","relevant":"if not self.subject_init:\n    pass?_split_?class Meta(type):\n    pass?_split_?\"\"\"Load plugin from directory and return list of modules\"\"\"\nfiles = os.listdir(path)\ntest = re.compile('.py$', re.IGNORECASE)?_split_?"}
{"nl":"Add key to a dictionary","code":"data.update(dict(a=1))","relevant":"if not self.subject_init:\n    pass?_split_?class Meta(type):\n    pass?_split_?\"\"\"Load plugin from directory and return list of modules\"\"\"\nfiles = os.listdir(path)\ntest = re.compile('.py$', re.IGNORECASE)?_split_?"}
{"nl":"Add key to a dictionary","code":"data.update(a=1)","relevant":"if not self.subject_init:\n    pass?_split_?class Meta(type):\n    pass?_split_?\"\"\"Load plugin from directory and return list of modules\"\"\"\nfiles = os.listdir(path)\ntest = re.compile('.py$', re.IGNORECASE)?_split_?"}
{"nl":"Is there a one line code to find maximal value in a matrix?","code":"max([max(i) for i in matrix])","relevant":"\"\"\"<form action=\"\/upload\" enctype=\"multipart\/form-data\" method=\"post\"><input type=\"file\" name=\"file\"\/><input type=\"submit\" \/><\/form>\"\"\"?_split_?if 'Cache-Control' not in response.headers:\n    response.headers['Cache-Control'] = 'public, max-age=600'\nreturn response?_split_?self.legend.figure.canvas.draw()?_split_?"}
{"nl":"Python - how to round down to 2 decimals","code":"answer = str(round(answer, 2))","relevant":"from email.utils import parsedate_tz, mktime_tz, formatdate?_split_?from django.db.models import Count, Sum?_split_?class MessageModel(Base):\n    __tablename__ = 'messages'\nplayer_id = Column(Integer, ForeignKey('chats.id'), nullable=False)\nmessage = Column(String(2000), nullable=False)?_split_?"}
{"nl":"Extract IP address from an html string (python)","code":"ip = re.findall('[0-9]+(?:\\\\.[0-9]+){3}', s)","relevant":"import scipy.optimize as optimize?_split_?class Inner(EmbeddedDocument):\n    pass?_split_?for node in iternodes():\n    pass?_split_?"}
{"nl":"How do I filter a pandas DataFrame based on value counts?","code":"df.groupby('A').filter(lambda x: len(x) > 1)","relevant":"break?_split_?return super(WSGIEnvironment, self).__call__(environ, start_response)\napplication = WSGIEnvironment()?_split_?s2 += e * e?_split_?"}
{"nl":"Converting a string into a list in Python","code":"[x for x in myfile.splitlines() if x != '']","relevant":"ans = input('Make A Choice')?_split_?form_pswd = driver.find_element_by_name('userpwd')?_split_?try:\n    server.serve_forever()\nfinally:\n    info('quit.')\nif __name__ == '__main__':\n    test()?_split_?"}
{"nl":"Converting a string into a list in Python","code":"lst = map(int, open('filename.txt').readlines())","relevant":"ans = input('Make A Choice')?_split_?form_pswd = driver.find_element_by_name('userpwd')?_split_?try:\n    server.serve_forever()\nfinally:\n    info('quit.')\nif __name__ == '__main__':\n    test()?_split_?"}
{"nl":"Adding Colorbar to a Spectrogram","code":"plt.colorbar(mappable=mappable, cax=ax3)","relevant":"url('^accounts\/register\/$', RegistrationView.as_view(form_class=\n    RegistrationFormUniqueEmail), name='registration_register'),\nurl('^accounts\/', include('registration.backends.default.urls')),?_split_?sorted(Thing.objects.all(), key=lambda t: t.name)?_split_?fields = 'album_name', 'artist', 'tracks'?_split_?"}
{"nl":"Count most frequent 100 words from sentences in Dataframe Pandas","code":"Counter(' '.join(df['text']).split()).most_common(100)","relevant":"print_data(data)?_split_?self.context.pop()?_split_?yag = yagmail.SMTP('me@gmail.com', 'mypassword')\nfor i in range(20):\n    message += '\\xc2\\xa0' * 50\nmessage += '<br\/>'?_split_?"}
{"nl":"Python split a string using regex","code":"re.findall('(.+?):(.+?)\\\\b ?', text)","relevant":"def leak_memory():\n    pass?_split_?print(mystring[-1])\nprint(mystring[2:3])\nprint(mystring[2:4])?_split_?def wrapper(*args, **kwargs):\n    rv = func(*args, **kwargs)?_split_?"}
{"nl":"Generate all subsets of size k (containing k elements) in Python","code":"list(itertools.combinations((1, 2, 3), 2))","relevant":"last_max = 0\nwhile i >= max:\n    last_max = max\nmax = n * (max + 1)\ndigits += 1\nresult = ''\ni -= last_max\nwhile digits:\n    digits -= 1\nresult = seq[i % n] + result\ni \/\/= n\nreturn result?_split_?class ClosestDict(dict):\n\n    def get(self, key):\n        key = min(iter(self.keys()), key=lambda x: abs(x - key))\nreturn dict.get(self, key)?_split_?x.set(a)?_split_?"}
{"nl":"Python: How to get a value of datetime.today() that is \"timezone aware\"?","code":"datetime.now(pytz.utc)","relevant":"@app.route('\/static\/<subdir>\/<path:filename>\/')\ndef static_subdir(subdir=None, filename=None):\n    directory = app.config['STATIC_FOLDER'] + subdir?_split_?import os\nif os.name == 'nt':\n\n\n    class Pwd:\n        pass?_split_?data = b.getvalue()?_split_?"}
{"nl":"Python: How to remove empty lists from a list?","code":"list2 = [x for x in list1 if x != []]","relevant":"return '#%02X%02X%02X' % (r, g, b)?_split_?import pytz\nfrom pytz import timezone\nquery = GuestMessage.all().get()\ncurrent = query.date\nuser_tz = timezone('Asia\/Singapore')\ncurrent = current.replace(tzinfo=pytz.utc).astimezone(user_tz)\nself.response.write(current.strftime('%Y-%m-%d %H:%M:%S %z'))\nself.response.write(current.strftime('%Y-%m-%d %H:%M:%S %Z'))?_split_?bbox = x \/ 2 - eX \/ 2, y \/ 2 - eY \/ 2, x \/ 2 + eX \/ 2, y \/ 2 + eY \/ 2\ndraw = ImageDraw.Draw(im)\ndraw.ellipse(bbox, fill=128)\ndel draw\nim.save('output.png')\nim.show()?_split_?"}
{"nl":"Python: How to remove empty lists from a list?","code":"list2 = [x for x in list1 if x]","relevant":"return '#%02X%02X%02X' % (r, g, b)?_split_?import pytz\nfrom pytz import timezone\nquery = GuestMessage.all().get()\ncurrent = query.date\nuser_tz = timezone('Asia\/Singapore')\ncurrent = current.replace(tzinfo=pytz.utc).astimezone(user_tz)\nself.response.write(current.strftime('%Y-%m-%d %H:%M:%S %z'))\nself.response.write(current.strftime('%Y-%m-%d %H:%M:%S %Z'))?_split_?bbox = x \/ 2 - eX \/ 2, y \/ 2 - eY \/ 2, x \/ 2 + eX \/ 2, y \/ 2 + eY \/ 2\ndraw = ImageDraw.Draw(im)\ndraw.ellipse(bbox, fill=128)\ndel draw\nim.save('output.png')\nim.show()?_split_?"}
{"nl":"Django view returning json without using template","code":"return HttpResponse(data, mimetype='application\/json')","relevant":"ax = plt.axes()?_split_?import sqlite3\ndates = ['2001-01-01', '2002-02-02']\nqry = 'select * from aaa where open in ({})'\nconn = sqlite3.connect('D:\\\\temp\\\\.data\\\\a.sqlite')\ndf = pd.read_sql(qry.format(','.join(list('?' * len(dates)))), conn, params\n    =dates)?_split_?for i in populations:\n    if populations[i][1] == populations[i][0]:\n        pass?_split_?"}
{"nl":"regex to get all text outside of brackets","code":"re.findall('(.*?)\\\\[.*?\\\\]', example_str)","relevant":"s, e = edges.T\ns, e = np.concatenate([edges, edges[:, ::-1]], axis=0).T?_split_?for poss in itertools.product(alphabet, repeat=num):\n    pass?_split_?a = set()\na.add(1)?_split_?"}
{"nl":"regex to get all text outside of brackets","code":"re.findall('(.*?)(?:\\\\[.*?\\\\]|$)', example_str)","relevant":"s, e = edges.T\ns, e = np.concatenate([edges, edges[:, ::-1]], axis=0).T?_split_?for poss in itertools.product(alphabet, repeat=num):\n    pass?_split_?a = set()\na.add(1)?_split_?"}
{"nl":"Matching multiple regex patterns with the alternation operator?","code":"re.findall('\\\\(.+?\\\\)|\\\\w', '(zyx)bc')","relevant":"obj = result.json()?_split_?myList = ['a', 'b', 'c']\nmyCounter = 5?_split_?f = io.open('file.txt', 'w', newline='')?_split_?"}
{"nl":"Matching multiple regex patterns with the alternation operator?","code":"re.findall('\\\\((.*?)\\\\)|(\\\\w)', '(zyx)bc')","relevant":"obj = result.json()?_split_?myList = ['a', 'b', 'c']\nmyCounter = 5?_split_?f = io.open('file.txt', 'w', newline='')?_split_?"}
{"nl":"Matching multiple regex patterns with the alternation operator?","code":"re.findall('\\\\(.*?\\\\)|\\\\w', '(zyx)bc')","relevant":"obj = result.json()?_split_?myList = ['a', 'b', 'c']\nmyCounter = 5?_split_?f = io.open('file.txt', 'w', newline='')?_split_?"}
{"nl":"Perform a string operation for every element in a Python list","code":"elements = ['%{0}%'.format(element) for element in elements]","relevant":"@unpacked\ndef foo(*args):\n    pass?_split_?if isinstance(item, tuple):\n    pass?_split_?imtag = re.match('<img.*?>', line).group(0)?_split_?"}
{"nl":"start python script as background process from within a python script","code":"subprocess.Popen(['background-process', 'arguments'])","relevant":"wb = Workbook()?_split_?newitem.setBackground(QtGui.QColor(100, 150, 100))?_split_?mainarea.pack(expand=True, fill='both', side='right')?_split_?"}
{"nl":"Python dictionary: Get list of values for list of keys","code":"[mydict[x] for x in mykeys]","relevant":"print('\"' + word + '\"', end=' ')?_split_?master = Tk()?_split_?print('Task Completed!')?_split_?"}
{"nl":"Create dictionary from lists of keys and multiple values","code":"dict([('Name', 'Joe'), ('Age', 22)])","relevant":"cr.arc(100, 100, 80, 0, 2 * math.pi)?_split_?heapq.heapify(h)?_split_?def formatTime(self, _record, _datefmt, precision=3):\n    dt = datetime.datetime.now()?_split_?"}
{"nl":"Numpy - Averaging multiple columns of a 2D array","code":"data.reshape(-1, j).mean(axis=1).reshape(data.shape[0], -1)","relevant":"if s not in newlist2:\n    newlist2.append(s)\nbreak?_split_?varname = 'post'\nvalue = getattr(self, varname)?_split_?1, 3?_split_?"}
{"nl":"Replace all quotes in a string with escaped quotes?","code":"print(s.encode('unicode-escape').replace('\"', '\\\\\"'))","relevant":"client_socket.send(size)?_split_?return?_split_?fprime?_split_?"}
{"nl":"Partitioning a string in Python by a regular expression","code":"re.split('(\\\\W+)', s)","relevant":"button.pack()\nself.root.mainloop()?_split_?words = ['fan', 'ban', 'fbn', 'ana', 'and', 'ann']\n\ndef isChildOf(a, b):\n    return sum(map(lambda xy: xy[0] == xy[1], zip(a, b))) >= 2\nresult = defaultdict(set)\nfor word in words:\n    result[word] = {x for x in words if isChildOf(word, x) and x != word}\nfor word in words:\n    pass?_split_?grammar.check_coverage('please turn off the lights'.split())?_split_?"}
{"nl":"plotting stacked barplots on a panda data frame","code":"df.plot(kind='barh', stacked=True)","relevant":"def local_func():\n    return x\nlocal_func.__globals__.update(locals())\nlocal_func()\nx = 42\nlocal_func()\nlocal_func.__globals__.update(locals())\nlocal_func()?_split_?addthis = 1 if diff > 0 else -1?_split_?container = c.create_container('kermit\/hellonode', name='hello', ports=[1337])?_split_?"}
{"nl":"How to reverse a dictionary in Python?","code":"{i[1]: i[0] for i in list(myDictionary.items())}","relevant":"df = df[reordered]?_split_?LTU = np.genfromtxt('test.txt', delimiter=',')\ncoords = (12.5, 25.5, 137), (13.5, 26.5, 141), (14.5, 25.5, 144)\nxyz = LTU[:, :3]\nval = LTU[:, (3)]\ndel LTU\ntree = cKDTree(xyz)\ndist, ind = tree.query(coords, k=2)\nd1, d2 = dist.T\nv1, v2 = val[ind].T\nv = d1 \/ (d1 + d2) * (v2 - v1) + v1\nprint(v)?_split_?for x in b:\n    d[x] -= 1\nreturn not any(d.values())?_split_?"}
{"nl":"finding index of multiple items in a list","code":"[i for i, j in enumerate(myList) if 'how' in j.lower() or 'what' in j.lower()]","relevant":"root = Tk()\ne = Entry(root)\ne.insert(END, 'default text')\ne.pack()\nroot.mainloop()?_split_?import json?_split_?nx.draw(G)?_split_?"}
{"nl":"find out if a Python object is a string","code":"isinstance(obj, str)","relevant":"from sys import argv\nremove(argv[0])?_split_?tree = ElementTree.Element('tmx', {'version': '1.4a'})\nElementTree.SubElement(tree, 'header', {'adminlang': 'EN'})?_split_?savedir = tkFileDialog.askdirectory(title='Select folder to save results')?_split_?"}
{"nl":"find out if a Python object is a string","code":"isinstance(o, str)","relevant":"from sys import argv\nremove(argv[0])?_split_?tree = ElementTree.Element('tmx', {'version': '1.4a'})\nElementTree.SubElement(tree, 'header', {'adminlang': 'EN'})?_split_?savedir = tkFileDialog.askdirectory(title='Select folder to save results')?_split_?"}
{"nl":"find out if a Python object is a string","code":"(type(o) is str)","relevant":"from sys import argv\nremove(argv[0])?_split_?tree = ElementTree.Element('tmx', {'version': '1.4a'})\nElementTree.SubElement(tree, 'header', {'adminlang': 'EN'})?_split_?savedir = tkFileDialog.askdirectory(title='Select folder to save results')?_split_?"}
{"nl":"find out if a Python object is a string","code":"isinstance(o, str)","relevant":"from sys import argv\nremove(argv[0])?_split_?tree = ElementTree.Element('tmx', {'version': '1.4a'})\nElementTree.SubElement(tree, 'header', {'adminlang': 'EN'})?_split_?savedir = tkFileDialog.askdirectory(title='Select folder to save results')?_split_?"}
{"nl":"find out if a Python object is a string","code":"isinstance(obj_to_test, str)","relevant":"from sys import argv\nremove(argv[0])?_split_?tree = ElementTree.Element('tmx', {'version': '1.4a'})\nElementTree.SubElement(tree, 'header', {'adminlang': 'EN'})?_split_?savedir = tkFileDialog.askdirectory(title='Select folder to save results')?_split_?"}
{"nl":"take the content of a list and append it to another list","code":"list2.extend(list1)","relevant":"a = []\nwhile choice != 0:\n    pass?_split_?class FtpFile(object):\n    _client = None\n\n@classmethod\ndef client(cls):\n    return cls._client\n\n@classmethod\ndef setClient(cls, client):\n    cls._client = client\n\n\nclass FtpFileCommand(FtpFile, sublime_plugin.TextCommand):\n\n    def run(self, args):\n        client = self.client()\n\n\nclass FtpFileEventListener(FtpFile, sublime_plugin.EventListener):\n\n    def run(self, args):\n        client = self.client()?_split_?result = re.search('asdf=5;(.*)123jasd', s)\nprint(result.group(1))?_split_?"}
{"nl":"take the content of a list and append it to another list","code":"list1.extend(mylog)","relevant":"a = []\nwhile choice != 0:\n    pass?_split_?class FtpFile(object):\n    _client = None\n\n@classmethod\ndef client(cls):\n    return cls._client\n\n@classmethod\ndef setClient(cls, client):\n    cls._client = client\n\n\nclass FtpFileCommand(FtpFile, sublime_plugin.TextCommand):\n\n    def run(self, args):\n        client = self.client()\n\n\nclass FtpFileEventListener(FtpFile, sublime_plugin.EventListener):\n\n    def run(self, args):\n        client = self.client()?_split_?result = re.search('asdf=5;(.*)123jasd', s)\nprint(result.group(1))?_split_?"}
{"nl":"take the content of a list and append it to another list","code":"c.extend(a)","relevant":"a = []\nwhile choice != 0:\n    pass?_split_?class FtpFile(object):\n    _client = None\n\n@classmethod\ndef client(cls):\n    return cls._client\n\n@classmethod\ndef setClient(cls, client):\n    cls._client = client\n\n\nclass FtpFileCommand(FtpFile, sublime_plugin.TextCommand):\n\n    def run(self, args):\n        client = self.client()\n\n\nclass FtpFileEventListener(FtpFile, sublime_plugin.EventListener):\n\n    def run(self, args):\n        client = self.client()?_split_?result = re.search('asdf=5;(.*)123jasd', s)\nprint(result.group(1))?_split_?"}
{"nl":"take the content of a list and append it to another list","code":"for line in mylog:\n    list1.append(line)","relevant":"a = []\nwhile choice != 0:\n    pass?_split_?class FtpFile(object):\n    _client = None\n\n@classmethod\ndef client(cls):\n    return cls._client\n\n@classmethod\ndef setClient(cls, client):\n    cls._client = client\n\n\nclass FtpFileCommand(FtpFile, sublime_plugin.TextCommand):\n\n    def run(self, args):\n        client = self.client()\n\n\nclass FtpFileEventListener(FtpFile, sublime_plugin.EventListener):\n\n    def run(self, args):\n        client = self.client()?_split_?result = re.search('asdf=5;(.*)123jasd', s)\nprint(result.group(1))?_split_?"}
{"nl":"Appending tuples to lists","code":"b.append((a[0][0], a[0][2]))","relevant":"from sklearn.externals import joblib?_split_?name = self.request.QUERY_PARAMS.get('name', None)\nif name is not None:\n    queryset = queryset.filter(name=name)\nreturn queryset?_split_?m = 5?_split_?"}
{"nl":"Where do I get a SECRET_KEY for Flask?","code":"app.config['SECRET_KEY'] = 'Your_secret_string'","relevant":"def convert(input):\n    if isinstance(input, dict):\n        return {convert(key): convert(value) for key, value in input.\n            items()}?_split_?f, path = mkstemp()?_split_?sock.close()\napp.run(port=port)?_split_?"}
{"nl":"How to unpack a Series of tuples in Pandas?","code":"pd.DataFrame(out.tolist(), columns=['out-1', 'out-2'], index=out.index)","relevant":"list2 = [['1', '2', '3'], ['4', '5', '6'], ['7', '8']]\nlist3 = [list1] + map(lambda x: x + [''] * (len(list1) - len(x)), list2)\nlist3?_split_?ax.bar(arange(len(grosses)), grosses)?_split_?keys.sort(key=StrictVersion)?_split_?"}
{"nl":"How to find the position of an element in a list , in Python?","code":"[x for x in range(len(stocks_list)) if stocks_list[x] == 'MSFT']","relevant":"query = 'insert into testtable VALUES(?)'\nb = sqlite3.Binary(some_binarydata)?_split_?return values.mean()?_split_?def filtah(x):\n    return x.startswith('three') or x.endswith('four')?_split_?"}
{"nl":"Is it possible to wrap the text of xticks in matplotlib in python?","code":"ax.set_xticklabels(labels, rotation=45)","relevant":"df = pd.DataFrame({'Name': ['A'], 'start': [datetime(2000, 1, 10)], 'end':\n    [datetime(1970, 4, 29)]})\ndf['diff'] = map(lambda td: datetime(1, 1, 1) + td, list(df['start'] - df[\n    'end']))\ndf['diff'] = df['diff'].apply(lambda d: '{0}y{1}m'.format(d.year - 1, d.\n    month - 1))\ndf?_split_?return sum(1 \/ k ** 2 for k in range(1, n + 1))?_split_?print(add_number(A))?_split_?"}
{"nl":"How to remove symbols from a string with Python?","code":"re.sub('[^\\\\w]', ' ', s)","relevant":"print('removed items:', removed)?_split_?import datetime?_split_?ax.set_xticklabels(a)?_split_?"}
{"nl":"get current directory - Python","code":"os.path.basename(os.path.dirname(os.path.realpath(__file__)))","relevant":"data.append(curRow)?_split_?prev = next(itercars)\nfor car in itercars:\n    prev = car?_split_?pipe = r.pipeline()\nfor availability in availabilities:\n    pass?_split_?"}
{"nl":"Regex and Octal Characters","code":"print(re.findall(\"'\\\\\\\\[0-7]{1,3}'\", str))","relevant":"with escapable() as a:\n    for i in range(30):\n        for j in range(30):\n            if i * j > 6:\n                a.escape()?_split_?hist = pd.Series(y, x)?_split_?def virEventLoopNativeRun():\n    while True:\n        libvirt.virEventRunDefaultImpl()\n\ndef virEventLoopNativeStart():\n    global eventLoopThread\nlibvirt.virEventRegisterDefaultImpl()\neventLoopThread = threading.Thread(target=virEventLoopNativeRun, name=\n    'libvirtEventLoop')\neventLoopThread.setDaemon(True)\neventLoopThread.start()\nif __name__ == '__main__':\n    virEventLoopNativeStart()?_split_?"}
{"nl":"Python split string based on regex","code":"re.split('[ ](?=[A-Z]+\\\\b)', input)","relevant":"words = ['fan', 'ban', 'fbn', 'ana', 'and', 'ann']\n\ndef isChildOf(a, b):\n    return sum(map(lambda xy: xy[0] == xy[1], zip(a, b))) >= 2\nresult = defaultdict(set)\nfor word in words:\n    result[word] = {x for x in words if isChildOf(word, x) and x != word}\nfor word in words:\n    pass?_split_?grammar.check_coverage('please turn off the lights'.split())?_split_?test_d['2'] = 2\nwhile not test_d['QUIT']:\n    print('test_f', test_d['QUIT'])\ntest_d['ctr'] += 1?_split_?"}
{"nl":"Python split string based on regex","code":"re.split('[ ](?=[A-Z])', input)","relevant":"words = ['fan', 'ban', 'fbn', 'ana', 'and', 'ann']\n\ndef isChildOf(a, b):\n    return sum(map(lambda xy: xy[0] == xy[1], zip(a, b))) >= 2\nresult = defaultdict(set)\nfor word in words:\n    result[word] = {x for x in words if isChildOf(word, x) and x != word}\nfor word in words:\n    pass?_split_?grammar.check_coverage('please turn off the lights'.split())?_split_?test_d['2'] = 2\nwhile not test_d['QUIT']:\n    print('test_f', test_d['QUIT'])\ntest_d['ctr'] += 1?_split_?"}
{"nl":"Using Python Requests to send file and JSON in single request","code":"r = requests.post(url, files=files, headers=headers, data=data)","relevant":"print(('Using scale:', scale))?_split_?import socket\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)?_split_?yield Request('http:\/\/www.example.com', meta={'somearg': somearg}, callback\n    =self.other_callback)\n\ndef other_callback(self, response):\n    somearg = response.meta['somearg']\nprint('the argument passed is:', somearg)?_split_?"}
{"nl":"How to write bytes to a file in Python 3 without knowing the encoding?","code":"open('filename', 'wb').write(bytes_)","relevant":"with mock.patch(__name__ + '.ook', return_value=None):\n    pass?_split_?column_names = [d[0] for d in cur.description]?_split_?HTT = 0\nnumberOfTrials = 10000\nfor t in range(numberOfTrials):\n    myList = [random.randint(0, 1), random.randint(0, 1), random.randint(0, 1)]\nflips = 3\nHTHflips = HTTflips = 0\nwhile HTHflips == 0 or HTTflips == 0:\n    if HTHflips == 0 and myList[flips - 3:flips] == [1, 0, 1]:\n        HTHflips = flips\nif HTTflips == 0 and myList[flips - 3:flips] == [1, 0, 0]:\n    HTTflips = flips\nmyList.append(random.randint(0, 1))\nflips += 1\nHTH += HTHflips\nHTT += HTTflips\nprint('HTT :', numberOfTrials, HTT, float(HTT) \/ numberOfTrials)\nprint('HTH :', numberOfTrials, HTH, float(HTH) \/ numberOfTrials)?_split_?"}
{"nl":"Mapping dictionary value to list","code":"[dct[k] for k in lst]","relevant":"return char\ntext = \"a,b,{'c','d','e','f'},g,h\"\nprint(''.join(map(str, map(replace_comma_in_curly_brackets, text))))?_split_?async = dview.map_async(ff, [1, 2, 3, 4])\nprint('async res=%r' % async)\nasync.get()?_split_?setattr(foo, 'from', 1204)?_split_?"}
{"nl":"How to find duplicate names using pandas?","code":"x.set_index('name').index.get_duplicates()","relevant":"class A(object):\n    pass\n\n\nclass B(A, object):\n    pass\n\n\nclass C(B):\n    pass\n\n\nclass D(B, A):\n    pass?_split_?print(w)?_split_?N = 100?_split_?"}
{"nl":"Truncating floats in Python","code":"round(1.923328437452, 3)","relevant":"right1 = dd.from_pandas(right, npartitions=3)\nprint(dd.merge(left1, right1, on='key').compute())?_split_?any(np.array_equal(np.array([a, a]), x) for x in my_list)?_split_?print('OK {}'.format(url))?_split_?"}
{"nl":"Order list by date (String and datetime)","code":"sorted(li, key=lambda x: datetime.strptime(x[1], '%d\/%m\/%Y'), reverse=True)","relevant":"ownPid = os.getpid()?_split_?class TagTests(TestCase):\n\n    def tag_test(self, template, context, output):\n        pass?_split_?def onKey(self, evt):\n    if evt.GetKeyCode() == wx.WXK_DOWN:\n        pass?_split_?"}
{"nl":"Move radial tick labels on a polar plot in matplotlib","code":"ax.set_rlabel_position(135)","relevant":"def unpack_str(bytes):\n    pass?_split_?result = response.read()?_split_?class simulation(multiprocessing.Process):\n\n    def __init__(self, name):\n        pass?_split_?"}
{"nl":"How to check if a path is absolute path or relative path in cross platform way with Python?","code":"os.path.isabs(my_path)","relevant":"with open('A.txt') as file_a:\n    with conn:\n        cursor = conn.cursor()?_split_?import datetime\nfrom django.utils.timezone import utc?_split_?a = np.array([True, False, False, True, True, False, False, True, False])\nnp.diff(np.insert(np.where(np.diff(a) == 1)[0] + 1, 0, 0))[::2]?_split_?"}
{"nl":"Counting the Number of keywords in a dictionary in python","code":"len(list(yourdict.keys()))","relevant":"s = ''.join(chr(c) for c in range(sys.maxunicode + 1))\nws = ''.join(re.findall('\\\\s', s))?_split_?if element:\n    return True?_split_?sys.getrefcount(astrd)?_split_?"}
{"nl":"Counting the Number of keywords in a dictionary in python","code":"len(set(open(yourdictfile).read().split()))","relevant":"s = ''.join(chr(c) for c in range(sys.maxunicode + 1))\nws = ''.join(re.findall('\\\\s', s))?_split_?if element:\n    return True?_split_?sys.getrefcount(astrd)?_split_?"}
{"nl":"Pandas dataframe get first row of each group","code":"df.groupby('id').first()","relevant":"def __init__(self, color, shape):\n    pass?_split_?random.sample(['some', 'provider', 'can', 'be', 'null'], 3)\nrandom.sample(['some', 'provider', 'can', 'be', 'null'], 3)?_split_?strange_sandwich()?_split_?"}
{"nl":"Splitting a list in a Pandas cell into multiple columns","code":"pd.concat([df[0].apply(pd.Series), df[1]], axis=1)","relevant":"print(collections.Counter(y for x in listOfLists for y in set(x)))?_split_?list2.fill(lis)?_split_?user_input = input('Enter the path of your file: ')?_split_?"}
{"nl":"Extracting specific src attributes from script tags","code":"re.findall('src=\"js\/([^\"]*\\\\bjquery\\\\b[^\"]*)\"', data)","relevant":"from sympy import *\nvar('D_PWM, Rsense, A i_out')\neqn = Eq(i_out, D_PWM * (A \/ Rsense))?_split_?for row in reader:\n    pass?_split_?ElementTree.ElementTree(tree).write(f, 'utf-8')?_split_?"}
{"nl":"Most efficient way to convert items of a list to int and sum them up","code":"sum(int(float(item)) for item in [_f for _f in ['', '3.4', '', '', '1.0'] if _f])","relevant":"client.load_system_host_keys()\nclient.set_missing_host_key_policy(paramiko.AutoAddPolicy())\nclient.connect(server, port, user, password)\nreturn client\nssh = createSSHClient(server, port, user, password)?_split_?print()?_split_?df1.set_index('ID').rename_axis('parameter', 1).stack().reset_index(name=\n    'value').merge(df2).set_index(['ID', 'parameter']).weight.unstack()?_split_?"}
{"nl":"How to use subprocess when multiple arguments contain spaces?","code":"subprocess.Popen(['c:\\\\Program Files\\\\VMware\\\\VMware Server\\\\vmware-cmd.bat'])","relevant":"print('%s: %s' % (each, mydictionary.get(each)))?_split_?synsets = []?_split_?class QuestionAdmin(admin.ModelAdmin):\n    list_display = 'question_id', 'formatqn'\nlist_per_page = 10\n\ndef formatqn(self, obj):\n    pass?_split_?"}
{"nl":"how to reverse a priority queue in Python without using classes?","code":"q.put((-n, n))","relevant":"df.pivot_table(index='a', columns='b', values='c', fill_value=0)?_split_?from wagtail.wagtailadmin.edit_handlers import StreamFieldPanel\n\n\n@register_snippet\nclass Contact(models.Model):\n    contact_info = StreamField([('email', MyBlocks.ContactEmail()), (\n        'phone', MyBlocks.ContactPhone()), ('address', MyBlocks.\n        ContactAddress())])\npanels = [StreamFieldPanel('contact_info')]?_split_?c.execute('create table foo (bar integer, baz timestamp)')?_split_?"}
{"nl":"pandas plot dataframe barplot with colors by category","code":"df['group'].plot(kind='bar', color=['r', 'g', 'b', 'r', 'g', 'b', 'r'])","relevant":"t = threading.Thread(target=f)?_split_?def my_create(self, validated_data):\n    pass?_split_?def some_func():\n    bar(3)?_split_?"}
{"nl":"Python regex for MD5 hash","code":"re.findall('([a-fA-F\\\\d]{32})', data)","relevant":"if bcrypt.hashpw(plaintext, hashed) == hashed:\n    print('It matches')\nelse:\n    pass?_split_?tag = 2 if self.type == 'one2many' else 3?_split_?from django.core.servers.basehttp import FileWrapper?_split_?"}
{"nl":"Getting the length of an array","code":"len(my_list)","relevant":"while True:\n    s = stdin.readline()?_split_?def f(df):\n    return df.sort('C').iloc[:-2]\ndf2 = df.groupby('A', group_keys=False).apply(f)\nprint(df2)?_split_?s1 = '*' * 100000?_split_?"}
{"nl":"Getting the length of an array","code":"len(l)","relevant":"while True:\n    s = stdin.readline()?_split_?def f(df):\n    return df.sort('C').iloc[:-2]\ndf2 = df.groupby('A', group_keys=False).apply(f)\nprint(df2)?_split_?s1 = '*' * 100000?_split_?"}
{"nl":"Getting the length of an array","code":"len(s)","relevant":"while True:\n    s = stdin.readline()?_split_?def f(df):\n    return df.sort('C').iloc[:-2]\ndf2 = df.groupby('A', group_keys=False).apply(f)\nprint(df2)?_split_?s1 = '*' * 100000?_split_?"}
{"nl":"Getting the length of an array","code":"len(my_tuple)","relevant":"while True:\n    s = stdin.readline()?_split_?def f(df):\n    return df.sort('C').iloc[:-2]\ndf2 = df.groupby('A', group_keys=False).apply(f)\nprint(df2)?_split_?s1 = '*' * 100000?_split_?"}
{"nl":"Getting the length of an array","code":"len(my_string)","relevant":"while True:\n    s = stdin.readline()?_split_?def f(df):\n    return df.sort('C').iloc[:-2]\ndf2 = df.groupby('A', group_keys=False).apply(f)\nprint(df2)?_split_?s1 = '*' * 100000?_split_?"}
{"nl":"remove escape character from string","code":"\"\"\"\\\\a\"\"\".decode('string_escape')","relevant":"[tuple(g[1]) for g in itertools.groupby(enumerate(l), lambda i_x: i_x[0] - i_x[1])]?_split_?p = subprocess.Popen(['\/your\/app'], stdin=subprocess.PIPE, stdout=\n    subprocess.PIPE)?_split_?result = sums * 1.0 \/ counts?_split_?"}
{"nl":"Python string replace two things at once?","code":"\"\"\"obama\"\"\".replace('a', '%temp%').replace('b', 'a').replace('%temp%', 'b')","relevant":"svg.render_cairo(context)?_split_?l[n] = recursively_apply(l[n], f)?_split_?font_size = 36?_split_?"}
{"nl":"How do I remove\/delete a folder that is not empty with Python?","code":"shutil.rmtree('\/folder_name')","relevant":"from email.mime.multipart import MIMEMultipart?_split_?raise ValueError('403')?_split_?import os\nimport sys\nsys.path.insert(0, os.path.abspath('.'))?_split_?"}
{"nl":"in pandas how can I groupby weekday() for a datetime column?","code":"data['weekday'] = data['my_dt'].apply(lambda x: x.weekday())","relevant":"url = 'http:\/\/en.wikipedia.org\/static\/images\/project-logos\/enwiki.png'?_split_?print('\\xe8')?_split_?self.environment_is_clean()?_split_?"}
{"nl":"How to sort Counter by value? - python","code":"sorted(x, key=x.get, reverse=True)","relevant":"print(pd.Series([list([_f for _f in x if _f]) for x in df.values.tolist()], index=\n    df.index))?_split_?e.workspace['tspan'] = matlab.double([0.0, 5.0])?_split_?for line in L:\n    process(line)?_split_?"}
{"nl":"How to sort Counter by value? - python","code":"sorted(list(x.items()), key=lambda pair: pair[1], reverse=True)","relevant":"print(pd.Series([list([_f for _f in x if _f]) for x in df.values.tolist()], index=\n    df.index))?_split_?e.workspace['tspan'] = matlab.double([0.0, 5.0])?_split_?for line in L:\n    process(line)?_split_?"}
{"nl":"Append a NumPy array to a NumPy array","code":"np.vstack((a, b))","relevant":"Done?_split_?Ax, Ay = np.meshgrid(Ax, Ay)?_split_?nsmap = {'bldg': ns_bldg}\ncityModel = etree.Element('cityModel', nsmap=nsmap)\ncityObject = etree.SubElement(cityModel, 'cityObjectMember')\nbldg = etree.SubElement(cityObject, '{%s}Building' % ns_bldg)\nfunction = etree.SubElement(bldg, '{%s}function' % ns_bldg)\nfunction.text = '1000'\nprint(etree.tostring(cityModel, pretty_print=True))?_split_?"}
{"nl":"numpy concatenate two arrays vertically","code":"print(concatenate((a, b), axis=0))","relevant":"t.timeit(5)?_split_?def get_items(coo, num_items=2, num_iter=10):\n    idx = np.random.rand(num_iter, len(coo)).argpartition(num_items, axis=1)[:,\n        :2]\nreturn np.asarray(coo)[idx]?_split_?Quartz.CGImageDestinationAddImage(dest, image, properties)?_split_?"}
{"nl":"numpy concatenate two arrays vertically","code":"print(concatenate((a, b), axis=1))","relevant":"t.timeit(5)?_split_?def get_items(coo, num_items=2, num_iter=10):\n    idx = np.random.rand(num_iter, len(coo)).argpartition(num_items, axis=1)[:,\n        :2]\nreturn np.asarray(coo)[idx]?_split_?Quartz.CGImageDestinationAddImage(dest, image, properties)?_split_?"}
{"nl":"numpy concatenate two arrays vertically","code":"c = np.r_[(a[None, :], b[None, :])]","relevant":"t.timeit(5)?_split_?def get_items(coo, num_items=2, num_iter=10):\n    idx = np.random.rand(num_iter, len(coo)).argpartition(num_items, axis=1)[:,\n        :2]\nreturn np.asarray(coo)[idx]?_split_?Quartz.CGImageDestinationAddImage(dest, image, properties)?_split_?"}
{"nl":"numpy concatenate two arrays vertically","code":"np.array((a, b))","relevant":"t.timeit(5)?_split_?def get_items(coo, num_items=2, num_iter=10):\n    idx = np.random.rand(num_iter, len(coo)).argpartition(num_items, axis=1)[:,\n        :2]\nreturn np.asarray(coo)[idx]?_split_?Quartz.CGImageDestinationAddImage(dest, image, properties)?_split_?"}
{"nl":"How can I do DNS lookups in Python, including referring to \/etc\/hosts?","code":"print(socket.getaddrinfo('google.com', 80))","relevant":"s = pandas.Series(['a', 'b', 'a', 'c', 'a', 'b', 'a'])?_split_?self.widget.configure(state='normal')?_split_?self.root.after(1, self.openfile)?_split_?"}
{"nl":"How to update a subset of a MultiIndexed pandas DataFrame","code":"df.xs('sat', level='day', drop_level=False)","relevant":"myString = '\\x00' * (100 - len(packet))?_split_?import sublime, sublime_plugin\n\n\nclass PydevCommand(sublime_plugin.WindowCommand):\n\n    def run(self):\n        self.window.run_command('set_layout', {'cols': [0.0, 1.0], 'rows':\n            [0.0, 0.5, 1.0], 'cells': [[0, 0, 1, 1], [0, 1, 1, 2]]})?_split_?module_name = 'MySQLdb'\nhead = \"\"\"Content-Type: text\/html\n%s is \"\"\"?_split_?"}
{"nl":"How do I return a 401 Unauthorized in Django?","code":"return HttpResponse('Unauthorized', status=401)","relevant":"def addToList(self, str_to_add):\n    pass?_split_?request.url?_split_?ax2.yaxis.set_major_locator(mtick.LinearLocator(5))\nax.set_ylim(0, 15)\nax2.set_ylim(0, 1500)\nax.yaxis.grid(True, lw=7, color='g', ls='--')\nax2.yaxis.grid(True, color='k', ls='-', lw=3)?_split_?"}
{"nl":"How to dynamically select template directory to be used in flask?","code":"Flask(__name__, template_folder='wherever')","relevant":"app = Flask(__name__)?_split_?for row in rows:\n    pass?_split_?n = 6?_split_?"}
{"nl":"How do I INSERT INTO t1 (SELECT * FROM t2) in SQLAlchemy?","code":"session.execute('INSERT INTO t1 (SELECT * FROM t2)')","relevant":"f.read()?_split_?from selenium import webdriver\nfrom selenium.webdriver.common.proxy import *\nprof = webdriver.FirefoxProfile()\nprof.set_preference('signon.autologin.proxy', 'true')\nprof.set_preference('network.proxy.share_proxy_settings', 'false')\nprof.set_preference('network.automatic-ntlm-auth.allow-proxies', 'false')\nprof.set_preference('network.auth.use-sspi', 'false')\nproxy_data = {'address': '123.123.123.123:2345', 'usernmae': 'johnsmith123',\n    'password': 'iliketurtles'}\nproxy_dict = {'proxyType': ProxyType.MANUAL, 'httpProxy': proxy_data[\n    'address'], 'ftpProxy': proxy_data['address'], 'sslProxy': proxy_data[\n    'address'], 'noProxy': '', 'socksUsername': proxy_data['username'],\n    'socksPassword': proxy_data['password']}\nproxy_config = Proxy(proxy_dict)\ndriver = webdriver.Firefox(proxy=proxy_config, firefox_profile=prof)?_split_?'a'?_split_?"}
{"nl":"Sorting a list of lists in Python","code":"c2.sort(key=lambda row: row[2])","relevant":"sys.maxsize + 1?_split_?help(so27.myfunc)\nimport foo\nprint(foo.myfunc.__doc__)\nhelp(foo.myfunc)?_split_?self.train_x = tf.placeholder(tf.int32, [6248, 42], name='train_x')?_split_?"}
{"nl":"Sorting a list of lists in Python","code":"c2.sort(key=lambda row: (row[2], row[1], row[0]))","relevant":"sys.maxsize + 1?_split_?help(so27.myfunc)\nimport foo\nprint(foo.myfunc.__doc__)\nhelp(foo.myfunc)?_split_?self.train_x = tf.placeholder(tf.int32, [6248, 42], name='train_x')?_split_?"}
{"nl":"Sorting a list of lists in Python","code":"c2.sort(key=lambda row: (row[2], row[1]))","relevant":"sys.maxsize + 1?_split_?help(so27.myfunc)\nimport foo\nprint(foo.myfunc.__doc__)\nhelp(foo.myfunc)?_split_?self.train_x = tf.placeholder(tf.int32, [6248, 42], name='train_x')?_split_?"}
{"nl":"Non-ASCII characters in Matplotlib","code":"matplotlib.rc('font', **{'sans-serif': 'Arial', 'family': 'sans-serif'})","relevant":"opener.addheaders = [('User-agent', 'Mozilla\/5.0')]?_split_?img = cv2.imdecode(array, 1)\ncv2.imshow('window', img)?_split_?def __call__(self, *args, **kwargs):\n    return self.func(self.parent_obj, *args, **kwargs)\n\ndef string(self, *args, **kwargs):\n    return str(self(*args, **kwargs))\n\n\nclass Test(object):\n\n    def __init__(self, value):\n        self._value = value\n\n@deco\ndef plus(self, n):\n    return self._value + n?_split_?"}
{"nl":"Pandas datetime column to ordinal","code":"df['date'].apply(lambda x: x.toordinal())","relevant":"for line in dropped:\n    pass?_split_?plt.plot(x, y)?_split_?x = [1, 1, 2, 2, 17]\n[stats.percentileofscore(x, a, 'rank') for a in x]\n[stats.percentileofscore(x, a, 'weak') for a in x]\n[stats.percentileofscore(x, a, 'strict') for a in x]\n[stats.percentileofscore(x, a, 'mean') for a in x]?_split_?"}
{"nl":"Get HTML Source of WebElement in Selenium WebDriver using Python","code":"element.get_attribute('innerHTML')","relevant":"v.append(i)?_split_?if os.environ['SERVER_SOFTWARE'].startswith('Dev'):\n    from google.appengine.api import urlfetch\nurlfetch.set_default_fetch_deadline(60)?_split_?smallfileiter = (f for f in fileiter if os.path.getsize(f) < 200 * 1024)?_split_?"}
{"nl":"Most efficient way to get the integer index of a key in pandas","code":"df.index.get_loc('bob')","relevant":"FWHM = 2 * np.sqrt(2 * np.log(2)) * fit_stdev?_split_?py_unicode = PyString_AsDecodedObject(py_string, 'windows_1252', 'replace')\nPy_DECREF(py_string)?_split_?re.match('(?:(\\\\d+)Y)?(?:(\\\\d+)M)?', '5Y3M').groups()\nre.match('(?:(\\\\d+)Y)?(?:(\\\\d+)M)?', '3M').groups()?_split_?"}
{"nl":"open a terminal from python","code":"os.system('gnome-terminal -e \\'bash -c \"sudo apt-get update; exec bash\"\\'')","relevant":"sorted(objects, key=lambda x: idmap[x['id']])?_split_?print('frozen parameters: shape={}, loc={}, scale={}'.format(shape1, loc1,\n    scale1))?_split_?from bs4 import BeautifulSoup as BS\nimport requests\nhtml = requests.get(\n    'http:\/\/www.cnn.com\/2013\/01\/04\/justice\/ohio-rape-online-video\/index.html?hpt=hp_c2'\n    ).text\nsoup = BS(html)?_split_?"}
{"nl":"Python - How to declare and add items to an array?","code":"my_dict.update({'third_key': 1})","relevant":"struct.pack('B', 1)?_split_?print(dom.find('Body'))?_split_?x\ny\nnp.median(x, axis=0)\nnp.ma.median(y, axis=0).filled(0)?_split_?"}
{"nl":"Python - How to declare and add items to an array?","code":"my_list = []","relevant":"struct.pack('B', 1)?_split_?print(dom.find('Body'))?_split_?x\ny\nnp.median(x, axis=0)\nnp.ma.median(y, axis=0).filled(0)?_split_?"}
{"nl":"Python - How to declare and add items to an array?","code":"my_list.append(12)","relevant":"struct.pack('B', 1)?_split_?print(dom.find('Body'))?_split_?x\ny\nnp.median(x, axis=0)\nnp.ma.median(y, axis=0).filled(0)?_split_?"}
{"nl":"Add entry to list and remove first one in Python","code":"myList.insert(0, 'wuggah')","relevant":"[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]?_split_?extracted_values = defaultdict(list)?_split_?return x[1] - x[0]?_split_?"}
{"nl":"Converting a hex-string representation to actual bytes in Python","code":"\"\"\"\\\\xF3\\\\xBE\\\\x80\\\\x80\"\"\".replace('\\\\x', '').decode('hex')","relevant":"def sequence_in(s1, s2):\n    \"\"\"Does `s1` appear in sequence in `s2`?\"\"\"?_split_?soup = BeautifulSoup(markup)?_split_?print(soup)?_split_?"}
{"nl":"How to select the last column of dataframe","code":"df[df.columns[-1]]","relevant":"txet += '%s' % text[length]?_split_?string.seek(0)\ninfo = tarfile.TarInfo(name='foo')\ninfo.size = len(string.buf)\ntar.addfile(tarinfo=info, fileobj=string)\ntar.close()?_split_?shutil.rmtree(dir)?_split_?"}
{"nl":"How to get a value from a Pandas DataFrame and not the index and object type","code":"df.loc[df['Letters'] == 'C', 'Letters'].values[0]","relevant":"def inner(*args, **kwargs):\n    pass?_split_?def get_default_args(func):\n    \"\"\"\n    returns a dictionary of arg_name:default_values for the input function\n    \"\"\"\nargs, varargs, keywords, defaults = inspect.getargspec(func)?_split_?g = geocoder.freegeoip('99.240.181.199')?_split_?"}
{"nl":"Converting two lists into a matrix","code":"np.column_stack(([1, 2, 3], [4, 5, 6]))","relevant":"a = [2, 3, 4, 5, 6, 7, 8, 9, 0]\nxyz = [0, 12, 4, 6, 242, 7, 9]\nset(a) & set(xyz)\nset([0, 9, 4, 6, 7])?_split_?for i, col_name in enumerate(row.index):\n    xml.append('  <field name=\"{0}\">{1}<\/field>'.format(col_name, row.iloc[i]))?_split_?plt.plot(n, su, n, sl)\nplt.show()?_split_?"}
{"nl":"determine the variable type","code":"type(i)","relevant":"a = np.random.randint(0, 2, size=(48, 366, 3))?_split_?print('For loop took took {}'.format(time() - start))?_split_?exit()?_split_?"}
{"nl":"determine the variable type","code":"type(v)","relevant":"a = np.random.randint(0, 2, size=(48, 366, 3))?_split_?print('For loop took took {}'.format(time() - start))?_split_?exit()?_split_?"}
{"nl":"determine the variable type","code":"type(v)","relevant":"a = np.random.randint(0, 2, size=(48, 366, 3))?_split_?print('For loop took took {}'.format(time() - start))?_split_?exit()?_split_?"}
{"nl":"determine the variable type","code":"type(v)","relevant":"a = np.random.randint(0, 2, size=(48, 366, 3))?_split_?print('For loop took took {}'.format(time() - start))?_split_?exit()?_split_?"}
{"nl":"determine the variable type","code":"type(v)","relevant":"a = np.random.randint(0, 2, size=(48, 366, 3))?_split_?print('For loop took took {}'.format(time() - start))?_split_?exit()?_split_?"}
{"nl":"determine the variable type","code":"print(type(variable_name))","relevant":"a = np.random.randint(0, 2, size=(48, 366, 3))?_split_?print('For loop took took {}'.format(time() - start))?_split_?exit()?_split_?"}
{"nl":"Get the nth item of a generator in Python","code":"next(itertools.islice(range(10), 5, 5 + 1))","relevant":"class Content(models.Model):\n    name = models.CharField(max_length=200)\nuser = models.ForeignKey(User)?_split_?ctx = resolver.resolve(\n    'uno:socket,host=localhost,port=2002;urp;StarOffice.ComponentContext')\nsmgr = ctx.ServiceManager\ndesktop = smgr.createInstanceWithContext('com.sun.star.frame.Desktop', ctx)\nmodel = desktop.getCurrentComponent()\ntry:\n    sheets = model.getSheets()\nexcept Exception:\n    raise TypeError('Model retrived was not a spreadsheet')\nsheet1 = getattr(sheets, sheets.ElementNames[0])\nfor i in range(10):\n    for j in range(10):\n        cell = sheet1.getCellByPosition(i, j)\ncell.setFormula(str(i * j))\nc1 = sheet1.getCellByPosition(1, 1)?_split_?count += 1?_split_?"}
{"nl":"printing double quotes around a variable","code":"print('\"{}\"'.format(word))","relevant":"np.isnan(A)\n~np.isnan(A)\nA[~np.isnan(A)]\nA[~np.isnan(A)].mean()?_split_?df['weekday'] = df['Timestamp'].dt.dayofweek\ndf?_split_?last = next(it)?_split_?"}
{"nl":"Python concat string with list","code":"\"\"\" \"\"\".join(list)","relevant":"b.set_list(list(range(5, 10)))?_split_?foo2 = parser.add_argument('foo', help='foo 2 positional')?_split_?from sympy.abc import a, b, n\nexpr = (a * b) ** n\npp(expr)\npp(expr, use_unicode=True)\nprint(latex(expr))\nprint(expr.evalf(subs=dict(a=2, b=4, n=5)))?_split_?"}
{"nl":"Extending a list of lists in Python?","code":"y = [[] for n in range(2)]","relevant":"PROJECT_ID = 'your_project'\nDATASET_ID = 'your_dataset'?_split_?def __init__(self):\n    self._what = MyValue(40)?_split_?def line_intersection(line1, line2):\n    xdiff = line1[0][0] - line1[1][0], line2[0][0] - line2[1][0]\nydiff = line1[0][1] - line1[1][1], line2[0][1] - line2[1][1]\n\ndef det(a, b):\n    return a[0] * b[1] - a[1] * b[0]\ndiv = det(xdiff, ydiff)\nif div == 0:\n    raise Exception('lines do not intersect')\nd = det(*line1), det(*line2)\nx = det(d, xdiff) \/ div\ny = det(d, ydiff) \/ div\nreturn x, y\nprint(line_intersection((A, B), (C, D)))?_split_?"}
{"nl":"How do you read a file into a list in Python?","code":"data = [line.strip() for line in open('C:\/name\/MyDocuments\/numbers', 'r')]","relevant":"LOGIN_URL = reverse_lazy('my_app.views.sign_in')?_split_?with open('your file') as file:\n    for i in file:\n        pass?_split_?print(check_column_equals_index(3))?_split_?"}
{"nl":"How to delete all instances of a character in a string in python?","code":"\"\"\"\"\"\".join([char for char in 'it is icy' if char != 'i'])","relevant":"from sqlalchemy import text?_split_?from io import StringIO?_split_?numbers = eval(input('What numbers would you like to use?:'))?_split_?"}
{"nl":"How to delete all instances of a character in a string in python?","code":"re.sub('i', '', 'it is icy')","relevant":"from sqlalchemy import text?_split_?from io import StringIO?_split_?numbers = eval(input('What numbers would you like to use?:'))?_split_?"}
{"nl":"How to delete all instances of a character in a string in python?","code":"\"\"\"it is icy\"\"\".replace('i', '')","relevant":"from sqlalchemy import text?_split_?from io import StringIO?_split_?numbers = eval(input('What numbers would you like to use?:'))?_split_?"}
{"nl":"How to delete all instances of a character in a string in python?","code":"\"\"\"\"\"\".join([char for char in 'it is icy' if char != 'i'])","relevant":"from sqlalchemy import text?_split_?from io import StringIO?_split_?numbers = eval(input('What numbers would you like to use?:'))?_split_?"}
{"nl":"How to drop rows of Pandas DataFrame whose value in certain columns is NaN","code":"df.dropna(subset=[1])","relevant":"plt.subplot(2, 2, 3)?_split_?soup = BeautifulSoup(response)\nsoup.find(id='intro-text')?_split_?left_df.set_index('left_dt', drop=False, inplace=True)?_split_?"}
{"nl":"Searching a list of objects in Python","code":"[x for x in myList if x.n == 30]","relevant":"open(filename, 'wb')?_split_?X[closestN(X, 5)]?_split_?print(x)?_split_?"}
{"nl":"converting list of string to list of integer","code":"nums = [int(x) for x in intstringlist]","relevant":"fig, ax = plt.subplots()\nfig.savefig('myimage.svg', format='svg', dpi=1200)?_split_?dfA = pd.DataFrame.from_csv(StringIO(d1), sep='\\\\s+', index_col=None)?_split_?y = touch.y - self.center[1]?_split_?"}
{"nl":"converting list of string to list of integer","code":"map(int, eval(input('Enter the unfriendly numbers: ')))","relevant":"fig, ax = plt.subplots()\nfig.savefig('myimage.svg', format='svg', dpi=1200)?_split_?dfA = pd.DataFrame.from_csv(StringIO(d1), sep='\\\\s+', index_col=None)?_split_?y = touch.y - self.center[1]?_split_?"}
{"nl":"print in Python without newline or space","code":"sys.stdout.write('.')","relevant":"import stat\n\ndef isgroupreadable(filepath):\n    pass?_split_?print(b)?_split_?socket.bind((HOST, PORT))?_split_?"}
{"nl":"Python float to int conversion","code":"int(round(2.51 * 100))","relevant":"print(dt.strftime('%Y-%m-%d %H:%M:%S %Z%z'))?_split_?mycollapsedstring = ' '.join(mystring.split())\nprint(mycollapsedstring.split(' '))?_split_?def super_shuffle(lst):\n    new_lst = copy.copy(lst)\nrandom.shuffle(new_lst)\nfor old, new in zip(lst, new_lst):\n    if old == new:\n        pass?_split_?"}
{"nl":"Find all files in directory with extension .txt","code":"os.chdir('\/mydir')\nfor file in glob.glob('*.txt'):\n    pass","relevant":"writer = csv.writer(fl)?_split_?FORMAT = '%(asctime)-15s %(clientip)s %(user)-8s %(message)s'?_split_?response = urllib.request.urlopen(urllib.request.Request(self.pubmed_url))?_split_?"}
{"nl":"Find all files in directory with extension .txt","code":"for file in os.listdir('\/mydir'):\n    if file.endswith('.txt'):\n        pass","relevant":"writer = csv.writer(fl)?_split_?FORMAT = '%(asctime)-15s %(clientip)s %(user)-8s %(message)s'?_split_?response = urllib.request.urlopen(urllib.request.Request(self.pubmed_url))?_split_?"}
{"nl":"Find all files in directory with extension .txt","code":"for (root, dirs, files) in os.walk('\/mydir'):\n    for file in files:\n        if file.endswith('.txt'):\n            pass","relevant":"writer = csv.writer(fl)?_split_?FORMAT = '%(asctime)-15s %(clientip)s %(user)-8s %(message)s'?_split_?response = urllib.request.urlopen(urllib.request.Request(self.pubmed_url))?_split_?"}
{"nl":"Pandas (python) plot() without a legend","code":"df.plot(legend=False)","relevant":"image = Image.new('RGBA', (600, 150), (255, 255, 255))\ndraw = ImageDraw.Draw(image)\nfont = ImageFont.truetype('resources\/HelveticaNeueLight.ttf', fontsize)\ndraw.text((10, 0), txt, (0, 0, 0), font=font)\nimg_resized = image.resize((188, 45), Image.ANTIALIAS)?_split_?ax.legend(loc='upper left', labelspacing=2)?_split_?with open('datafile1.csv') as f:\n    lines = (line for line in f if not line.startswith('#'))\nFH = np.loadtxt(lines, delimiter=',', skiprows=1)?_split_?"}
{"nl":"loop through an IP address range","code":"for i in range(256):\n    for j in range(256):\n        ip = ('192.168.%d.%d' % (i, j))\n        print(ip)","relevant":"def go(self):\n    pass?_split_?x = [5e-05, 5e-06, 5e-07, 5e-08, 5e-09, 5e-10]?_split_?def docustomstuff(self, attr):\n    pass?_split_?"}
{"nl":"loop through an IP address range","code":"for (i, j) in product(list(range(256)), list(range(256))):\n    pass","relevant":"def go(self):\n    pass?_split_?x = [5e-05, 5e-06, 5e-07, 5e-08, 5e-09, 5e-10]?_split_?def docustomstuff(self, attr):\n    pass?_split_?"}
{"nl":"loop through an IP address range","code":"generator = iter_iprange('192.168.1.1', '192.168.255.255', step=1)","relevant":"def go(self):\n    pass?_split_?x = [5e-05, 5e-06, 5e-07, 5e-08, 5e-09, 5e-10]?_split_?def docustomstuff(self, attr):\n    pass?_split_?"}
{"nl":"Python\/Numpy: Convert list of bools to unsigned int","code":"sum(1 << i for i, b in enumerate(x) if b)","relevant":"return tf.concat(0, data)?_split_?insert_statement = \"\"\"\n    INSERT INTO chats(person_id, message_type, created_at, channel)\n    VALUES(:person_id,:message_type,:created_at,:channel)\n\"\"\"?_split_?ds = f.createCArray(f.root, 'somename', atom, x.shape)\nds[:] = x\nf.close()?_split_?"}
{"nl":"Python: How to write multiple strings in one line?","code":"target.write('%r\\n%r\\n%r\\n' % (line1, line2, line3))","relevant":"_update_legend(plot=p, legend_name='data1', glyph_renderer=g1_r)?_split_?stopwords = ['what', 'who', 'is', 'a', 'at', 'is', 'he']\nquerywords = query.split()\nresultwords = [word for word in querywords if word.lower() not in stopwords]?_split_?os.chdir('C:\\\\Users\\\\DhruvOhri\\\\Documents\\\\COMP 6411\\\\pygithub3-0.3')\nos.system('git clone https:\/\/github.com\/poise\/python.git')?_split_?"}
{"nl":"How to flatten a hetrogenous list of list into a single list in python?","code":"[y for x in data for y in (x if isinstance(x, list) else [x])]","relevant":"a = pd.DataFrame(np.random.rand(5, 3), columns=['a', 'b', 'c'])?_split_?def process_match(m):\n    pass?_split_?foo.bars.add(target_pk)?_split_?"}
{"nl":"In Python, is it possible to escape newline characters when printing a string?","code":"print('foo\\nbar'.encode('string_escape'))","relevant":"from ctypes import byref, cdll, c_int\nimport ctypes\nlualib = ctypes.CDLL('libluajit-5.1.so', mode=ctypes.RTLD_GLOBAL)?_split_?return re.match('^1?$|^(11+?)\\\\1+$', '1' * n) == None?_split_?{'Age': '44', 'Name': 'Mark', 'Children': '1'}\n{'Age': '22', 'Name': 'Joe', 'Children': '0'}\n{'Age': '39', 'Name': 'Craig', 'Children': '3'}?_split_?"}
{"nl":"String Slicing Python","code":"\"\"\"\"\"\".join(s.rsplit(',', 1))","relevant":"[git]\nintree = True?_split_?from itertools import groupby\nunique_list = list(map(itemgetter(0), groupby(yourList)))?_split_?df?_split_?"}
{"nl":"Middle point of each pair of an numpy.array","code":"(x[1:] + x[:-1]) \/ 2","relevant":"files = glob.glob(fullpath)?_split_?df['date'] = df.index.date?_split_?a = 1, 2\ntype(a)?_split_?"}
{"nl":"Middle point of each pair of an numpy.array","code":"x[:-1] + (x[1:] - x[:-1]) \/ 2","relevant":"files = glob.glob(fullpath)?_split_?df['date'] = df.index.date?_split_?a = 1, 2\ntype(a)?_split_?"}
{"nl":"Reading unicode elements into numpy array","code":"arr = numpy.fromiter(codecs.open('new.txt', encoding='utf-8'), dtype='<U2')","relevant":"names = Employee.objects.filter()?_split_?params = {'test1': 'param1', 'test2': 'param2'}?_split_?df?_split_?"}
{"nl":"How to sort this list in Python?","code":"l = sorted(l, key=itemgetter('time'), reverse=True)","relevant":"crypts.append(mask)?_split_?f = urllib.request.urlopen(req)?_split_?nStr = '000123000123'\nnStr.count('123')?_split_?"}
{"nl":"How to sort this list in Python?","code":"l = sorted(l, key=lambda a: a['time'], reverse=True)","relevant":"crypts.append(mask)?_split_?f = urllib.request.urlopen(req)?_split_?nStr = '000123000123'\nnStr.count('123')?_split_?"}
{"nl":"pandas DataFrame filter regex","code":"df.loc[df[0].str.contains('(Hel|Just)')]","relevant":"naive_local_dt = aware_dt.astimezone(local_timezone).replace(tzinfo=None)?_split_?class CustomGalleryDetailView(DetailView):\n\n    def get_queryset(self):\n        pass?_split_?import ctypes?_split_?"}
{"nl":"How do I find the string between two special characters?","code":"re.search('\\\\[(.*)\\\\]', your_string).group(1)","relevant":"for chunk in reader:\n    pass?_split_?from collections import OrderedDict\nmy_dictionary = OrderedDict()\nmy_dictionary['foo'] = 3\nmy_dictionary['aol'] = 1?_split_?print(ar)\nnewarray = ar[0:6]?_split_?"}
{"nl":"How to create a list of date string in 'yyyymmdd' format with Python Pandas?","code":"[d.strftime('%Y%m%d') for d in pandas.date_range('20130226', '20130302')]","relevant":"sess.run(init)?_split_?wn.lch_similarity(dog, car)?_split_?\"\"\"012345\"\"\"[2::-2]\n\"\"\"012345\"\"\"[5::-2]?_split_?"}
{"nl":"How to count the number of times something occurs inside a certain string?","code":"\"\"\"The big brown fox is brown\"\"\".count('brown')","relevant":"if generator.gi_frame is None:\n    return GEN_CLOSED?_split_?from django.contrib.auth.decorators import login_required?_split_?[i for i, j in enumerate(x[:-1], 1) if j != next(i_x)]?_split_?"}
{"nl":"Sending post data from angularjs to django as JSON and not as raw content","code":"json.loads(request.body)","relevant":"data.append(tag.next_sibling.string)?_split_?return result?_split_?r = ro.r\nr('library(reshape)')\ndf = com.convert_robj(r('melt(Titanic)'))?_split_?"}
{"nl":"Download file from web in Python 3","code":"urllib.request.urlretrieve(url, file_name)","relevant":"return ret?_split_?profile.setPreference('browser.download.dir', 'c:\/yourDownloadDir')\nprofile.setPreference('browser.download.folderList', 2)\nprofile.setPreference('browser.helperApps.neverAsk.saveToDisk',\n    'application\/csv, text\/csv')?_split_?from boto.s3.connection import S3Connection?_split_?"}
{"nl":"Split string into a list","code":"text.split()","relevant":"kernelIn = numpy.array([[0, -2, 0], [-2, 11, -2], [0, -2, 0]])\ninKSize = len(kernelIn)?_split_?fp.set_preference('general.useragent.override', 'whater_useragent')\nfp.update_preferences()?_split_?upform = UserProfileForm(instance=user.get_profile())?_split_?"}
{"nl":"Split string into a list","code":"text.split(',')","relevant":"kernelIn = numpy.array([[0, -2, 0], [-2, 11, -2], [0, -2, 0]])\ninKSize = len(kernelIn)?_split_?fp.set_preference('general.useragent.override', 'whater_useragent')\nfp.update_preferences()?_split_?upform = UserProfileForm(instance=user.get_profile())?_split_?"}
{"nl":"Split string into a list","code":"line.split()","relevant":"kernelIn = numpy.array([[0, -2, 0], [-2, 11, -2], [0, -2, 0]])\ninKSize = len(kernelIn)?_split_?fp.set_preference('general.useragent.override', 'whater_useragent')\nfp.update_preferences()?_split_?upform = UserProfileForm(instance=user.get_profile())?_split_?"}
{"nl":"Replacing characters in a regex","code":"[re.sub('(?<!\\\\d)\\\\.(?!\\\\d)', ' ', i) for i in s]","relevant":"with open('\/home\/joe\/file.txt') as f_in:\n    pass?_split_?input('press return to end')?_split_?print('Content-Type: application\/json\\n\\n')\nprint(json.dumps(result))?_split_?"}
{"nl":"Sort A list of Strings Based on certain field","code":"sorted(list_of_strings, key=lambda s: s.split(',')[1])","relevant":"html = lxml.html.parse(url)\nfor row in rows_xpath(html):\n    time = time_xpath(row)[0].strip()\nteam = team_xpath(row)[0]\nprint(time, team)?_split_?plt.ylabel('Hour')\nplt.axis('tight')?_split_?return -1?_split_?"}
{"nl":"how to call multiple bash functions using | in python","code":"subprocess.check_call('vasp | tee tee_output', shell=True)","relevant":"array.sort(key=lambda k: (k[0] - point[0]) ** 2 + (k[1] - point[1]) ** 2)?_split_?class strings(metaclass=stringer):\n    pass?_split_?cout << 'Executed' << endl?_split_?"}
{"nl":"How to eliminate all strings from a list","code":"[element for element in lst if isinstance(element, int)]","relevant":"return expr?_split_?plt.plot(x_val, y_int, linestyle=':', linewidth=0.25, color='black')?_split_?item = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nfor element in item:\n    if element not in z:\n        pass?_split_?"}
{"nl":"How to eliminate all strings from a list","code":"[element for element in lst if not isinstance(element, str)]","relevant":"return expr?_split_?plt.plot(x_val, y_int, linestyle=':', linewidth=0.25, color='black')?_split_?item = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nfor element in item:\n    if element not in z:\n        pass?_split_?"}
{"nl":"How do I sort a list of dictionaries by values of the dictionary in Python?","code":"newlist = sorted(list_to_be_sorted, key=lambda k: k['name'])","relevant":"ax.set_xticklabels([])?_split_?filter_backends = filters.DjangoFilterBackend,?_split_?pool.map(somethinglong, jobs, chunksize=1)?_split_?"}
{"nl":"How do I sort a list of dictionaries by values of the dictionary in Python?","code":"newlist = sorted(l, key=itemgetter('name'), reverse=True)","relevant":"ax.set_xticklabels([])?_split_?filter_backends = filters.DjangoFilterBackend,?_split_?pool.map(somethinglong, jobs, chunksize=1)?_split_?"}
{"nl":"How do I sort a list of dictionaries by values of the dictionary in Python?","code":"list_of_dicts.sort(key=operator.itemgetter('name'))","relevant":"ax.set_xticklabels([])?_split_?filter_backends = filters.DjangoFilterBackend,?_split_?pool.map(somethinglong, jobs, chunksize=1)?_split_?"}
{"nl":"How do I sort a list of dictionaries by values of the dictionary in Python?","code":"list_of_dicts.sort(key=operator.itemgetter('age'))","relevant":"ax.set_xticklabels([])?_split_?filter_backends = filters.DjangoFilterBackend,?_split_?pool.map(somethinglong, jobs, chunksize=1)?_split_?"}
{"nl":"How to sort a Dataframe by the ocurrences in a column in Python (pandas)","code":"df.groupby('prots').sum().sort('scores', ascending=False)","relevant":"solutions.append(copy.deepcopy(board))?_split_?n = '4'?_split_?value?_split_?"}
{"nl":"How can I access elements inside a list within a dictionary python?","code":"\"\"\",\"\"\".join(trans['category'])","relevant":"from selenium.common.exceptions import NoAlertPresentException\ntry:\n    driver.switch_to_alert().accept()\nexcept NoAlertPresentException as e:\n    pass?_split_?a = [[1, 2, 3], [4, 5, 6]]\n[item for item in a if sum(item) > 10]?_split_?self.threads.append(ErrThread(**t))?_split_?"}
{"nl":"Variants of string concatenation?","code":"\"\"\"\"\"\".join(['A', 'B', 'C', 'D'])","relevant":"from collections import defaultdict?_split_?A[:, (second), (third)].shape?_split_?8?_split_?"}
{"nl":"How do I get JSON data from RESTful service using Python?","code":"json.load(urllib.request.urlopen('url'))","relevant":"from matplotlib import pyplot\nfrom mpl_toolkits.mplot3d import Axes3D\npyplot.ioff()\nfig = pyplot.figure()\npyplot.savefig('file.png')\npyplot.close()?_split_?new_user.save()\nif self.cleaned_data['teacher_or_student'] == 'teacher':\n    teacher = Teacher(profile=new_user.get_profile(), user=new_user)?_split_?import fnmatch\nimport os\nmatches = []\nfor root, dirnames, filenames in os.walk('src'):\n    for filename in fnmatch.filter(filenames, '*.c'):\n        matches.append(os.path.join(root, filename))?_split_?"}
{"nl":"Removing an item from list matching a substring - Python","code":"[x for x in sents if not x.startswith('@$\\t') and not x.startswith('#')]","relevant":"for ll in l:\n    pass?_split_?dis.dis(foo)\ndis.dis(bar)?_split_?A = matrix([[0, 0, 0, 1], [0, 0, 1, 0], [0, 1, 0, 0], [0, 0, 0, 0]])?_split_?"}
{"nl":"Django filter by hour","code":"Entry.objects.filter(pub_date__contains='08:00')","relevant":"def any(iterable):\n    for x in iterable:\n        if x:\n            return True\nreturn False?_split_?from operator import attrgetter?_split_?def supportMethod2(self):\n    print('I am support method 2')?_split_?"}
{"nl":"sort a list of dicts by x then by y","code":"list.sort(key=lambda item: (item['points'], item['time']))","relevant":"return spider?_split_?for colour, array_ in h:\n    if colour in out:\n        out[colour] += array_?_split_?module = imp.load_module(fullname, fp, filename, self._c_ext_tuple)?_split_?"}
{"nl":"How to convert a Python datetime object to seconds","code":"(t - datetime.datetime(1970, 1, 1)).total_seconds()","relevant":"print('|', s, len(s))?_split_?stream_index = []?_split_?filepath = os.path.join('c:\/your\/full\/path', 'filename')?_split_?"}
{"nl":"How to replace only part of the match with python re.sub","code":"re.sub('(\\\\_a)?\\\\.([^\\\\.]*)$', '_suff.\\\\2', 'long.file.name.jpg')","relevant":"import datetime\nprint(datetime.datetime.now().strftime('%y'))?_split_?plt.legend(loc='best')?_split_?abcdefghijklmnopqrstuvwxyz?_split_?"}
{"nl":"How can I reload objects in my namespace in ipython","code":"import imp\nimp.reload(module)","relevant":"format = '%Y%m%d %H'?_split_?s = ['a', 'b', 'd', 'e']\ns[2:2] = ['c']\ns?_split_?name = 'Stata'?_split_?"}
{"nl":"How to get a 16bit Unsigned integer in python","code":"struct.unpack('H', struct.pack('h', number))","relevant":"Handler = MyRequestHandler\nserver = SocketServer.TCPServer(('0.0.0.0', 8080), Handler)\nserver.serve_forever()?_split_?A = numpy.array([0, 1, 2], 'uint32')\nB = numpy.array([1, 2, 3], 'uint32')\nA - B\nA = A.astype(int)\nB = B.astype(int)\nA - B?_split_?y_train = [[0], [0], [0], [0], [0], [0], [1], [1], [1], [1], [1], [1], [0, \n    1], [0, 1]]\nX_test = np.array(['nice day in nyc', 'welcome to london',\n    'hello welcome to new york. enjoy it here and london too'])\ntarget_names = ['New York', 'London']\nclassifier = Pipeline([('vectorizer', CountVectorizer(min_n=1, max_n=2)), (\n    'tfidf', TfidfTransformer()), ('clf', OneVsRestClassifier(LinearSVC()))])\nclassifier.fit(X_train, y_train)\npredicted = classifier.predict(X_test)\nfor item, labels in zip(X_test, predicted):\n    pass?_split_?"}
{"nl":"How can I use sum() function for a list in Python?","code":"numlist = [float(x) for x in numlist]","relevant":"'including',?_split_?f = file(filename)\nattachment = MIMEText(f.read(), 'html')?_split_?set_of_related_nouns.add(synset)?_split_?"}
{"nl":"Removing index column in pandas","code":"df.to_csv(filename, index=False)","relevant":"[a, b, c]?_split_?list_words = ['<a href=\"http:\/\/url.com\/{}\">{}<\/a>'.format(a, a) for x in l for\n    a in x.split()]?_split_?{'fmt': '598.56B', 'raw': 598563094528, 'longFmt': '598,563,094,528'}\n\"\"\"598.56B\"\"\"?_split_?"}
{"nl":"How to convert a string data to a JSON object in python?","code":"json_data = json.loads(unescaped)","relevant":"signal.signal(signal.SIGINT, self._signal_handler)?_split_?for k, v in list(args.items()):\n    pass?_split_?deploy(hosts, command)?_split_?"}
{"nl":"Is there a Python Library that contains a list of all the ascii characters?","code":"[chr(i) for i in range(127)]","relevant":"bins = NP.array([0.0, 20.0, 40.0, 60.0, 80.0, 100.0])?_split_?[s for s in ['william', 'short', '\\x80', 'twitter', '\\xaa', '\\xe2', 'video',\n    'guy', 'ray'] if is_ascii(s)]?_split_?r = array('hovinko', 'ruka', 6)?_split_?"}
{"nl":"Python how to write to a binary file?","code":"newFile.write(struct.pack('5B', *newFileBytes))","relevant":"fieldnames = ['university'] + sorted(years)\nwith open('university_nominations.csv', 'w', newline='') as csvfile:\n    writer = csv.DictWriter(csvfile, fieldnames)\nwriter.writeheader()\nfor university, nominations in list(universityDict.items()):\n    row = {'university': university}\nrow.update(nominations)\nwriter.writerow(row)?_split_?f = x ** 2 + 1\nsympy.diff(f, x)?_split_?f.setMath(ast)\nkl = KineticLaw(2, 4)\nkl.setMath(f.getBody())?_split_?"}
{"nl":"Python Regex - checking for a capital letter with a lowercase after","code":"re.sub('^[A-Z0-9]*(?![a-z])', '', string)","relevant":"print(obj.node('value'))\nprint(str(obj.node))?_split_?import numpy\nfrom pyspark.sql.functions import UserDefinedFunction\nfrom pyspark.sql.types import DoubleType\nudf = UserDefinedFunction(numpy.random.normal, DoubleType())?_split_?op.drop_column('similar_orders', 'id')?_split_?"}
{"nl":"Last Key in Python Dictionary","code":"list(dict.keys())[-1]","relevant":"a.set_ylim(-1.1, 1.1)\nfig.show()?_split_?drops = np.tril((N == D) & (N == D.T), -1).any(axis=1)?_split_?a = [{'id': 1}, {'id': 2}, {'id': 3}]\nb = [2, 1, 3]\na.sort(key=lambda v: b.index(v['id']))\na?_split_?"}
{"nl":"write line to file","code":"print('hi there', file=f)","relevant":"from collections import Counter?_split_?return {'data': 'your data here', 'other_information': 'more_stuff'}\napi.add_resource(Data, '\/data')\nif __name__ == '__main__':\n    app.run(debug=True)?_split_?mpl.dates.date2num(df.index.to_pydatetime())?_split_?"}
{"nl":"write line to file","code":"f = open('myfile', 'w')\nf.write('hi there\\n')\nf.close()","relevant":"from collections import Counter?_split_?return {'data': 'your data here', 'other_information': 'more_stuff'}\napi.add_resource(Data, '\/data')\nif __name__ == '__main__':\n    app.run(debug=True)?_split_?mpl.dates.date2num(df.index.to_pydatetime())?_split_?"}
{"nl":"write line to file","code":"with open('somefile.txt', 'a') as the_file:\n    the_file.write('Hello\\n')","relevant":"from collections import Counter?_split_?return {'data': 'your data here', 'other_information': 'more_stuff'}\napi.add_resource(Data, '\/data')\nif __name__ == '__main__':\n    app.run(debug=True)?_split_?mpl.dates.date2num(df.index.to_pydatetime())?_split_?"}
{"nl":"Python - Unicode to ASCII conversion","code":"s.encode('iso-8859-15')","relevant":"foo = 'client:user:username:type:1234567'\nlast = foo.split(':')[-1]?_split_?def myfunc(self, a):\n    pass?_split_?print(x)?_split_?"}
{"nl":"How to get max value in django ORM","code":"AuthorizedEmail.objects.filter(group=group).order_by('-added')[0]","relevant":"def x(self, value):\n    self._x = value?_split_?data = [10.01, 5.001, 4.89, 5.1, 9.9, 10.1, 5.05, 4.99]\ncl = HierarchicalClustering(data, lambda x, y: abs(x - y))\nprint([mean(cluster) for cluster in cl.getlevel(1.0)])?_split_?@call_with_each((3,), (2,))\ndef f(x):\n    print(x)?_split_?"}
{"nl":"Python regex findall numbers and dots","code":"re.findall('Test([0-9.]*[0-9]+)', text)","relevant":"var1 = [{'a': 1, 'b': 2}, {'c': 2, 'd': 5, 'h': 4}, {'c': 2, 'd': 5, 'e': 4}]\nvar2 = [{'a': 3, 'b': 2}, {'c': 1, 'd': 5, 'h': 4}, {'c': 5, 'd': 5, 'e': 4}]\nres = []\nfor i in range(len(var1)):\n    pass?_split_?id(b)?_split_?from sqlalchemy.orm import relationship?_split_?"}
{"nl":"Python regex findall numbers and dots","code":"re.findall('Test([\\\\d.]*\\\\d+)', text)","relevant":"var1 = [{'a': 1, 'b': 2}, {'c': 2, 'd': 5, 'h': 4}, {'c': 2, 'd': 5, 'e': 4}]\nvar2 = [{'a': 3, 'b': 2}, {'c': 1, 'd': 5, 'h': 4}, {'c': 5, 'd': 5, 'e': 4}]\nres = []\nfor i in range(len(var1)):\n    pass?_split_?id(b)?_split_?from sqlalchemy.orm import relationship?_split_?"}
{"nl":"Is there a way to run powershell code in python","code":"os.system('powershell.exe', 'script.ps1')","relevant":"import matplotlib.pyplot as plt?_split_?b = pandas.get_dummies(a)\nb\nb.values.argmax(1)?_split_?pickle.dump(favorite_color, open('save.p', 'wb'))?_split_?"}
{"nl":"Sorting a dictionary of tuples in Python","code":"b.sort(key=lambda x: x[1][2])","relevant":"title = content.split('<title>')[1].split('<\/title>')[0].strip()?_split_?it = iter(seq)?_split_?def capitalizeMatch(m):\n    return m.group(0).capitalize()\n\ndef capitalizeWords(s):\n    pass?_split_?"}
{"nl":"How do I get all the keys that are stored in the Cassandra column family with pycassa?","code":"list(cf.get_range().get_keys())","relevant":"sampwidth = 2?_split_?from distutils.command.install import install as DistutilsInstall\n\n\nclass MyInstall(DistutilsInstall):\n\n    def run(self):\n        do_pre_install_stuff()\nDistutilsInstall.run(self)\ndo_post_install_stuff()?_split_?next = d + datetime.timedelta(days=7 - d.weekday() if d.weekday() > 3 else 1)?_split_?"}
{"nl":"how to create a file name with the current date & time in python?","code":"datetime.datetime.now()","relevant":"id = models.AutoField(primary_key=True)?_split_?if item == 4:\n    pass?_split_?def your_view():\n    pass?_split_?"}
{"nl":"How to get the index of an integer from a list if the list contains a boolean?","code":"next(i for i, x in enumerate(lst) if not isinstance(x, bool) and x == 1)","relevant":"class Matrix(object):\n    pass?_split_?ax1.set_xlabel('Scaleable axis')\nax1.set_ylabel('Scaleable axis')?_split_??_split_?"}
{"nl":"Subtract a value from every number in a list in Python?","code":"a[:] = [(x - 13) for x in a]","relevant":"lst = ['1', 'err', '-1', ' ', '155']?_split_?mandel_x = mandel_start_x + screen_x \/ screen_width * mandel_width?_split_?from rest_framework import generics\nfrom rest_framework_tracking.mixins import LoggingMixin\n\n\nclass LoggingView(LoggingMixin, generics.GenericAPIView):\n\n    def get(self, request):\n        pass?_split_?"}
{"nl":"Best way to choose a random file from a directory","code":"random.choice(os.listdir('C:\\\\'))","relevant":"print(response.code)?_split_?from django.forms import ModelForm, Textarea\nfrom myapp.models import Author?_split_?settings = {}\nexec(compile(open('the_config.py').read(), 'the_config.py', 'exec'), settings)\nsettings['CONFIG'] == 'some string'?_split_?"}
{"nl":"How to get the highest element in absolute value in a numpy matrix?","code":"max(x.min(), x.max(), key=abs)","relevant":"foreign_naive = datetime.datetime(2012, 3, 11, 6, 0, 0)\nforeign_timezone = 'US\/Eastern'\nforeign_dt = pytz.timezone(foreign_timezone).localize(foreign_naive)\ntimestamp = time.mktime(foreign_dt).astimezone(pytz.utc).timetuple()?_split_?stops = list(idxs[1:]) + [None]\ngroups = [data[strt:stop] for strt, stop in zip(strts, stops)]?_split_?return NULL?_split_?"}
{"nl":"Using Regular Expressions to extract specific urls in python","code":"re.findall('\"(http.*?)\"', s, re.MULTILINE | re.DOTALL)","relevant":"print(df1)?_split_?verbose = False\npointlist = point.PointList()?_split_?def foo():\n    options = {'DATABASES': {'default': {'ENGINE':\n        'django.db.backends.sqlite3'}}}\nfor k, v in list(options.items()):\n    exec ('%s = v' % k)\nprint(DATABASES)\nfoo()?_split_?"}
{"nl":"Using Regular Expressions to extract specific urls in python","code":"re.findall('http:\/\/[^t][^s\"]+\\\\.html', document)","relevant":"print(df1)?_split_?verbose = False\npointlist = point.PointList()?_split_?def foo():\n    options = {'DATABASES': {'default': {'ENGINE':\n        'django.db.backends.sqlite3'}}}\nfor k, v in list(options.items()):\n    exec ('%s = v' % k)\nprint(DATABASES)\nfoo()?_split_?"}
{"nl":"Is there a function in Python to split a string without ignoring the spaces?","code":"mystring.replace(' ', '! !').split('!')","relevant":"str_ = 'How many words in this string are from dict1'\ndict_1 = dict(a='many', b='words')\nlen([x for x in str_.split() if x in list(dict_1.values())])\nlen(set(str_.split()).intersection(list(dict_1.values())))\nlen(set(str_.split()) & set(dict_1.values()))\nwords = str_.lower().split()\ndict_words = map(str.lower, list(dict_1.values()))?_split_?res = requests.get(URL)?_split_?import numpy as np?_split_?"}
{"nl":"Open file in Python","code":"open(path, 'r')","relevant":"t1 = timeit.Timer(stmt=stmt1)\nt2 = timeit.Timer(stmt=stmt2)\nprint('%.2f usec\/pass' % (1000000 * t2.timeit(number=10) \/ 10))?_split_?principals = Principal(app)?_split_?urlpatterns = patterns('', url('^(?P<page>.+\\\\.html)$', StaticView.as_view()))?_split_?"}
{"nl":"Sum of multiple list of lists index wise","code":"[[sum(item) for item in zip(*items)] for items in zip(*data)]","relevant":"os.chdir(directory)\nfiles = glob.glob('*.bak')?_split_?ys = np.sin(xs)\nmarkers_on = [12, 17, 18, 19]\nplt.plot(xs, ys, '-gD', markevery=markers_on)\nplt.show()?_split_?df2 = pd.DataFrame({'A': np.random.rand(1440).cumsum()}, index=pd.\n    date_range('1\/1\/2015', periods=1440, freq='1min'))\ndf2.A.plot()\nplt.gca().xaxis.set_major_locator(dates.HourLocator())\nplt.gca().xaxis.set_major_formatter(dates.DateFormatter('%H:%M'))\nplt.show()?_split_?"}
{"nl":"numpy: syntax\/idiom to cast (n,) array to a (n, 1) array?","code":"a[:, (np.newaxis)]","relevant":"parser = argparse.ArgumentParser(description='Get my Option')\nparser.add_argument('--an_opt', metavar='N', type=int, help='An option')\nparser.add_argument('--xyz', metavar='N', type=int, action='append', help=\n    'An option')\ncmd_line = '--an_opt 1 --xyz1 10 --xyz3 31 --xyz2 25 '.split()\nargs = parser.parse_args(get_xyz_cmd_line(cmd_line))\nprint(args)?_split_?position = center[0] - 10, center[1] + 10?_split_?df\ndf.head()\ndf['date'] = pd.to_datetime(df['date'], unit='s')?_split_?"}
