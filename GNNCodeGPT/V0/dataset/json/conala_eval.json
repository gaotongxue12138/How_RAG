{"nl":"How to convert a list of multiple integers into a single integer?","code":"sum(d * 10 ** i for i, d in enumerate(x[::-1]))","relevant":"self.conn.send(msg)?_split_?for key in genes_dict:\n    random_list = random.sample(list(genes_dict.items()), int(length))\nprint(random_list)?_split_?def model(self):\n    return get_model('app_name', self.kwargs.get('model_name'))?_split_?"}
{"nl":"How to convert a list of multiple integers into a single integer?","code":"r = int(''.join(map(str, x)))","relevant":"self.conn.send(msg)?_split_?for key in genes_dict:\n    random_list = random.sample(list(genes_dict.items()), int(length))\nprint(random_list)?_split_?def model(self):\n    return get_model('app_name', self.kwargs.get('model_name'))?_split_?"}
{"nl":"how to convert a datetime string back to datetime object?","code":"datetime.strptime('2010-11-13 10:33:54.227806', '%Y-%m-%d %H:%M:%S.%f')","relevant":"return next(callback.v)?_split_?return np.random.permutation(indices)?_split_?[np.argmin(a) for a in A1]?_split_?"}
{"nl":"Averaging the values in a dictionary based on the key","code":"[(i, sum(j) \/ len(j)) for i, j in list(d.items())]","relevant":"fuzz.token_sort_ratio('fuzzy was a bear', 'fuzzy fuzzy was a bear')\nfuzz.token_set_ratio('fuzzy was a bear', 'fuzzy fuzzy was a bear')?_split_?canvas.rect(i, 0, 2, 100)?_split_?12.100000381469727, 17, 's', '\\x00', '\\x00', '\\x00'?_split_?"}
{"nl":"zip lists in python","code":"zip([1, 2], [3, 4])","relevant":"json.dump(data, outfile)?_split_?df?_split_?parts = [s[i:j] for i, j in zip(indices, indices[1:] + [None])]?_split_?"}
{"nl":"Prepend the same string to all items in a list","code":"['hello{0}'.format(i) for i in a]","relevant":"foo.sort(key=lambda x: (x['db_name'], x['host']))?_split_?for key, value in list(stateDict.items()):\n    pass?_split_?if word in ('.', '?', '!'):\n    i = 0?_split_?"}
{"nl":"regex for repeating words in a string in Python","code":"re.sub('(?<!\\\\S)((\\\\S+)(?:\\\\s+\\\\2))(?:\\\\s+\\\\2)+(?!\\\\S)', '\\\\1', s)","relevant":"plt.show()?_split_?regex = (\n    '(.*) (Avenue|Lane|Road|Boulevard|Drive|Street|Ave|Dr|Rd|Blvd|Ln|St) ([A-Za-z]*) (.*)'\n    )\nresult = re.sub(regex, '\\\\1 \\\\2 & \\\\4 \\\\3', s, flags=re.I)\nprint(result)?_split_?good_array[to_replace, i_column] = maxs[i_column] - 1?_split_?"}
{"nl":"Normalizing a pandas DataFrame by row","code":"df.div(df.sum(axis=1), axis=0)","relevant":"f = file(filename, 'w')?_split_?np.max([float('nan'), 1])?_split_?p.feed(data)?_split_?"}
{"nl":"swap values in a tuple\/list inside a list in python?","code":"map(lambda t: (t[1], t[0]), mylist)","relevant":"ax.scatter(x[mask], y[mask])?_split_?c.LocalControllerLauncher.controller_cmd = ['\/usr\/bin\/python2', '-m',\n    'IPython.parallel.controller']?_split_?def isNotMonster(x):\n    return not any(len(word) > 2 and word == word.upper() for word in x.split()\n        )\nokay_items = list(filter(isNotMonster, all_items))?_split_?"}
{"nl":"swap values in a tuple\/list inside a list in python?","code":"[(t[1], t[0]) for t in mylist]","relevant":"ax.scatter(x[mask], y[mask])?_split_?c.LocalControllerLauncher.controller_cmd = ['\/usr\/bin\/python2', '-m',\n    'IPython.parallel.controller']?_split_?def isNotMonster(x):\n    return not any(len(word) > 2 and word == word.upper() for word in x.split()\n        )\nokay_items = list(filter(isNotMonster, all_items))?_split_?"}
{"nl":"Find next sibling element in Python Selenium?","code":"driver.find_element_by_xpath(\"\/\/p[@id, 'one']\/following-sibling::p\")","relevant":"Bar.objects.foo_active()?_split_?OptionMenu(root, var, command=print_it, *lst).pack()?_split_?class Author(models.Model):\n    pass?_split_?"}
{"nl":"Python splitting string by parentheses","code":"re.findall('\\\\[[^\\\\]]*\\\\]|\\\\([^\\\\)]*\\\\)|\"[^\"]*\"|\\\\S+', strs)","relevant":"model = Settings?_split_?import android.view.ViewGroup?_split_?mapper(Player, players_table)?_split_?"}
{"nl":"What's the most memory efficient way to generate the combinations of a set in python?","code":"print(list(itertools.combinations({1, 2, 3, 4}, 3)))","relevant":"return setattr(self, name, value)?_split_?corpus = Corpus(map(Document, l))?_split_?Py_DECREF(start)\nPy_DECREF(stop)\nreturn NULL?_split_?"}
{"nl":"Add Multiple Columns to Pandas Dataframe from Function","code":"df[['hour', 'weekday', 'weeknum']] = df.apply(lambdafunc, axis=1)","relevant":"for i in L:\n    pass?_split_?from numpy import array\nd1.shape\nd2.shape\nd3 = array([d1, d2])?_split_?form['FORM1'] = ['Value1']?_split_?"}
{"nl":"BeautifulSoup - search by text inside a tag","code":"soup.find_all('a', string='Elsie')","relevant":"sio = StringIO(table)\ndf = pd.read_table(sio, sep='\\\\s+', parse_dates=['dt'])\ndf.set_index('dt', inplace=True)\npd.crosstab(df.A > 0, df.B > 0)?_split_?class RecipeForm(Form):\n    category = SelectField('Category', choices=[], coerce=int)?_split_?com.mycompany.AppleScript.LocalCommand?_split_?"}
{"nl":"How do I turn a python datetime into a string, with readable format date?","code":"my_datetime.strftime('%B %d, %Y')","relevant":"line = ' '\nwhile line:\n    pass?_split_?image = Image.open(image_in_path)?_split_?new_dict[v].append(k)?_split_?"}
{"nl":"Parse string to int when string contains a number + extra characters","code":"int(''.join(c for c in s if c.isdigit()))","relevant":"query = users.select().order_by(users.c.id.desc()).limit(5)\nprint(reversed(conn.execute(query).fetchall()))?_split_?seen = set()?_split_?def depth(d):\n    if isinstance(d, dict):\n        pass?_split_?"}
{"nl":"adding new key inside a new key and assigning value in python dictionary","code":"dic['Test'].update({'class': {'section': 5}})","relevant":"green_start = None\nfor s in sg_status:\n    if not green_on and s[1] in ('0', '1', '3'):\n        green_start = s[0]?_split_?cluster.append(i)?_split_?import numpy as np\ndf1 = pd.DataFrame(np.random.randn(5, 3), index=pd.date_range('01\/02\/2014',\n    periods=5, freq='D'), columns=['a', 'b', 'c'])\ndf2 = pd.DataFrame(np.random.randn(8, 3), index=pd.date_range('01\/01\/2014',\n    periods=8, freq='D'), columns=['a', 'b', 'c'])\nIndex = list(set(list(df1.index) + list(df2.index)))\nIndex.sort()\ndf3 = pd.DataFrame({'df1': [(df1.loc[Date, 'c'] if Date in df1.index else\n    np.nan) for Date in Index], 'df2': [(df2.loc[Date, 'c'] if Date in df2.\n    index else np.nan) for Date in Index]}, index=Index)\ndf3?_split_?"}
{"nl":"Transforming the string representation of a dictionary into a real dictionary","code":"dict(map(int, x.split(':')) for x in s.split(','))","relevant":"from sklearn import linear_model?_split_?a = [5, 4, 3, 2, 1]?_split_?from selenium.webdriver.common.keys import Keys\ndriver = webdriver.Firefox()\ndriver.get('http:\/\/example.com')?_split_?"}
{"nl":"How to select element with Selenium Python xpath","code":"driver.find_element_by_xpath(\"\/\/div[@id='a']\/\/a[@class='click']\")","relevant":"def now():\n    return mktime(gmtime())?_split_?plt.xticks(bins, [('2^%s' % i) for i in bins])?_split_?print('Original ROC area: {:0.3f}'.format(roc_auc_score(y_true, y_pred)))?_split_?"}
{"nl":"Find matching rows in 2 dimensional numpy array","code":"np.where((vals == (0, 1)).all(axis=1))","relevant":"def setx(self, value):\n    pass?_split_?sys.stderr = mystdout\nscreen = curses.initscr()\ncurses.noecho()\ncurses.cbreak()\nscreen.keypad(0)\ncurses.nocbreak()\ncurses.echo()\ncurses.endwin()\nsys.stdout = sys.__stdout__\nsys.stderr = sys.__stderr__\nsys.stdout.write(mystdout.get_text())?_split_?for phrase in ignores:\n    reversed_phrase = ' '.join([word[::-1] for word in phrase.split()])?_split_?"}
{"nl":"How to delete a record in Django models?","code":"SomeModel.objects.filter(id=id).delete()","relevant":"foo = sc.parallelize([(1, ('a', 'b')), (2, ('c', 'd')), (1, ('x', 'y'))])?_split_?gtk.main()?_split_?pass?_split_?"}
{"nl":"python convert list to dictionary","code":"dict([['two', 2], ['one', 1]])","relevant":"new_pair = {}?_split_?timestamp('Dijkstra')?_split_?print(('pt', decrypt(encrypt(pt, password), password)))?_split_?"}
{"nl":"python convert list to dictionary","code":"dict(zip(l[::2], l[1::2]))","relevant":"new_pair = {}?_split_?timestamp('Dijkstra')?_split_?print(('pt', decrypt(encrypt(pt, password), password)))?_split_?"}
{"nl":"how to set global const variables in python","code":"GRAVITY = 9.8","relevant":"title = Column(String(100), nullable=False)?_split_?x = 'telnet'?_split_?b = np.array([67.5, 60])\nx, rnorm = nnls(A, b)?_split_?"}
{"nl":"How to use regular expression to separate numbers and characters in strings like \"30M1000N20M\"","code":"re.findall('(([0-9]+)([A-Z]))', '20M10000N80M')","relevant":"re.match('^foo:[^\\\\d]*(\\\\d*\\\\.\\\\d*)[^\\\\d]*(\\\\d*\\\\.\\\\d*)[^\\\\d]*(\\\\d*\\\\.\\\\d*)',\n    line).groups()?_split_?s = 'word1 word2 word3'?_split_?return sorted(lists[0])?_split_?"}
{"nl":"How to use regular expression to separate numbers and characters in strings like \"30M1000N20M\"","code":"re.findall('([0-9]+|[A-Z])', '20M10000N80M')","relevant":"re.match('^foo:[^\\\\d]*(\\\\d*\\\\.\\\\d*)[^\\\\d]*(\\\\d*\\\\.\\\\d*)[^\\\\d]*(\\\\d*\\\\.\\\\d*)',\n    line).groups()?_split_?s = 'word1 word2 word3'?_split_?return sorted(lists[0])?_split_?"}
{"nl":"How to use regular expression to separate numbers and characters in strings like \"30M1000N20M\"","code":"re.findall('([0-9]+)([A-Z])', '20M10000N80M')","relevant":"re.match('^foo:[^\\\\d]*(\\\\d*\\\\.\\\\d*)[^\\\\d]*(\\\\d*\\\\.\\\\d*)[^\\\\d]*(\\\\d*\\\\.\\\\d*)',\n    line).groups()?_split_?s = 'word1 word2 word3'?_split_?return sorted(lists[0])?_split_?"}
{"nl":"Extracting words from a string, removing punctuation and returning a list with separated words in Python","code":"re.compile('\\\\w+').findall('Hello world, my name is...James the 2nd!')","relevant":"def findOccurences(s, ch):\n    return [i for i, letter in enumerate(s) if letter == ch]?_split_?df = pd.concat([A, B], axis=1, keys=list('AB'))\nprint(df)?_split_?[1][2][0]?_split_?"}
{"nl":"Convert string into datetime.time object","code":"datetime.datetime.strptime('03:55', '%H:%M').time()","relevant":"import numpy as np?_split_?import pylab as P\nimport numpy as np\nP.figure()\nbp = P.boxplot(data)\nfor i in range(numBoxes):\n    y = data[i]\nx = np.random.normal(1 + i, 0.04, size=len(y))\nP.plot(x, y, 'r.', alpha=0.2)\nP.show()?_split_?q = qgrp.having(foocol == 'John Doe')\nq.all()?_split_?"}
{"nl":"Python Requests getting SSLerror","code":"requests.get('https:\/\/www.reporo.com\/', verify=False)","relevant":"bob()?_split_?local_filename = os.path.join('C:\\\\test\\\\', filename)?_split_?x = ['1', '2', '3']\nprint(s.format(*x))?_split_?"}
{"nl":"removing data from a numpy.array","code":"a[a != 0]","relevant":"from django.views.decorators.csrf import csrf_exempt\nfrom django.http import HttpResponse\n\n@csrf_exempt\ndef edit_favorites(request):\n    if request.is_ajax():\n        message = 'Yes, AJAX!'?_split_?def rotate_steps(x, shift):\n    out = np.empty_like(x)?_split_?def __init__(self, fname):\n    self.doc = ET.parse(fname)?_split_?"}
{"nl":"Map two lists into a dictionary in Python","code":"new_dict = {k: v for k, v in zip(keys, values)}","relevant":"reactor.listenTCP(8008, container.servers['test2'])?_split_?text = tree.xpath(\"\/\/span[@class='displaytext']\")[0].text_content()?_split_?a?_split_?"}
{"nl":"Map two lists into a dictionary in Python","code":"dict((k, v) for k, v in zip(keys, values))","relevant":"reactor.listenTCP(8008, container.servers['test2'])?_split_?text = tree.xpath(\"\/\/span[@class='displaytext']\")[0].text_content()?_split_?a?_split_?"}
{"nl":"Map two lists into a dictionary in Python","code":"dict([(k, v) for k, v in zip(keys, values)])","relevant":"reactor.listenTCP(8008, container.servers['test2'])?_split_?text = tree.xpath(\"\/\/span[@class='displaytext']\")[0].text_content()?_split_?a?_split_?"}
{"nl":"Get the string within brackets in Python","code":"m = re.search('\\\\[(\\\\w+)\\\\]', s)","relevant":"fd.close()?_split_?import pickle\nfavorite_color = {'lion': 'yellow', 'kitty': 'red'}?_split_?output_lambda = df.apply(lambda x: [x.value_counts().to_dict()]).apply(lambda\n    x: x[0]).to_dict()\noutput_lambda?_split_?"}
{"nl":"Python server \"Only one usage of each socket address is normally permitted\"","code":"s.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)","relevant":"arr = [0, 10, 20, 30, 40]?_split_?magic.from_file('iceland.jpg')\nmagic.from_file('iceland.jpg', mime=True)\nmagic.from_file('greenland.png')?_split_?with open('input.txt', 'rb') as f_input:\n    pass?_split_?"}
{"nl":"How do i add two lists' elements into one list?","code":"list3 = [(a + b) for a, b in zip(list1, list2)]","relevant":"return '(save to edit details)'?_split_?df.groupby('col1')['col2'].apply(lambda x: x.tolist()).to_dict()\n{'A': [0, 1], 'B': [2], 'C': [3]}?_split_?with open(os.path.join('\/proc', str(pid), 'fd', '1'), 'a') as stdin:\n    pass?_split_?"}
{"nl":"Python - Converting Hex to INT\/CHAR","code":"[ord(c) for c in s.decode('hex')]","relevant":"sum_prods = arr1.dot(arr1_weights)?_split_?def has_delete_permission(self, request, obj=None):\n    pass?_split_?C1['emailAddress'] = self.request.get('emailAddress')\nC2 = Cookie.SimpleCookie()\nC2['secretCode'] = self.request.get('secretCode')\nC2['secretCode']['path'] = '\/'\nself.response.headers.add_header('Set-Cookie', C1.output(header=''))\nself.response.headers.add_header('Set-Cookie', C2.output(header=''))?_split_?"}
{"nl":"How to sort in decreasing value first then increasing in second value","code":"print(sorted(student_tuples, key=lambda t: (-t[2], t[0])))","relevant":"def main():\n    visit.Launch()?_split_?print('%03d %5.2f' % (5, 22 \/ 7.0))?_split_?self.audio_frames.append(data)?_split_?"}
{"nl":"Repeating elements in list comprehension","code":"[y for x in range(3) for y in [x, x]]","relevant":"def clean_shut():\n    print('Clean shut performed')?_split_?from gensim.models import Word2Vec?_split_?pprint(cartesian)?_split_?"}
{"nl":"Doc, rtf and txt reader in python","code":"txt = open('file.txt').read()","relevant":"info = tarfile.TarInfo(name='dir')?_split_?sum_df = pd.DataFrame(sum_row, index=['Total'])?_split_?MyButton1.grid(row=0, column=0)\nMyButton2 = Button(master, text='BUTTON2', width=10, command=callback)\nMyButton2.grid(row=1, column=0)\nMyButton3 = Button(master, text='BUTTON3', width=10, command=callback)\nMyButton3.grid(row=2, column=0)?_split_?"}
{"nl":"How do you divide each element in a list by an int?","code":"myList[:] = [(x \/ myInt) for x in myList]","relevant":"cur_list.append({keys[i]: values[i][j]})?_split_?plt.figure()\nvalues = [3, 12, 5, 8]\nlabels = ['a', 'b', 'c', 'd']\nplt.pie(values, labels=labels, autopct='%.2f')\nplt.show()?_split_?def get_overlap(s1, s2):\n    s = difflib.SequenceMatcher(None, s1, s2)\npos_a, pos_b, size = s.find_longest_match(0, len(s1), 0, len(s2))?_split_?"}
{"nl":"python: dots in the name of variable in a format string","code":"\"\"\"Name: {0[person.name]}\"\"\".format({'person.name': 'Joe'})","relevant":"func(3)?_split_?for char in chars:\n    count = check_string.count(char)\nif count > 1:\n    pass?_split_?Py_DECREF(iterator)?_split_?"}
{"nl":"How to replace the white space in a string in a pandas dataframe?","code":"df.replace(' ', '_', regex=True)","relevant":"cv2.imshow('masked', masked_data)?_split_?from pygments.formatters import TerminalFormatter?_split_?d = {'test': [0, 1, 2]}?_split_?"}
{"nl":"Python: most efficient way to convert date to datetime","code":"datetime.datetime.combine(my_date, datetime.time.min)","relevant":"it = iter(iterable_or_sequence)?_split_?arr = [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1,\n    1, 0]\ndata = struct.pack('B' * len(arr), *[(pixel * 255) for pixel in arr])\nimg = Image.frombuffer('L', size, data)?_split_?if best_split != None:\n    pass?_split_?"}
{"nl":"Tuple to string","code":"tst2 = str(tst)","relevant":"html = (\n    \"\"\"\n    <form action=\"https:\/\/website.com\/log.php\" method=\"POST\">\n        <input name=\"log\" type=\"text\" value=\"{log}\">\n        <input name=\"pwd\" type=\"password\" value=\"{pwd}\">\n        <input name=\"finish\" type=\"text\" value=\"{finish}\">\n        <input type=\"submit\">\n    <\/form>\n    \"\"\"\n    .format(**payload))\nwith open('.\/temp.html', 'w') as hf:\n    hf.write(html)\nsess = dryscrape.Session(base_url='.\/')\nq = sess.visit('\/temp.html')?_split_?soup = BeautifulSoup(response.read(), from_encoding=response.info().\n    getparam('charset'))?_split_?for x in range(0, 10, 2):\n    pass?_split_?"}
{"nl":"get file creation & modification date\/times in","code":"time.ctime(os.path.getmtime(file))","relevant":"path = '\/home\/[user]'\nfilename = glob.glob(path + '\/foo_*.txt')?_split_?print('hello world')?_split_?request = urllib.request.Request(url)?_split_?"}
{"nl":"get file creation & modification date\/times in","code":"time.ctime(os.path.getctime(file))","relevant":"path = '\/home\/[user]'\nfilename = glob.glob(path + '\/foo_*.txt')?_split_?print('hello world')?_split_?request = urllib.request.Request(url)?_split_?"}
{"nl":"get file creation & modification date\/times in","code":"t = os.path.getmtime(filename)","relevant":"path = '\/home\/[user]'\nfilename = glob.glob(path + '\/foo_*.txt')?_split_?print('hello world')?_split_?request = urllib.request.Request(url)?_split_?"}
{"nl":"get file creation & modification date\/times in","code":"os.path.getmtime(path)","relevant":"path = '\/home\/[user]'\nfilename = glob.glob(path + '\/foo_*.txt')?_split_?print('hello world')?_split_?request = urllib.request.Request(url)?_split_?"}
{"nl":"get file creation & modification date\/times in","code":"print(('last modified: %s' % time.ctime(os.path.getmtime(file))))","relevant":"path = '\/home\/[user]'\nfilename = glob.glob(path + '\/foo_*.txt')?_split_?print('hello world')?_split_?request = urllib.request.Request(url)?_split_?"}
{"nl":"get file creation & modification date\/times in","code":"print(('created: %s' % time.ctime(os.path.getctime(file))))","relevant":"path = '\/home\/[user]'\nfilename = glob.glob(path + '\/foo_*.txt')?_split_?print('hello world')?_split_?request = urllib.request.Request(url)?_split_?"}
{"nl":"get file creation & modification date\/times in","code":"return os.path.getctime(path_to_file)","relevant":"path = '\/home\/[user]'\nfilename = glob.glob(path + '\/foo_*.txt')?_split_?print('hello world')?_split_?request = urllib.request.Request(url)?_split_?"}
{"nl":"How to Close a program using python?","code":"os.system('TASKKILL \/F \/IM firefox.exe')","relevant":"dispatcher.connect(self.spider_idle, signals.spider_idle)?_split_?heapq.heapify(a)\nprint(a)\na.remove(5)?_split_?natural_sort_key('342B')?_split_?"}
{"nl":"Is there a generator version of `string.split()` in Python?","code":"return (x.group(0) for x in re.finditer(\"[A-Za-z']+\", string))","relevant":"df[~df.index.isin(df_a.index + df_b.index)]?_split_?def f():\n    pass?_split_?self.mainframe.columnconfigure(0, weight=1)?_split_?"}
{"nl":"Using Python String Formatting with Lists","code":"\"\"\", \"\"\".join(['%.2f'] * len(x))","relevant":"if start.lower() == 'squares':\n    pass?_split_?class MyClient(DjangoClient):\n\n    def send(self, **kwargs):\n        \"\"\"\n        check if culprit (event name) should be skipped\n        \"\"\"\nif kwargs.get('culprit', '').startswith('my.module.to.skip'):\n    self.logger.info('Skipping entry')\nelse:\n    return super(MyClient, self).send(**kwargs)?_split_?import numpy as np?_split_?"}
{"nl":"How to use regex with optional characters in python?","code":"print(re.match('(\\\\d+(\\\\.\\\\d+)?)', '3434.35353').group(1))","relevant":"testeddate = '-'.join([year, month, day]) + ' 00:00:00'?_split_?def apply_driver_hacks(self, app, info, options):\n    if 'isolation_level' not in options:\n        options['isolation_level'] = 'READ COMMITTED'?_split_?L = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nlucky = []\nlucky.append(L[0])\ndel L[::L[0]]\nL\nlucky.append(L[0])\ndel L[::L[0]]\nL?_split_?"}
{"nl":"How to remove parentheses and all data within using Pandas\/Python?","code":"df['name'].str.replace('\\\\(.*\\\\)', '')","relevant":"if width == 0 and height == 0 and (color == 'red' or emphasis is None):\n    raise ValueError(\"I don't think so -- values are %s, %s\" % (width, height))\nBlob.__init__(self, width, height, color, emphasis, highlight)?_split_?pool = Pool(processes=4)?_split_?if time.time() > end_time:\n    break?_split_?"}
{"nl":"Python: filter list of list with another list","code":"result = [x for x in list_a if x[0] in list_b]","relevant":"recipe = Recipe.objects.create(**validated_data)?_split_?x = 1?_split_?map(lambda x: x.title(), app('Google Chrome').windows[0].tabs())?_split_?"}
{"nl":"Generate all possible strings from a list of token","code":"print([''.join(a) for a in combinations(['hel', 'lo', 'bye'], 2)])","relevant":"[0][1][2]?_split_?[1, 2] == [2, 1]?_split_?print(_('Edit'))?_split_?"}
{"nl":"python how to search an item in a nested list","code":"[x for x in li if 'ar' in x[2]]","relevant":"domain = sdb.get_domain(MY_DOMAIN_STRING_NAME)?_split_?struct.unpack(fmt, string)?_split_?print('\\x1b[{}C\\x1b[1A'.format(len(x) + y), end=' ')?_split_?"}
{"nl":"Python - How to sort a list of lists by the fourth element in each list?","code":"unsorted_list.sort(key=lambda x: x[3])","relevant":"query = 'alter table t add column %s text'\nrow1 = 'col1', 'col2'\nfor c in row1:\n    cursor.execute(query, (AsIs(c),))\nconn.commit()?_split_?y = datetime(2011, 1, 9)\ns.ix[x:y]?_split_?def read(self, kid):\n    return '{0} is reading {1}.'.format(kid, self.name)\n\ndef burn(self, library, lighter):\n    library.remove(self)?_split_?"}
{"nl":"Python logging typeerror","code":"logging.info('test')","relevant":"if val_len > max_len:\n    max_len = val_len?_split_?cur.execute('SELECT ? FROM Data where ?=?', (column, goal, constrain))?_split_?cursor.execute(query)\nconnection.commit()?_split_?"}
{"nl":"How to make several plots on a single page using matplotlib?","code":"fig.add_subplot(1, 1, 1)","relevant":"rdf['new'] = rdf.foo + rdf.bar?_split_?from collections import Counter\ncounts = Counter((k[1], v) for k, v in dictA.items())\nprint(counts)?_split_?@app.route('\/createcm', methods=['GET'])\ndef foo():\n    pass?_split_?"}
{"nl":"Sort a Python dictionary by value","code":"sorted(list(x.items()), key=operator.itemgetter(1))","relevant":"from django.views import debug?_split_?if hasattr(source, 'keys'):\n    pass?_split_?def remember(f):\n    pass?_split_?"}
{"nl":"Sort a Python dictionary by value","code":"sorted(dict1, key=dict1.get)","relevant":"from django.views import debug?_split_?if hasattr(source, 'keys'):\n    pass?_split_?def remember(f):\n    pass?_split_?"}
{"nl":"Sort a Python dictionary by value","code":"sorted(d, key=d.get, reverse=True)","relevant":"from django.views import debug?_split_?if hasattr(source, 'keys'):\n    pass?_split_?def remember(f):\n    pass?_split_?"}
{"nl":"Sort a Python dictionary by value","code":"sorted(list(d.items()), key=(lambda x: x[1]))","relevant":"from django.views import debug?_split_?if hasattr(source, 'keys'):\n    pass?_split_?def remember(f):\n    pass?_split_?"}
{"nl":"Numpy elementwise product of 3d array","code":"np.einsum('ijk,ikl->ijl', A, B)","relevant":"foo.decode('utf8').encode('utf8')?_split_?sample_dimensions = 16, 16\nfor box in get_all_corner_combinations(im, sample_dimensions):\n    image_samples.append(im.crop(box))\nclassifier = YourClassifier()\nclassifications = []\nfor sample in image_samples:\n    classifications.append(classifier(sample))\nlabel = fuse_classifications(classifications)?_split_?full_name = fields.CharField(attribute='profile__full_name')?_split_?"}
{"nl":"print variable and a string in python","code":"print('I have: {0.price}'.format(card))","relevant":"return tuple(int(i * 255) for i in colorsys.hsv_to_rgb(h, s, v))?_split_?index = np.empty(shape=(len(corpus), num_features), dtype=np.float32)?_split_?from sage.all import *?_split_?"}
{"nl":"How can I add a comment to a YAML file in Python","code":"f.write('# Data for Class A\\n')","relevant":"print(re.match('^=+$', '======') is not None)?_split_?plt.figure()?_split_?def predict(self, X):\n    return self.est.predict_proba(X)[:, (1)][:, (numpy.newaxis)]?_split_?"}
{"nl":"How do I move the last item in a list to the front in python?","code":"a = a[-1:] + a[:-1]","relevant":"for word in line.split():\n    pass?_split_?batch_size, input_size, n = 2, 3, 2\nx = tf.placeholder(tf.types.float32, shape=(n, batch_size, input_size))\ny = tf.add(x, x)?_split_?response.set_cookie('lang', value=code, max_age=31536000)\nreturn response?_split_?"}
{"nl":"python - convert datetime to varchar\/string","code":"datetimevariable.strftime('%Y-%m-%d')","relevant":"writer.writerow(row)?_split_?print(convert_consolodate(ranges))?_split_?return g.groupby('end_date')['measure'].sum()?_split_?"}
{"nl":"What's the most pythonic way of normalizing lineends in a string?","code":"mixed.replace('\\r\\n', '\\n').replace('\\r', '\\n')","relevant":"x\nx.astype('unicode')?_split_?a = 0?_split_?class A(object, metaclass=BaseInspector):\n    pass\n\n@returns(int)\ndef compute(self, value):\n    return value * 3?_split_?"}
{"nl":"How to find the real user home directory using python?","code":"os.path.expanduser('~user')","relevant":"@skip('skip this test')\ndef testSomething(self):\n    pass\n\ndef testBar(self):\n    pass?_split_?inMemoryOutputFile = StringIO()\nzipFile = ZipFile(inMemoryOutputFile, 'w')\nzipFile.writestr('OEBPS\/content.xhtml', 'hello world')\nzipFile.close()\ninMemoryOutputFile.seek(0)?_split_?request_queue.put(data)?_split_?"}
{"nl":"In Python, how do I index a list with another list?","code":"T = [L[i] for i in Idx]","relevant":"console = [{'script': 'myapplication.py', 'icon_resources': [(0,\n    'favicon.ico')], 'dest_base': 'app_name'}]?_split_?s = s.lower()\ns = ''.join([char for char in s if char in whitelist])\nreturn s == s[::-1]?_split_?ax.relim()?_split_?"}
{"nl":"Iterate through words of a file in Python","code":"words = open('myfile').read().split()","relevant":"b = 'bbb'?_split_?mysql_time = '2010-01-02 03:04:05'\nmysql_time_struct = time.strptime(mysql_time, '%Y-%m-%d %H:%M:%S')?_split_?opener = urllib.request.build_opener()?_split_?"}
{"nl":"Summing 2nd list items in a list of lists of lists","code":"[[sum([x[1] for x in i])] for i in data]","relevant":"print(t2.timeit(1000) \/ 1000)?_split_?with open(path_2, 'r') as f2:\n    while l1 != '' and l2 != '':\n        l1 = f1.readline()?_split_?def __call__(self, *args):\n    pass?_split_?"}
{"nl":"Summing 2nd list items in a list of lists of lists","code":"[sum([x[1] for x in i]) for i in data]","relevant":"print(t2.timeit(1000) \/ 1000)?_split_?with open(path_2, 'r') as f2:\n    while l1 != '' and l2 != '':\n        l1 = f1.readline()?_split_?def __call__(self, *args):\n    pass?_split_?"}
{"nl":"Django order by highest number of likes","code":"Article.objects.annotate(like_count=Count('likes')).order_by('-like_count')","relevant":"integral = scipy.integrate.nquad(f, ([-d \/ 2, d \/ 2], [-d \/ 2, d \/ 2]))[0]?_split_?f.__getitem__((slice(4, 10), slice(None, None, -1), Ellipsis))?_split_?outputTbl = dbf.Table('c:\\\\temp\\\\output.dbf', 'tid N(17.0), zones C(20)')?_split_?"}
{"nl":"How to convert datetime.date.today() to UTC time?","code":"today = datetime.datetime.utcnow().date()","relevant":"execute(update, hosts=last_five)?_split_?x = [1, 2, 3, 4, 5]\nx\ny = map(str, x)\ny?_split_?md5Hash = md5.new\nsomedata = 'foobar'\nhashstring = md5Hash(somedata).hexdigest()?_split_?"}
{"nl":"How to perform element-wise multiplication of two lists in Python?","code":"[(a * b) for a, b in zip(lista, listb)]","relevant":"foo = timeit(lexicon, number=nloops)?_split_?for table_el in doc.xpath('\/\/table'):\n    table = table_to_list(table_el)\npprint(table)?_split_?class MyAbstractClass:\n\n    def method1(self):\n        abstract\n\n\nclass MyClass(MyAbstractClass):\n    pass\n\ndef abstract():\n    pass?_split_?"}
{"nl":"Capturing emoticons using regular expression in python","code":"re.findall('(?::|;|=)(?:-)?(?:\\\\)|\\\\(|D|P)', s)","relevant":"from pdfminer.pdfparser import PDFParser?_split_?zname, zipextfile = 'zipcontainer.zip', 'file_in_archive'\nistream = ZipFile(zname).open(zipextfile)\nostream = StringIO(istream.read())?_split_?im = pl.contourf(data[(i), :, :])?_split_?"}
{"nl":"Capturing emoticons using regular expression in python","code":"re.match('[:;][)(](?![)(])', str)","relevant":"from pdfminer.pdfparser import PDFParser?_split_?zname, zipextfile = 'zipcontainer.zip', 'file_in_archive'\nistream = ZipFile(zname).open(zipextfile)\nostream = StringIO(istream.read())?_split_?im = pl.contourf(data[(i), :, :])?_split_?"}
{"nl":"List of objects to JSON with Python","code":"json_string = json.dumps([ob.__dict__ for ob in list_name])","relevant":"c = db.cursor()\nc.execute('create table foo (bar integer, baz timestamp)')\nc.execute('insert into foo values(?, ?)', (23, datetime.datetime.now()))?_split_?with ydl:\n    result = ydl.extract_info('http:\/\/www.youtube.com\/watch?v=BaW_jenozKc',\n        download=False)\nif 'entries' in result:\n    video = result['entries'][0]\nelse:\n    video = result\nprint(video)\nvideo_url = video['url']\nprint(video_url)?_split_?inst = session.query(Model).first()\nsession.expunge(inst)\nmake_transient(inst)?_split_?"}
{"nl":"List of zeros in python","code":"listofzeros = [0] * n","relevant":"IPython.embed()?_split_?root = etree.XML('<root><\/root>')?_split_?response.text?_split_?"}
{"nl":"python: how to convert a string to utf-8","code":"stringnamehere.decode('utf-8', 'ignore')","relevant":"def replace_kv(self, _dict):\n    \"\"\"Replace any occurrence of a value with the key\"\"\"\nfor key, value in _dict.items():\n    label = '[[ {0} ]]'.format(key)\nself.text = self.text.replace(value, label)\nreturn self.text\n\ndef iterate(self, lod):\n    \"\"\"Iterate over each dict object in a given list of dicts, `lod` \"\"\"\nfor _dict in lod:\n    self.text = self.replace_kv(_dict)\nreturn self.text?_split_?root.sides = [10, [1, 2]]\nprint(root.sides)?_split_?p = 0?_split_?"}
{"nl":"Python regex - Ignore parenthesis as indexing?","code":"re.findall('((?:A|B|C)D)', 'BDE')","relevant":"self.text.insert('end', '\\n'.join(dir(tk.Tk)))\nself.text.configure(state='disabled')?_split_?for line in res:\n    pass?_split_?y = 2\n\ndef __str__(self):\n    return '%s' % self._value_?_split_?"}
{"nl":"Python dict how to create key or append an element to key?","code":"dic.setdefault(key, []).append(value)","relevant":"filename = form.getfirst('file')?_split_?df.index?_split_?while True:\n    l, data = inp.read()?_split_?"}
{"nl":"Finding the minimum value in a numpy array and the corresponding values for the rest of that array's row","code":"a[np.argmin(a[:, (1)])]","relevant":"d = collections.OrderedDict([('b', 2), ('a', 1)])\njson.dumps(d)?_split_?cell_contents = ''.join(tokens.contents)?_split_?time.sleep(1)\noutput = os.read(fd, 1024)?_split_?"}
{"nl":"Python \"extend\" for a dictionary","code":"a.update(b)","relevant":"while i * i <= n:\n    if n % i == 0:\n        pass?_split_?class User(Base):\n    id = Column(Integer, primary_key=True)\nname = Column(String, nullable=False, unique=True)\ncreated_at = Colmn(DateTime, nullable=False, default=func.now())\n\n\nclass Post(Base):\n    id = Column(Integer, primary_key=True)\nuser_id = Column(Integer, ForeignKey(User.id), nullable=False)\nuser = relationship(User, backref=backref('posts'))\ntitle = Column(String, nullable=False)\nbody = Column(Text, nullable=False)?_split_?import re?_split_?"}
{"nl":"Removing key values pairs from a list of dictionaries","code":"[{k: v for k, v in d.items() if k != 'mykey1'} for d in mylist]","relevant":"for char in s:\n    pass?_split_?def build_tree_recursive(tree, parent, nodes):\n    pass?_split_?dec_lat = random.random() \/ 100?_split_?"}
{"nl":"Removing key values pairs from a list of dictionaries","code":"[dict((k, v) for k, v in d.items() if k != 'mykey1') for d in mylist]","relevant":"for char in s:\n    pass?_split_?def build_tree_recursive(tree, parent, nodes):\n    pass?_split_?dec_lat = random.random() \/ 100?_split_?"}
{"nl":"Simple way to create matrix of random numbers","code":"numpy.random.random((3, 3))","relevant":"frame = pandas.DataFrame()?_split_?class Meta(type):\n    pass?_split_?for ref, (sum_, count) in unique.items():\n    out.write('%f,%f\\n' % (ref, sum_ \/ count))?_split_?"}
{"nl":"Make new column in Panda dataframe by adding values from other columns","code":"df['C'] = df['A'] + df['B']","relevant":"for s in itertools.islice(iter_all_strings(), 54):\n    pass?_split_?df = df.sort('B')\nbins = np.arange(0, 1.0, 0.155)\nind = np.digitize(df['B'], bins)?_split_?from rpy2.robjects import pandas2ri?_split_?"}
{"nl":"Find dictionary items whose key matches a substring","code":"[value for key, value in list(programs.items()) if 'new york' in key.lower()]","relevant":"out = np.empty((9, 9))?_split_?coords[2] += 1?_split_?def center(self):\n    pass?_split_?"}
{"nl":"Import module in another directory from a \"parallel\" sub-directory","code":"sys.path.append('\/path\/to\/main_folder')","relevant":"vbox.add(label)?_split_?install_data.run(self)?_split_?output.append((num, val))?_split_?"}
{"nl":"Regex for getting all digits in a string after a character","code":"re.findall('\\\\d+(?=[^[]+$)', s)","relevant":"import datetime, pytz?_split_?def update(self, move, blocks):\n    if self.on_ground:\n        pass?_split_?p()?_split_?"}
{"nl":"Python pickle\/unpickle a list to\/from a file","code":"pickle.load(open('afile', 'rb'))","relevant":"c = [('15.5', 100), ('16.5', 100)]?_split_?1?_split_?ax2.set_ylabel('Static axis', weight='bold')?_split_?"}
{"nl":"Clicking a link using selenium using python","code":"driver.find_element_by_xpath('xpath').click()","relevant":"if ret < 0:\n    errno = ctypes.get_errno()?_split_?dlist[a][1].append(b)?_split_?set(second_list).difference(dic)?_split_?"}
{"nl":"Counting unique index values in Pandas groupby","code":"ex.groupby(level='A').agg(lambda x: x.index.get_level_values(1).nunique())","relevant":"print(a)?_split_?elem2 = driver.find_element_by_name('pw')\nelem2.send_keys('Password')\nelem.send_keys(Keys.RETURN)\ndriver.quit()?_split_?list1 = ['xx', 'yy', 'zz']\nlist2 = [1, 2, 3]\nlist1 = [(list1[i] * list2[i]) for i in range(len(list1))]\nfor k in ''.join(list1):\n    pass?_split_?"}
{"nl":"Dict of dicts of dicts to DataFrame","code":"pd.concat(map(pd.DataFrame, iter(d.values())), keys=list(d.keys())).stack().unstack(0)","relevant":"(2)[foo, foo, bar]?_split_?z = \"{1:xxxx}{2:xxxx}{3:{10:xxxx}}{4:'xxxx'}\"?_split_?import os?_split_?"}
{"nl":"In Python, find out number of differences between two ordered lists","code":"sum(1 for i, j in zip(a, b) if i != j)","relevant":"labels = np.random.randint(2, size=10)?_split_?def is_os_64bit():\n    return platform.machine().endswith('64')?_split_?date(2011, 1, 15) - date.today()\ndate(2011, 1, 15) - date.today() < timedelta(days=3)?_split_?"}
{"nl":"When the key is a tuple in dictionary in Python","code":"d = {(a.lower(), b): v for (a, b), v in list(d.items())}","relevant":"response.data['20_mi_count'] = 30\nresponse.data['30_mi_count'] = 45\nreturn response?_split_?SocketServer.TCPServer.__init__(self, ('localhost', 5555), myHandler)?_split_?result = array(result[decimation_factor - 1::decimation_factor])?_split_?"}
{"nl":"Sorting a list of tuples with multiple conditions","code":"list_.sort(key=lambda x: [x[0], len(x[1]), x[1]])","relevant":"with open('result.txt', 'w') as result:\n    for file_ in files:\n        for line in open(file_, 'r'):\n            result.write(line)?_split_?return summation?_split_?class Poll(models.Model):\n\n    def __unicode__(self):\n        return self.question\n\n\nclass Choice(models.Model):\n\n    def __unicode__(self):\n        pass?_split_?"}
{"nl":"trim whitespace","code":"s.strip()","relevant":"autostart = true\nautorestart = true?_split_?f = file('types.txt')?_split_?\"\"\"\"\"\".join(merged)?_split_?"}
{"nl":"trim whitespace (including tabs)","code":"s = s.lstrip()","relevant":"def bicg_solve(M, B):\n    X, info = zip(*(bicg(M, b) for b in B.T))?_split_?y = np.matrix(y).T?_split_?count = {}\nfor word in words:\n    if word in count:\n        count[word] += 1\nelse:\n    count[word] = 1?_split_?"}
{"nl":"trim whitespace (including tabs)","code":"s = s.rstrip()","relevant":"def bicg_solve(M, B):\n    X, info = zip(*(bicg(M, b) for b in B.T))?_split_?y = np.matrix(y).T?_split_?count = {}\nfor word in words:\n    if word in count:\n        count[word] += 1\nelse:\n    count[word] = 1?_split_?"}
{"nl":"trim whitespace (including tabs)","code":"s = s.strip(' \\t\\n\\r')","relevant":"def bicg_solve(M, B):\n    X, info = zip(*(bicg(M, b) for b in B.T))?_split_?y = np.matrix(y).T?_split_?count = {}\nfor word in words:\n    if word in count:\n        count[word] += 1\nelse:\n    count[word] = 1?_split_?"}
{"nl":"trim whitespace (including tabs)","code":"print(re.sub('[\\\\s+]', '', s))","relevant":"def bicg_solve(M, B):\n    X, info = zip(*(bicg(M, b) for b in B.T))?_split_?y = np.matrix(y).T?_split_?count = {}\nfor word in words:\n    if word in count:\n        count[word] += 1\nelse:\n    count[word] = 1?_split_?"}
{"nl":"In Django, how do I filter based on all entities in a many-to-many relation instead of any?","code":"Task.objects.exclude(prerequisites__status__in=['A', 'P', 'F'])","relevant":"population = [a for n, a in zip(pops, alleles) for _ in range(n)]?_split_?worksheet1 = workbook1.sheet_by_name('Sheet1')?_split_?class Node(Base):\n    __tablename__ = 'node'\nnid = Column(Integer, primary_key=True)\nuuid = Column(String(128))\nvid = Column(Integer)\n\n\nclass Node1(Node):\n    __tablename__ = 'node_1'\n\n\nclass Node2(Node):\n    __tablename__ = 'node_2'?_split_?"}
{"nl":"Background color for Tk in Python","code":"root.configure(background='black')","relevant":"print(base_url)?_split_?list(itertools.chain(*lst))?_split_?urllib.request.urlopen('http:\/\/www.python.org')?_split_?"}
{"nl":"python dict to numpy structured array","code":"numpy.array([(key, val) for key, val in result.items()], dtype)","relevant":"def foo():\n    pass?_split_?for q in range(1, M + 1):\n    if pick_Q(N, M, q) >= prob:\n        return q\nraise ValueError('Could not find a value for q')?_split_?another_row = result.fetchone()?_split_?"}
{"nl":"Pandas - Sorting By Column","code":"pd.concat([df_1, df_2.sort_values('y')])","relevant":"import urllib.request, urllib.error, urllib.parse\nfrom oauth2client import gce\n\ndef GetMetadata(path):\n    return urllib.request.urlopen('http:\/\/metadata\/computeMetadata\/v1\/%s' % path,\n        headers={'Metadata-Flavor': 'Google'}).read()\ncredentials = gce.AppAssertionCredentials(scope=\n    'https:\/\/www.googleapis.com\/auth\/bigquery')\nclient = bigquery_client.BigqueryClient(credentials=credentials, api=\n    'https:\/\/www.googleapis.com', api_version='v2', project_id=GetMetadata(\n    'project\/project-id'))?_split_?reason = dict(form.fields['reason'].choices)[reason]?_split_?x = np.linspace(xmin, xmax, 100)\np = norm.pdf(x, mu, std)\nplt.plot(x, p, 'k', linewidth=2)\ntitle = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\nplt.title(title)\nplt.show()?_split_?"}
{"nl":"rreplace - How to replace the last occurence of an expression in a string?","code":"re.sub('(.*)<\/div>', '\\\\1<\/bad>', s)","relevant":"d = {'prod_code': ['040201060AAAIAI', '040201060AAAIAJ', '040201060AAAIAI',\n    '040201060AAAIAI', '040201060AAAIAI', '040201060AAAIAI',\n    '040301060AAAKAG', '040301060AAAKAK', '040301060AAAKAK',\n    '040301060AAAKAX', '040301060AAAKAK', '040301060AAAKAK'], 'month': [\n    '2016-01-01', '2016-02-01', '2016-03-01', '2016-01-01', '2016-02-01',\n    '2016-03-01', '2016-01-01', '2016-02-01', '2016-03-01', '2016-01-01',\n    '2016-02-01', '2016-03-01'], 'cost': [43, 45, 46, 41, 48, 59, 8, 9, 10,\n    12, 15, 13]}\ndf = pd.DataFrame.from_dict(d)\ndf.set_index('prod_code', inplace=True)\nfor i, row in df.iterrows():\n    pass?_split_?buildOptions = dict(include_files=[(absolute_path_to_your_file,\n    'final_filename')])\nbuildOptions = dict(include_files=['your_folder\/'])\nsetup(name='appname', version='1.0', description='description', author=\n    'your name', options=dict(build_exe=buildOptions), executables=executables)?_split_?response = requests.post(url, files=files)?_split_?"}
{"nl":"How do I compare values in a dictionary?","code":"print(max(d, key=lambda x: (d[x]['salary'], d[x]['bonus'])))","relevant":"\"\"\"http:\/\/app.boxee.tv\/action\/add\"\"\"?_split_?timeparse('4:17')\ntimeparse('5hr34m56s')?_split_?m['Top 5'] = l\nk = json.dumps(m)?_split_?"}
{"nl":"How to do many-to-many Django query to find book with 2 given authors?","code":"Book.objects.filter(author__id=1).filter(author__id=2)","relevant":"idx = [1, 4, 8, 10, 22]?_split_?for char in inp:\n    pass?_split_?foo.a = 1\nprint(make_hash(foo.__dict__))?_split_?"}
{"nl":"Python regex split case insensitive in 2.6","code":"re.compile('XYZ', re.IGNORECASE).split('fooxyzbar')","relevant":"fig = plt.figure()\nplt.errorbar(tuple(indices), tuple(values), tuple(errors), marker='.')\nplt.xlim([-0.5, len(values) - 0.5])\nplt.xlabel('My x-axis title')\nplt.ylabel('My y-axis title')\nplt.title(title)\nplt.savefig(plot_file_name)\nplt.close(fig)?_split_?@app.context_processor\ndef inject_paths():\n    pass?_split_?any(x[0] == 'a' for x in seq_of_tups)?_split_?"}
{"nl":"List comprehension - converting strings in one list, to integers in another","code":"[sum(map(int, s)) for s in example.split()]","relevant":"plt.ylim([-8, 8])?_split_?('x', int),?_split_?import re\ndata = 'Place,08\/09\/2010,\"15,531\",\"2,909\",650'\nres = re.findall(\n    '(\\\\w+),(\\\\d{2}\/\\\\d{2}\/\\\\d{4}),\\\\\"([\\\\d,]+)\\\\\",\\\\\"([\\\\d,]+)\\\\\",(\\\\d+)',\n    data)\nres?_split_?"}
{"nl":"How to find duplicate elements in array using for loop in Python?","code":"[i for i in y if y[i] == 1]","relevant":"fig = plt.figure()?_split_?for x in range(n):\n    Mx[x] = x - n \/ 2?_split_?self.goal.field.add(new_field)?_split_?"}
{"nl":"Converting byte string in unicode string","code":"c.decode('unicode_escape')","relevant":"kwargs['context'] = self.get_serializer_context()?_split_?topn = 20\nmost_similar_words = model.most_similar([model_word_vector], [], topn)?_split_?MEDIA_ROOT = os.path.join(os.path.dirname(__file__), 'static').replace('\\\\',\n    '\/')?_split_?"}
{"nl":"How can I \"unpivot\" specific columns from a pandas DataFrame?","code":"pd.melt(x, id_vars=['farm', 'fruit'], var_name='year', value_name='value')","relevant":"result.add(''.join(s_dq))?_split_?ax = fig.add_subplot(111, polar=True)\nax.grid(False)?_split_?parser.add_argument('--sample', type=int, action='append')\nparser.add_argument('--sample-differently', action='store_true')\nparser.add_argument('--sample-objects', nargs='*', action='append')\nargs = parser.parse_args()?_split_?"}
{"nl":"add new item to dictionary","code":"default_data['item3'] = 3","relevant":"return zip(a, b)?_split_?print(df.to_latex(index=None, column_format='rrr'))?_split_?import os\nimport stat?_split_?"}
{"nl":"add new item to dictionary","code":"default_data.update({'item3': 3, })","relevant":"return zip(a, b)?_split_?print(df.to_latex(index=None, column_format='rrr'))?_split_?import os\nimport stat?_split_?"}
{"nl":"add new item to dictionary","code":"default_data.update({'item4': 4, 'item5': 5, })","relevant":"return zip(a, b)?_split_?print(df.to_latex(index=None, column_format='rrr'))?_split_?import os\nimport stat?_split_?"}
{"nl":"Index the first and the last n elements of a list","code":"l[:3] + l[-3:]","relevant":"x = Decimal('2606.8950000000001')?_split_?mat.sum_duplicates()?_split_?from scipy.stats import gaussian_kde?_split_?"}
{"nl":"How to reset index in a pandas data frame?","code":"df = df.reset_index(drop=True)","relevant":"df = pd.read_csv(fn, sep='\\\\s+', index_col=0)\ndf.index = df.index.values + df.RecordID.map(str)\ndel df['RecordID']?_split_?{'date': '2013-04-27T23:22:13.528239', 'username': 'kernel', 'session':\n    'd7eb303b-d2d0-4723-aef2-738545a8da11', 'msg_id':\n    '9ed1d332-398c-4132-b203-1e7bf8fed712', 'msg_type': 'execute_reply'}\n{'date': '2013-04-27T23:22:13.522049', 'username': 'minrk', 'session':\n    '5b03b89a-93c9-4113-bb85-17ba57233711', 'msg_id':\n    'c6d0f85e-fc25-4f1e-84e1-3d706b615393', 'msg_type': 'execute_request'}?_split_?v[value].append(key)?_split_?"}
{"nl":"Merging a list with a list of lists","code":"[a[x].append(b[x]) for x in range(3)]","relevant":"def __len__(self):\n    return len(self.data)\n\ndef __getitem__(self, slice):\n    return self.data[slice]?_split_?a_dict = {'new_key': 'new_value'}\nwith open('test.json') as f:\n    data = json.load(f)\ndata.update(a_dict)\nwith open('test.json', 'w') as f:\n    json.dump(data, f)?_split_?list(incremental_window([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))?_split_?"}
{"nl":"how to find the target file's full(absolute path) of the symbolic link or soft link in python","code":"os.path.realpath(path)","relevant":"x.__name__?_split_?pd.notnull('hey')?_split_?a = 3\na?_split_?"}
{"nl":"How to check if a dictionary is in another dictionary in python","code":"set(L[0].f.items()).issubset(set(a3.f.items()))","relevant":"exitcode = proc.returncode?_split_?float(10 ** Decimal('1'))\nfloat(10 ** Decimal('1.0000000000000001'))\nfloat(10 ** Decimal('1.00000000000000015'))\nfloat(10 ** Decimal('1.0000000000000002'))?_split_?\"\"\"\nCREDENTIALS:\n  USERNAME: 'USERNAME'\n  PASSWORD: 'PASSWORD'\nLOG_FILE_PATH: \n\"\"\"?_split_?"}
{"nl":"How to find the index of a value in 2d array in Python?","code":"zip(*np.where(a == 1))","relevant":"if pid == 0:\n    os.setsid()\nelse:\n    pass?_split_?with open('myfile.txt') as f:\n    pass?_split_?for line in file:\n    line = line.strip()\nllist = line.split()\nif llist and llist[0] == 'NUMS':\n    for line in file:\n        line = line.strip()\nif line == 'END':\n    break\nelse:\n    print(line, end=' ')\nprint()?_split_?"}
{"nl":"How to find the index of a value in 2d array in Python?","code":"np.where(a == 1)","relevant":"if pid == 0:\n    os.setsid()\nelse:\n    pass?_split_?with open('myfile.txt') as f:\n    pass?_split_?for line in file:\n    line = line.strip()\nllist = line.split()\nif llist and llist[0] == 'NUMS':\n    for line in file:\n        line = line.strip()\nif line == 'END':\n    break\nelse:\n    print(line, end=' ')\nprint()?_split_?"}
{"nl":"Python Pandas - How to flatten a hierarchical index in columns","code":"df.columns = df.columns.get_level_values(0)","relevant":"print('row number of found item =', self.listWidgetName.row(item))?_split_?unique_combs(A, 3)?_split_?class MyJSONEncoder(JSONEncoder):\n    pass?_split_?"}
{"nl":"Creating a list from a Scipy matrix","code":"x = scipy.matrix([1, 2, 3]).transpose()","relevant":"last_name = models.CharField(max_length=50)?_split_?def splittedname(s):\n    return tuple(tryint(x) for x in re.split('([0-9]+)', s))?_split_?eX, eY = 30, 60\nbbox = x \/ 2 - eX \/ 2, y \/ 2 - eY \/ 2, x \/ 2 + eX \/ 2, y \/ 2 + eY \/ 2\ndraw = ImageDraw.Draw(im)\ndraw.ellipse(bbox, fill=128)\ndel draw\nim.save('output.png')\nim.show()?_split_?"}
{"nl":"Regex Python adding characters after a certain word","code":"text = re.sub('(\\\\bget\\\\b)', '\\\\1@', text)","relevant":"import pandas as pd\ndf = pd.DataFrame([[1, 0, 0, 0], [0, 0, 1, 0]])\ndf?_split_?raise RuntimeError('unexpected opcode')?_split_?subst = '\"\\x02\"'\nresult = re.sub(p, subst, test_str)?_split_?"}
{"nl":"Element-wise minimum of multiple vectors in numpy","code":"np.array([np.arange(3), np.arange(2, -1, -1), np.ones((3,))]).min(axis=0)","relevant":"root = tk.Tk()?_split_?word = 'My_WORD_HERE'\nwnb = 3\npat = '((?:\\\\w+\\\\s+){{0,{0}}}){1}((?:\\\\s+\\\\w+){{0,{0}}})'.format(wnb, word)\nres = re.sub(pat, lambda m: m.group(1) + '? ' * (wnb - len(m.group(1).split\n    ())) + word + m.group(2) + ' ?' * (wnb - len(m.group(2).split())), s)?_split_?b = [1, 2]?_split_?"}
{"nl":"Pandas (python): How to add column to dataframe for index?","code":"df['new_col'] = list(range(1, len(df) + 1))","relevant":"seqs = [''.join(random.choice('GATC') for i in range(3)) for j in range(11)]?_split_?from datetime import datetime\ndt = datetime.fromtimestamp(mktime(struct))?_split_?import re\nre.compile('jpg|png|gif').search('testpng.txt')\nre.compile('jpg|png|gif').search('testpg.txt')?_split_?"}
{"nl":"How to set environment variables in Python","code":"os.environ['DEBUSSY'] = '1'","relevant":"x = MaxPooling2D((2, 2), border_mode='same')(x)\nx = Convolution2D(8, 3, 3, activation='relu', border_mode='same')(x)?_split_?return (s - np.mean(s)) \/ np.std(s)?_split_?\"\"\"\nA cell is everything between two commands starting with '##'\n\"\"\"\na = 3\nb = 4?_split_?"}
{"nl":"How to set environment variables in Python","code":"print(os.environ['DEBUSSY'])","relevant":"x = MaxPooling2D((2, 2), border_mode='same')(x)\nx = Convolution2D(8, 3, 3, activation='relu', border_mode='same')(x)?_split_?return (s - np.mean(s)) \/ np.std(s)?_split_?\"\"\"\nA cell is everything between two commands starting with '##'\n\"\"\"\na = 3\nb = 4?_split_?"}
{"nl":"How to set environment variables in Python","code":"os.environ['DEBUSSY'] = '1'","relevant":"x = MaxPooling2D((2, 2), border_mode='same')(x)\nx = Convolution2D(8, 3, 3, activation='relu', border_mode='same')(x)?_split_?return (s - np.mean(s)) \/ np.std(s)?_split_?\"\"\"\nA cell is everything between two commands starting with '##'\n\"\"\"\na = 3\nb = 4?_split_?"}
{"nl":"Python: updating a large dictionary using another large dictionary","code":"b.update(d)","relevant":"def open_url(self, url):\n    \"\"\"Open a URL using the driver's base URL\"\"\"\ndummy_url = '\/404error'\nself.webdriver.get(self.store['base'] + dummy_url)?_split_?print(val1 \/ val2)?_split_?self.Destroy()?_split_?"}
{"nl":"How to get column by number in Pandas?","code":"df['b']","relevant":"import pandas as pd\ndf3 = df2.pivot(index='x', columns='y', values='Counts')\nprint(df3)\nprint() \nnew = sorted(set(df3.columns.tolist() + df3.index.tolist()))\ndf3 = df3.reindex(new, columns=new).fillna(0).applymap(int)\nprint(df3)?_split_?input_dir = tempfile.mkdtemp()\ndocs = [{'data': {'text': {'de': 'Ein Text.', 'en': 'A text.'}}}, {'data':\n    {'text': {'de': 'Ein Bahnhof.', 'en': 'A railway station.'}}}, {'data':\n    {'text': {'de': 'Ein Hund.', 'en': 'A dog.'}}}]\nfor doc in docs:\n    with open(tempfile.mktemp(suffix='json', dir=input_dir), 'w') as fw:\n        pass?_split_?str2 = 'ABCD is ABCD'\nstr2.count(str1)?_split_?"}
{"nl":"How can I get the color of the last figure in matplotlib?","code":"ebar = plt.errorbar(x, y, yerr=err, ecolor='y')","relevant":"def iter_file(filename):\n    with open(filename) as inp:\n        pass?_split_?response = urllib.request.urlopen(request, encoded_params)\nreturn response?_split_?if k.startswith('s_'):\n    pass?_split_?"}
{"nl":"Python: How can I find all files with a particular extension?","code":"results += [each for each in os.listdir(folder) if each.endswith('.c')]","relevant":"var = [np.array([33.85967782]), np.array([34.07298272]), np.array([\n    35.06835424])]\nnp.vstack(var)?_split_?plt.grid(True)\nplt.show()?_split_?variables = ['two', 'five', 'ten']?_split_?"}
{"nl":"Concatenating Unicode with string: print '\u00a3' + '1' works, but print '\u00a3' + u'1' throws UnicodeDecodeError","code":"print('\\xc2\\xa3'.decode('utf8') + '1')","relevant":"assert all(lst[i][1] == lst[i + 1][1] - 1 for i in range(len(lst) - 1))?_split_?mylogger.debug('test')\nupdate_handler_level(mylogger, logging.StreamHandler)?_split_?for i, val in df.attr.items():\n    pass?_split_?"}
{"nl":"How to convert the following string in python?","code":"re.sub('(?<=[a-z])([A-Z])', '-\\\\1', s).lower()","relevant":"def __str__(self):\n    return 'String representation of me'?_split_?df?_split_?g['Value'].resample('Q', how=[np.sum, len])?_split_?"}
{"nl":"Setting stacksize in a python script","code":"os.system('ulimit -s unlimited; some_executable')","relevant":"es.bulk('\\n'.join(bulk_body))?_split_?dists \/= dists.max(axis=(0, 1))?_split_?class CustomHorizontalHatch(matplotlib.hatch.HorizontalHatch):\n    pass?_split_?"}
{"nl":"Python Decimals format","code":"\"\"\"{0:.3g}\"\"\".format(num)","relevant":"plt.setp(ax.get_xmajorticklabels(), visible=False)\nplt.show()?_split_?from subprocess import Popen, PIPE?_split_?mod1 = load_module(name, *foundmod)?_split_?"}
{"nl":"Add single element to array in numpy","code":"numpy.append(a, a[0])","relevant":"parse('2009-08-18 13:52:54-04')?_split_?df = store['df']?_split_?pass?_split_?"}
{"nl":"Return the column name(s) for a specific value in a pandas dataframe","code":"df.ix[:, (df.loc[0] == 38.15)].columns","relevant":"def midpoint(a, b):\n    pass?_split_?glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR)?_split_?left = win32api.GetSystemMetrics(win32con.SM_XVIRTUALSCREEN)?_split_?"}
{"nl":"Merge 2 dataframes with same values in a column","code":"df2['revenue'] = df2.CET.map(df1.set_index('date')['revenue'])","relevant":"rc = child.returncode?_split_?1?_split_?import sys?_split_?"}
{"nl":"How To Format a JSON Text In Python?","code":"json_data = json.loads(json_string)","relevant":"class MyPrettyPrinter(PrettyPrinter):\n    pass?_split_?N = 50\nx = np.random.rand(N)\ny = np.random.rand(N)\nplt.scatter(x, y)\nplt.show()?_split_?s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)?_split_?"}
{"nl":"Python: converting radians to degrees","code":"math.cos(math.radians(1))","relevant":"return s == s[::-1]?_split_?result = expr.parseString('{{' + s + '}}').asList()[0]?_split_?x[i] = i?_split_?"}
{"nl":"count how many of an object type there are in a list Python","code":"sum(isinstance(x, int) for x in a)","relevant":"self.connect(self, SIGNAL('lastWindowClosed()'), self.byebye)?_split_?import os?_split_?@method_of(a)\ndef new_func(arg1, arg2):\n    stuff()?_split_?"}
{"nl":"Python: Getting rid of \\u200b from a string using regular expressions","code":"'used\\u200b'.replace('\\u200b', '*')","relevant":"d = {}?_split_?root.bind('<Map>', decaption)?_split_?def save_model(model):\n    pass?_split_?"}
{"nl":"How to run two functions simultaneously","code":"threading.Thread(target=SudsMove).start()","relevant":"(datetime.datetime(2007, 5, 25, 15, 20), 10, 27, 30),?_split_?import shlex\nshlex.split('-o 1 --long \"Some long string\"')?_split_?class User(Document):\n    name = StringField()?_split_?"}
{"nl":"sum of squares in a list in one line?","code":"sum(i * i for i in l)","relevant":"from operator import itemgetter\nd['searchResult'].sort(key=itemgetter('ranking'), reverse=True)\nprint(d)\n{'searchResult': [{'resultType': 'station', 'ranking': 0.5}, {'resultType':\n    'station', 'ranking': 0.4}, {'resultType': 'station', 'ranking': 0.35}]}?_split_?100 * ((0.1 - 0.3) \/ 0.3 + (1 - 0.2) \/ 0.2)?_split_?list_of_tokens = nltk.pos_tag(text)?_split_?"}
{"nl":"sum of squares in a list in one line?","code":"sum(map(lambda x: x * x, l))","relevant":"from operator import itemgetter\nd['searchResult'].sort(key=itemgetter('ranking'), reverse=True)\nprint(d)\n{'searchResult': [{'resultType': 'station', 'ranking': 0.5}, {'resultType':\n    'station', 'ranking': 0.4}, {'resultType': 'station', 'ranking': 0.35}]}?_split_?100 * ((0.1 - 0.3) \/ 0.3 + (1 - 0.2) \/ 0.2)?_split_?list_of_tokens = nltk.pos_tag(text)?_split_?"}
{"nl":"Create a dictionary with list comprehension","code":"d = dict(((key, value) for (key, value) in iterable))","relevant":"fd.write('echo $PATH\\n')?_split_?with open('the_file', 'r') as source:\n    data = [(random.random(), line) for line in source]\ndata.sort()?_split_?def dist(item):\n    pass?_split_?"}
{"nl":"Create a dictionary with list comprehension","code":"d = {key: value for (key, value) in iterable}","relevant":"fd.write('echo $PATH\\n')?_split_?with open('the_file', 'r') as source:\n    data = [(random.random(), line) for line in source]\ndata.sort()?_split_?def dist(item):\n    pass?_split_?"}
{"nl":"Create a dictionary with list comprehension","code":"d = {k: v for (k, v) in iterable}","relevant":"fd.write('echo $PATH\\n')?_split_?with open('the_file', 'r') as source:\n    data = [(random.random(), line) for line in source]\ndata.sort()?_split_?def dist(item):\n    pass?_split_?"}
{"nl":"Rounding entries in a Pandas DafaFrame","code":"df.round({'Alabama_exp': 2, 'Credit_exp': 3})","relevant":"test.flush()?_split_?somedict = {'key': 123, 'stuff': 456}?_split_?import inspect\nlen(inspect.getargspec(foo_func)[0])?_split_?"}
{"nl":"Pycurl keeps printing in terminal","code":"p.setopt(pycurl.WRITEFUNCTION, lambda x: None)","relevant":"def __init__(self):\n    pass?_split_?print(a.max(1))?_split_?ArticleFormSet = formset_factory(ArticleForm, can_order=True)\nformset = ArticleFormSet(initial=[{'title': 'Article #1', 'pub_date':\n    datetime.date(2008, 5, 10)}, {'title': 'Article #2', 'pub_date':\n    datetime.date(2008, 5, 11)}])?_split_?"}
{"nl":"Return a random word from a word list in python","code":"print(random.choice(words))","relevant":"def build_response_from_file(self, request):\n    pass?_split_?from pony.orm.examples.presentation import *?_split_?A[np.arange(A.shape[0]), (A != 0).cumsum(1).argmax(1)] = 0?_split_?"}
{"nl":"Find Max in Nested Dictionary","code":"max(d, key=lambda x: d[x]['count'])","relevant":"toto_type = deferred_type()?_split_?def lookup(ip):\n    pass?_split_?\"\"\"This is the docstring\n\"\"\"\nimport docopt?_split_?"}
{"nl":"How to replace empty string with zero in comma-separated string?","code":"[(int(x) if x else 0) for x in data.split(',')]","relevant":"def funt1(self, weight=None):\n    return weight?_split_?url = 'https:\/\/www.python.org'\nprint(url + '?' + url_values)?_split_?for result in cursor.execute(SQL, multi=True):\n    pass?_split_?"}
{"nl":"How to replace empty string with zero in comma-separated string?","code":"\"\"\",\"\"\".join(x or '0' for x in s.split(','))","relevant":"def funt1(self, weight=None):\n    return weight?_split_?url = 'https:\/\/www.python.org'\nprint(url + '?' + url_values)?_split_?for result in cursor.execute(SQL, multi=True):\n    pass?_split_?"}
{"nl":"Regular expression syntax for \"match nothing\"?","code":"re.compile('$^')","relevant":"df = DataFrame(Y)\ndf[1] = df[0].diff() > 600000000000.0?_split_?@app.route('\/get_image')\ndef get_image():\n    if request.args.get('type') == '1':\n        filename = 'ok.gif'?_split_?if int(i['salary']) > big:\n    pass?_split_?"}
{"nl":"Regular expression syntax for \"match nothing\"?","code":"re.compile('.\\\\A|.\\\\A*|.\\\\A+')","relevant":"df = DataFrame(Y)\ndf[1] = df[0].diff() > 600000000000.0?_split_?@app.route('\/get_image')\ndef get_image():\n    if request.args.get('type') == '1':\n        filename = 'ok.gif'?_split_?if int(i['salary']) > big:\n    pass?_split_?"}
{"nl":"Regular expression syntax for \"match nothing\"?","code":"re.compile('a^')","relevant":"df = DataFrame(Y)\ndf[1] = df[0].diff() > 600000000000.0?_split_?@app.route('\/get_image')\ndef get_image():\n    if request.args.get('type') == '1':\n        filename = 'ok.gif'?_split_?if int(i['salary']) > big:\n    pass?_split_?"}
{"nl":"Python Pandas drop columns based on max value of column","code":"df.columns[df.max() > 0]","relevant":"dyn_value = \"{{ task_instance.xcom_pull(task_ids='push_func') }}\"?_split_?np.allclose(np.linalg.norm(x, axis=1), np.sum(np.abs(x) ** 2, axis=-1) ** (\n    1.0 \/ 2))?_split_?n = [None] * len(l)\nl[2:] = n[2:]?_split_?"}
{"nl":"How can I check if a date is the same day as datetime.today()?","code":"yourdatetime.date() == datetime.today().date()","relevant":"import mp3play?_split_?do_post_install_stuff()?_split_?for n in [20, 200, 2000]:\n    G = nx.fast_gnp_random_graph(n, 5.0 \/ n)\ncurrent_time = time.time()\na = nx.betweenness_centrality(G)\nprint(time.time() - current_time)?_split_?"}
{"nl":"How do I print bold text in Python?","code":"print('\\x1b[1m' + 'Hello')","relevant":"keyring.set_password('system', 'username', 'password')?_split_?pool = redis.ConnectionPool(host='localhost', port=6379, db=0)?_split_?sql_commands = full_sql.split(';')\nfor sql_command in sql_commands:\n    curs.execute(sql_command)?_split_?"}
{"nl":"Renaming multiple files in python","code":"re.sub('.{20}(.mkv)', '\\\\1', 'unique12345678901234567890.mkv')","relevant":"self.file = open(filename, 'w')?_split_?def _force_https():\n    if not app.debug:\n        from flask import _request_ctx_stack\nif _request_ctx_stack is not None:\n    reqctx = _request_ctx_stack.top\nreqctx.url_adapter.url_scheme = 'https'?_split_?print('A')?_split_?"}
{"nl":"Can I get a list of the variables that reference an other in Python 2.7?","code":"['a', 'c', 'b', 'obj']","relevant":"mock_function = create_autospec(function)?_split_?unq_x, breaks = np.unique(sdata[:, (0)], return_index=True)\nbreaks = np.append(breaks, data.shape[0])?_split_?a = A()\na.x\na.get_x()\na.get_x(True)?_split_?"}
{"nl":"Substitute multiple whitespace with single whitespace in Python","code":"\"\"\" \"\"\".join(mystring.split())","relevant":"assert r * group_length == len(all_combinations)?_split_?ssh.connect(IP[0], username=user[0], pkey=mykey)?_split_?from xml.etree import ElementTree as ET?_split_?"}
{"nl":"How to print floating point numbers as it is without any truncation in python?","code":"print('{:.100f}'.format(2.345e-67))","relevant":"class A:\n    pass?_split_?img2.seek(0)\nimg3 = StringIO(PIL.Image.open(sys.argv[2]).tostring())\nstory = [Image(img1), Image(img2)]?_split_?import numpy as np?_split_?"}
{"nl":"Check if a given key already exists in a dictionary","code":"('key1' in dict)","relevant":"getattr(foo, bar)(*params)?_split_?import matplotlib.pyplot as plt?_split_?from PIL import Image, ImageDraw?_split_?"}
{"nl":"Check if a given key already exists in a dictionary","code":"('a' in d)","relevant":"getattr(foo, bar)(*params)?_split_?import matplotlib.pyplot as plt?_split_?from PIL import Image, ImageDraw?_split_?"}
{"nl":"Check if a given key already exists in a dictionary","code":"('c' in d)","relevant":"getattr(foo, bar)(*params)?_split_?import matplotlib.pyplot as plt?_split_?from PIL import Image, ImageDraw?_split_?"}
{"nl":"Check if a given key already exists in a dictionary","code":"if ('key1' in dict):\n    pass","relevant":"getattr(foo, bar)(*params)?_split_?import matplotlib.pyplot as plt?_split_?from PIL import Image, ImageDraw?_split_?"}
{"nl":"Check if a given key already exists in a dictionary","code":"if (key in d):\n    pass","relevant":"getattr(foo, bar)(*params)?_split_?import matplotlib.pyplot as plt?_split_?from PIL import Image, ImageDraw?_split_?"}
{"nl":"django filter with list of values","code":"Blog.objects.filter(pk__in=[1, 4, 7])","relevant":"file_handle = open('filename.xml', 'wb')\nYour_Root_Node.writexml(file_handle)?_split_?contestant = models.ForeignKey(Contestant)\nrank = models.IntegerField()?_split_?if instance.law:\n    for law in instance.law.all():\n        pass?_split_?"}
{"nl":"read a binary file (python)","code":"f = open('test\/test.pdf', 'rb')","relevant":"z = zipfile.ZipFile('myzip.zip', 'a', zipfile.ZIP_DEFLATED)\nz.write('file3.ext')?_split_?print(\"Unable to send e-mail: '%s'.\" % str(error))?_split_?Properties_Pointers = ['Section', 'Class', 'Subclass', 'Group', 'Subgroup']?_split_?"}
{"nl":"Format string - spaces between every three digit","code":"format(12345678.46, ',').replace(',', ' ').replace('.', ',')","relevant":"df?_split_?txt = open(filename)?_split_?df = pd.DataFrame([[1, 2], [3, 4]], columns=cols)\ndf\ndf.columns = df.columns.droplevel()\ndf?_split_?"}
{"nl":"Joining pandas dataframes by column names","code":"pd.merge(frame_1, frame_2, left_on='county_ID', right_on='countyid')","relevant":"ax.yaxis.set_visible(False)?_split_?for line in data_stream.stdout:\n    pass?_split_?cv2.destroyAllWindows()?_split_?"}
{"nl":"How to calculate percentage of sparsity for a numpy array\/matrix?","code":"np.isnan(a).sum() \/ np.prod(a.shape)","relevant":"mlab.text3d(0, -50, 1550, 'Z', color=black, scale=100.0)?_split_?while True:\n    pass?_split_?gtk.main_quit()?_split_?"}
{"nl":"Sorting a defaultdict by value in python","code":"sorted(iter(cityPopulation.items()), key=lambda k_v: k_v[1][2], reverse=True)","relevant":"if 'test' in r.db_list().run():\n    r.db_drop('test').run()\nr.db_create('test').run()\nr.db('test').table_create('stories').run()\nparis = pytz.timezone('Europe\/Paris')\nr.table('stories').insert({'title': 'Foobar', 'published_at': paris.\n    localize(datetime.strptime('2014-03-17 14:00', '%Y-%m-%d %H:%M'),\n    is_dst=False)}).run()\nfor document in r.table('stories').run():\n    print(document['published_at'])\nprint(type(document['published_at']))?_split_?entry = tk.Entry(self)?_split_?from models import ThisModel, ThatModel?_split_?"}
{"nl":"Sorting a defaultdict by value in python","code":"sorted(list(u.items()), key=lambda v: v[1])","relevant":"if 'test' in r.db_list().run():\n    r.db_drop('test').run()\nr.db_create('test').run()\nr.db('test').table_create('stories').run()\nparis = pytz.timezone('Europe\/Paris')\nr.table('stories').insert({'title': 'Foobar', 'published_at': paris.\n    localize(datetime.strptime('2014-03-17 14:00', '%Y-%m-%d %H:%M'),\n    is_dst=False)}).run()\nfor document in r.table('stories').run():\n    print(document['published_at'])\nprint(type(document['published_at']))?_split_?entry = tk.Entry(self)?_split_?from models import ThisModel, ThatModel?_split_?"}
{"nl":"Sorting a defaultdict by value in python","code":"sorted(list(d.items()), key=lambda k_v: k_v[1], reverse=True)","relevant":"if 'test' in r.db_list().run():\n    r.db_drop('test').run()\nr.db_create('test').run()\nr.db('test').table_create('stories').run()\nparis = pytz.timezone('Europe\/Paris')\nr.table('stories').insert({'title': 'Foobar', 'published_at': paris.\n    localize(datetime.strptime('2014-03-17 14:00', '%Y-%m-%d %H:%M'),\n    is_dst=False)}).run()\nfor document in r.table('stories').run():\n    print(document['published_at'])\nprint(type(document['published_at']))?_split_?entry = tk.Entry(self)?_split_?from models import ThisModel, ThatModel?_split_?"}
{"nl":"Sorting a defaultdict by value in python","code":"sorted(list(d.items()), key=lambda k_v: k_v[1])","relevant":"if 'test' in r.db_list().run():\n    r.db_drop('test').run()\nr.db_create('test').run()\nr.db('test').table_create('stories').run()\nparis = pytz.timezone('Europe\/Paris')\nr.table('stories').insert({'title': 'Foobar', 'published_at': paris.\n    localize(datetime.strptime('2014-03-17 14:00', '%Y-%m-%d %H:%M'),\n    is_dst=False)}).run()\nfor document in r.table('stories').run():\n    print(document['published_at'])\nprint(type(document['published_at']))?_split_?entry = tk.Entry(self)?_split_?from models import ThisModel, ThatModel?_split_?"}
{"nl":"How to reliably open a file in the same directory as a Python script","code":"f = open(os.path.join(__location__, 'bundled-resource.jpg'))","relevant":"np.where(A > 50)\nnp.argwhere(A > 50)?_split_?print(list_end_counter([1, 1, 2]))\nprint(list_end_counter([1, 2, 1, 1]))\nprint(list_end_counter([1, 2, 1, 1, 1]))\nprint(list_end_counter([1, 1, 2, 2, 2, 2]))\nprint(list_end_counter([1, 2, 1, 1, 1, 1, 1, 1]))?_split_?from calendar2 import *\nold_hindu_solar_from_absolute(absolute_from_gregorian(3, 1, 2012))?_split_?"}
{"nl":"How do I convert LF to CRLF?","code":"f = open('words.txt', 'rU')","relevant":"one_char_3 = k[0][0][0] + k[0][0][1]?_split_?import os\nos.chdir('..')?_split_?cur.execute('select * from table')?_split_?"}
{"nl":"Divide the values of two dictionaries in python","code":"{k: (float(d2[k]) \/ d1[k]) for k in d2}","relevant":"idx = (A[:, (0)] > from_date) & (A[:, (0)] <= to_date)?_split_?for i in range(100):\n    value = 3.0 * i ** 2\nm[i] = value?_split_?try:\n    x[x > 1] = 1\nexcept TypeError:\n    x = min(x, 1)?_split_?"}
{"nl":"Divide the values of two dictionaries in python","code":"{k: (d2[k] \/ d1[k]) for k in list(d1.keys()) & d2}","relevant":"idx = (A[:, (0)] > from_date) & (A[:, (0)] <= to_date)?_split_?for i in range(100):\n    value = 3.0 * i ** 2\nm[i] = value?_split_?try:\n    x[x > 1] = 1\nexcept TypeError:\n    x = min(x, 1)?_split_?"}
{"nl":"Divide the values of two dictionaries in python","code":"dict((k, float(d2[k]) \/ d1[k]) for k in d2)","relevant":"idx = (A[:, (0)] > from_date) & (A[:, (0)] <= to_date)?_split_?for i in range(100):\n    value = 3.0 * i ** 2\nm[i] = value?_split_?try:\n    x[x > 1] = 1\nexcept TypeError:\n    x = min(x, 1)?_split_?"}
{"nl":"How to specify date format when using pandas.to_csv?","code":"df.to_csv(filename, date_format='%Y%m%d')","relevant":"print('Download successful.')?_split_?class girl(person):\n\n    def __init__(self, interest):\n        self.number = self.new_number()\nself.interest = interest\nsuper().__init__()\n\ndef new_number(self):\n    n = '0000000000'\nwhile '9' in n[3:6] or n[3:6] == '000' or n[6] == n[7] == n[8] == n[9]:\n    n = str(random.randint(10 ** 9, 10 ** 10 - 1))\nreturn n[:3] + '-' + n[3:6] + '-' + n[6:]?_split_?t = np.linspace(0, 1, 200)\ny = myodeint(lambda y, t: func(y, t, alpha), [1, 0, 0], t)?_split_?"}
{"nl":"How to remove a key from a python dictionary?","code":"my_dict.pop('key', None)","relevant":"class C(A):\n\n    def __init__(self, n):\n        A.__init__(self, n)\nc = C(2)\nb = B(c)\nb.doSomething()?_split_?reload_package(email)?_split_?page = {'foo': ObjectId(), 'bar': [ObjectId(), ObjectId()]}\npage_sanitized = json.loads(json_util.dumps(page))?_split_?"}
{"nl":"replace values in an array","code":"b = np.where(np.isnan(a), 0, a)","relevant":"import pandas as pd?_split_?atexit.register(DataBase.close_database)?_split_?v = np.array([(v - v.dot(b[1]) \/ b[1].dot(b[1]) * b[1]) for v in [b[0], b[2]]])?_split_?"}
{"nl":"Python, running command line tools in parallel","code":"subprocess.call('start command -flags arguments', shell=True)","relevant":"list(closed_range(1, 10, 2))\nlist(closed_range(1, 10, 3))\nlist(closed_range(10, 1, -1))?_split_?def binomial_choice(L, p):\n    iterator = iter(L)\nwhile True:\n    to_skip = numpy.random.geometric(p) - 1\nyield next(itertools.islice(iterator, to_skip, None))?_split_?for testcase in testsuite.findall('testcase'):\n    if testcase.get('name') == 'VHDL_BUILD_Passthrough':\n        pass?_split_?"}
{"nl":"Python, running command line tools in parallel","code":"subprocess.call('command -flags arguments &', shell=True)","relevant":"list(closed_range(1, 10, 2))\nlist(closed_range(1, 10, 3))\nlist(closed_range(10, 1, -1))?_split_?def binomial_choice(L, p):\n    iterator = iter(L)\nwhile True:\n    to_skip = numpy.random.geometric(p) - 1\nyield next(itertools.islice(iterator, to_skip, None))?_split_?for testcase in testsuite.findall('testcase'):\n    if testcase.get('name') == 'VHDL_BUILD_Passthrough':\n        pass?_split_?"}
{"nl":"Passing the '+' character in a POST request in Python","code":"f = urllib.request.urlopen(url, urllib.parse.unquote(urllib.parse.urlencode(params)))","relevant":"['F_ugsburg', '4', '-5', '7:12']?_split_?cond1 = (my_array[:, (0)] > 4) & (my_array[:, (0)] < 13)?_split_?print(client_split[1].decode('zlib'))?_split_?"}
{"nl":"How do I remove whitespace from the end of a string in Python?","code":"\"\"\"    xyz     \"\"\".rstrip()","relevant":"Qapp = QApplication(sys.argv)?_split_?from pyspark.sql.functions import col\ndf1_a = df1.alias('df1_a')?_split_?df = pandas.DataFrame(np.random.randn(5, 3), columns=['A', 'B', 'C'])\ndf?_split_?"}
{"nl":"URL encoding in python","code":"urllib.parse.quote(s.encode('utf-8'))","relevant":"other_values = [4, 8, 15, 16, 23, 42]?_split_?cv = CountVectorizer(tokenizer=lambda doc: doc, lowercase=False)?_split_?@app.route('\/admin\/post', methods=['GET', 'POST'])\n@login_required\ndef create_post():\n    form = PostForm()\nif form.validate_on_submit():\n    post = Post(title=form.title.data, pub_date=form.pub_date.data, body=\n        form.body.data, category=form.category.data)\ndb.session.add(post)\ndb.session.commit()\nflash('Your post has been published.')\nreturn redirect(url_for('admin'))\nposts = Post.query.all()\nreturn render_template('create_post.html', form=form, posts=posts)?_split_?"}
{"nl":"URL encoding in python","code":"urllib.parse.quote_plus('a b')","relevant":"other_values = [4, 8, 15, 16, 23, 42]?_split_?cv = CountVectorizer(tokenizer=lambda doc: doc, lowercase=False)?_split_?@app.route('\/admin\/post', methods=['GET', 'POST'])\n@login_required\ndef create_post():\n    form = PostForm()\nif form.validate_on_submit():\n    post = Post(title=form.title.data, pub_date=form.pub_date.data, body=\n        form.body.data, category=form.category.data)\ndb.session.add(post)\ndb.session.commit()\nflash('Your post has been published.')\nreturn redirect(url_for('admin'))\nposts = Post.query.all()\nreturn render_template('create_post.html', form=form, posts=posts)?_split_?"}
{"nl":"Convert string to numpy array","code":"np.array(map(int, '100110'))","relevant":"if line.startswith('# deb'):\n    pass?_split_?print(data)?_split_?test3filehandle.write('Line Number:' + str(k) + ' ')?_split_?"}
{"nl":"Convert string to numpy array","code":"print(np.array(list(mystr), dtype=int))","relevant":"if line.startswith('# deb'):\n    pass?_split_?print(data)?_split_?test3filehandle.write('Line Number:' + str(k) + ' ')?_split_?"}
{"nl":"How can I convert an RGB image into grayscale in Python?","code":"img = cv2.imread('messi5.jpg', 0)","relevant":"s.connect('xxx.xxx.xxx.xxx', 22, username=xxx, password='', timeout=4)\nsftp = s.open_sftp()?_split_?import numpy as np\npd.rolling_apply(df, 12, lambda x: np.prod(1 + x) - 1)?_split_?print(x)?_split_?"}
{"nl":"sorting a graph by its edge weight. python","code":"lst.sort(key=lambda x: x[2], reverse=True)","relevant":"rawstr = ''.join(list(mydict.keys()))?_split_?X = np.repeat(X, 100, axis=0)\ny = np.repeat(y, 100, axis=0)?_split_?log_handle = logging.getLogger(__name__)?_split_?"}
{"nl":"How to find all occurrences of an element in a list?","code":"indices = [i for i, x in enumerate(my_list) if x == 'whatever']","relevant":"import requests\nsession = requests.Session()\nsession.cookies.get_dict()\n{}\nresponse = session.get('http:\/\/google.com')\nsession.cookies.get_dict()\n{'PREF':\n    'ID=5514c728c9215a9a:FF=0:TM=1406958091:LM=1406958091:S=KfAG0U9jYhrB0XNf',\n    'NID':\n    '67=TVMYiq2wLMNvJi5SiaONeIQVNqxSc2RAwVrCnuYgTQYAHIZAGESHHPL0xsyM9EMpluLDQgaj3db_V37NjvshV-eoQdA8u43M8UwHMqZdL-S2gjho8j0-Fe1XuH5wYr9v'\n    }?_split_?df\ndf[:-1]?_split_?np.row_stack((a, b))\narray([[1, 2], [3, 4], [5, 6]])?_split_?"}
{"nl":"How can I execute shell command with a | pipe in it","code":"subprocess.call('grep -r PASSED *.log | sort -u | wc -l', shell=True)","relevant":"insertionsort(c)\nids.append(map(lambda tup: tup[0], c[0:K]))?_split_?a = [1, 2, 3, 4]\nb = [4, 5, 6, 7]?_split_?socket.inet_aton(addr)?_split_?"}
{"nl":"How to count the number of a specific character at the end of a string ignoring duplicates?","code":"len(my_text) - len(my_text.rstrip('?'))","relevant":"for team in league.keys():\n    runs_scored, runs_allowed = map(float, league[team])?_split_?class UOMCategorySerializer(ModelSerializer):\n    pass?_split_?d = {'1': 'one', '3': 'three', '2': 'two', '5': 'five', '4': 'four'}\n'one' in list(d.values())?_split_?"}
{"nl":"converting currency with $ to numbers in Python pandas","code":"df[df.columns[1:]].replace('[\\\\$,]', '', regex=True).astype(float)","relevant":"deserialized = pickle.loads(captcha_decrypt(urlsafe_b64decode(key.encode(\n    'ascii'))))\nreturn HttpResponse(str(deserialized))?_split_?def teardown():\n    session.remove()?_split_?from itertools import product\n\ndef is_palindrome(num):\n    return str(num) == str(num)[::-1]?_split_?"}
{"nl":"Conditionally fill a column of a pandas df with values of a different df","code":"df1.merge(df2, how='left', on='word')","relevant":"import matplotlib.pyplot as plt?_split_?ax = fig.add_subplot(111)\nax.imshow(data, interpolation='nearest')\nax.set_aspect(5)\nplt.show()?_split_?try:\n    ftp.size('123.zip')\nexcept ftplib.all_errors as e:\n    pass?_split_?"}
{"nl":"Switch every pair of characters in a string","code":"print(''.join(''.join(i) for i in zip(a2, a1)) + a[-1] if len(a) % 2 else '')","relevant":"lcmap = [cmap(i) for i in range(cmap.N)]\nlcmap[0] = 0, 0.5, 0, 1.0\ncmap_green = cmap.from_list('0th entry green', lcmap, 9)\nim1 = m.pcolormesh(lons, lats, sst, shading='flat', cmap=cmap_green, latlon\n    =True)?_split_?form = UserForm(request.form, obj=user)?_split_?pd.show_versions(as_json=False)?_split_?"}
{"nl":"How to make a window jump to the front?","code":"root.attributes('-topmost', True)","relevant":"if str(number) == str(number)[::-1] and is_prime(number):\n    pass?_split_?f.close()?_split_?file = request.files['data_file']?_split_?"}
{"nl":"How to make a window jump to the front?","code":"root.lift()","relevant":"if str(number) == str(number)[::-1] and is_prime(number):\n    pass?_split_?f.close()?_split_?file = request.files['data_file']?_split_?"}
{"nl":"Elegant way to convert list to hex string","code":"hex(int(''.join([str(int(b)) for b in walls]), 2))","relevant":"return known[n]?_split_?if i.isalpha():\n    letters += 1?_split_?seen = set()?_split_?"}
{"nl":"Elegant way to convert list to hex string","code":"hex(sum(b << i for i, b in enumerate(reversed(walls))))","relevant":"return known[n]?_split_?if i.isalpha():\n    letters += 1?_split_?seen = set()?_split_?"}
{"nl":"Print multiple arguments in python","code":"print(('Total score for', name, 'is', score))","relevant":"webapp.template.register_template_library('django_hack')?_split_?yield a[pos:i]\nprint(list(split(a, sep=[3, 4])))?_split_?H, xs, ys = np.histogram2d(x, y, weights=z, bins=bins, range=rng)?_split_?"}
{"nl":"Print multiple arguments in python","code":"print('Total score for {} is {}'.format(name, score))","relevant":"webapp.template.register_template_library('django_hack')?_split_?yield a[pos:i]\nprint(list(split(a, sep=[3, 4])))?_split_?H, xs, ys = np.histogram2d(x, y, weights=z, bins=bins, range=rng)?_split_?"}
{"nl":"Print multiple arguments in python","code":"print('Total score for %s is %s  ' % (name, score))","relevant":"webapp.template.register_template_library('django_hack')?_split_?yield a[pos:i]\nprint(list(split(a, sep=[3, 4])))?_split_?H, xs, ys = np.histogram2d(x, y, weights=z, bins=bins, range=rng)?_split_?"}
{"nl":"Print multiple arguments in python","code":"print(('Total score for', name, 'is', score))","relevant":"webapp.template.register_template_library('django_hack')?_split_?yield a[pos:i]\nprint(list(split(a, sep=[3, 4])))?_split_?H, xs, ys = np.histogram2d(x, y, weights=z, bins=bins, range=rng)?_split_?"}
{"nl":"Is it possible to serve a static html page at the root of a django project?","code":"url('^$', TemplateView.as_view(template_name='your_template.html'))","relevant":"mn2 = min(i for i in list1 if i != mn)?_split_?while True:\n    pass?_split_?stdoutHandler.setFormatter(logging.Formatter(LOG_FORMAT_WITH_TIME))?_split_?"}
{"nl":"use a list of values to select rows from a pandas dataframe","code":"df[df['A'].isin([3, 6])]","relevant":"from sympy.abc import x\npprint(Integral(x ** 2, x))?_split_?import re?_split_?from numpy import arange, reshape, array_str\nM = arange(10).reshape(2, 5)?_split_?"}
{"nl":"How to get the concrete class name as a string?","code":"instance.__class__.__name__","relevant":"def partial_bounded_sort(lst, n):\n    \"\"\"\n    Returns minimal collection of oldest elements\n     s.t. total size >= n.\n    \"\"\"?_split_?columns = defaultdict(list)?_split_?t = 'ID YR MO DA YrM MoM DaM'?_split_?"}
{"nl":"How can I execute Python code in a virtualenv from Matlab","code":"system('\/path\/to\/my\/venv\/bin\/python myscript.py')","relevant":"return iflag_ptr.contents.value != 0?_split_?ip = urllib.request.urlopen('http:\/\/automation.whatismyip.com\/n09230945.asp').read()?_split_?print(max(x, key=sum))?_split_?"}
{"nl":"django models selecting single field","code":"Employees.objects.values_list('eng_name', flat=True)","relevant":"string = 'string'\nfor i in range(11):\n    string += repr(i)?_split_?df['Date'][0]?_split_?[i for i in range(100000) if i == 1000][0]\nnext(i for i in range(100000) if i == 1000)?_split_?"}
{"nl":"Python regex findall alternation behavior","code":"re.findall('\\\\d|\\\\d,\\\\d\\\\)', '6,7)')","relevant":"return boxstringprinter(value)?_split_?plt.axis([0, 10, 0, 1])?_split_?reader = csv.reader(f, delimeter=' ')?_split_?"}
{"nl":"How do I make python to wait for a pressed key","code":"input('Press Enter to continue...')","relevant":"ax.plot('You plot argument')?_split_?print(df1[mask])?_split_?import FooModule\n\ndef run():\n    foo = FooModule.Foo()\nfoo.f()?_split_?"}
{"nl":"Print string as hex literal python","code":"\"\"\"\u0001ABC\"\"\".encode('hex')","relevant":"findval('001,008-011,020')?_split_?if self.first_name or self.last_name:\n    return self.first_name + ' ' + self.last_name?_split_?with open('testdata.txt', 'rb') as inf:\n    with open('testdata2.txt', 'wb') as outf:\n        pass?_split_?"}
{"nl":"python + pymongo: how to insert a new field on an existing document in mongo from a for loop","code":"db.Doc.update({'_id': b['_id']}, {'$set': {'geolocCountry': myGeolocCountry}})","relevant":"r = np.zeros((rows, rows))?_split_?f.seek(offset, 1)\nfmt = '>{}l'.format(leapcnt * 2)\nsize = struct.calcsize(fmt)\ndata = struct.unpack(fmt, f.read(size))\nlst = [(data[i], data[i + 1]) for i in range(0, len(data), 2)]\nassert all(lst[i][0] < lst[i + 1][0] for i in range(len(lst) - 1))\nassert all(lst[i][1] == lst[i + 1][1] - 1 for i in range(len(lst) - 1))\nreturn lst\n\ndef print_leaps(leap_lst):\n    pass?_split_?unittest.TextTestRunner().run(suite)\n\n\nclass TestChronology(unittest.TestCase):\n\n    def setUp(self):\n        print('Write your pre-test prerequisites here')\n\ndef test_equality(self):\n    \"\"\"\n        Tests that 1 + 1 always equals 2.\n        \"\"\"?_split_?"}
{"nl":"Regex to match 'lol' to 'lolllll' and 'omg' to 'omggg', etc","code":"re.sub('l+', 'l', 'lollll')","relevant":"return False?_split_?include_files.append((glade_folder, glade_folder))?_split_?b.capitalize()\nb.title()?_split_?"}
{"nl":"Getting the nth element using BeautifulSoup","code":"rows = soup.findAll('tr')[4::5]","relevant":"from reportlab.lib.units import mm?_split_?print(line, end=' ')?_split_?import sys\nif sys.version_info[0] != 2 or sys.version_info[1] < 6:\n    pass?_split_?"}
{"nl":"Reverse Y-Axis in PyPlot","code":"plt.gca().invert_xaxis()","relevant":"t2 = time.clock()?_split_?open(path, 'w').close()?_split_?from numpy import *?_split_?"}
{"nl":"Reverse Y-Axis in PyPlot","code":"plt.gca().invert_yaxis()","relevant":"t2 = time.clock()?_split_?open(path, 'w').close()?_split_?from numpy import *?_split_?"}
{"nl":"How do I stack two DataFrames next to each other in Pandas?","code":"pd.concat([GOOG, AAPL], keys=['GOOG', 'AAPL'], axis=1)","relevant":"serve_on_port(2222)?_split_?import re\nfrom xml.etree import cElementTree as etree\nlines = re.findall('^\\\\s*\/\/\/(.*)', text, re.MULTILINE)\nroot = etree.fromstring('<root>%s<\/root>' % ''.join(lines))\nprint(root.findtext('summary'))?_split_?print(parsed_message['Records'][0]['s3']['bucket']['name'])?_split_?"}
{"nl":"Creating a JSON response using Django and Python","code":"return HttpResponse(json.dumps(response_data), content_type='application\/json')","relevant":"resmatrix = [[newresnums[i], resindices[i]] for i in range(len(newresnums))]?_split_?self.i = 0?_split_??_split_?"}
{"nl":"Process escape sequences in a string","code":"myString.decode('string_escape')","relevant":"self.log.removeHandler(handler)?_split_?def repad(data):\n    return data + '=' * (-len(data) % 4)?_split_?client = Client(wsdl=wsdl)\nstring_array_type = client.get_type('tns:string_array')\nstring_array = string_array_type(['some value'])\nclient.service.method(string_array)?_split_?"}
{"nl":"How do I calculate the md5 checksum of a file in Python?","code":"hashlib.md5(open('filename.exe', 'rb').read()).hexdigest()","relevant":"return Response(ret)?_split_?import os.path?_split_?for k in range(len(titles)):\n    s = re.sub('[^0-9a-zA-Z]+', ' ', titles[k])?_split_?"}
{"nl":"Finding key from value in Python dictionary:","code":"[k for k, v in d.items() if v == desired_value]","relevant":"print('Hi, %s. You called this from %s at line # %d.' % (name, mod, lineno))?_split_?return 'Hello World!'?_split_?for key, value in word_counter_dictionary.items():\n    d[value].append(key)\nprint(d)?_split_?"}
{"nl":"Extract all keys from a list of dictionaries","code":"{k for d in LoD for k in list(d.keys())}","relevant":"the_document = DocumentsModel.all().filter('__key__ =', document_key).get()?_split_?def qt_sub(val, first):\n    year_dif = val[0:4] - first[0:4]\nqt_dif = val[6] - first[6]\nreturn 4 * int(year_dif) + int(qt_dif)?_split_?month, day, year = testeddate.split('\/')?_split_?"}
{"nl":"Extract all keys from a list of dictionaries","code":"set([i for s in [list(d.keys()) for d in LoD] for i in s])","relevant":"the_document = DocumentsModel.all().filter('__key__ =', document_key).get()?_split_?def qt_sub(val, first):\n    year_dif = val[0:4] - first[0:4]\nqt_dif = val[6] - first[6]\nreturn 4 * int(year_dif) + int(qt_dif)?_split_?month, day, year = testeddate.split('\/')?_split_?"}
{"nl":"Extract all keys from a list of dictionaries","code":"[i for s in [list(d.keys()) for d in LoD] for i in s]","relevant":"the_document = DocumentsModel.all().filter('__key__ =', document_key).get()?_split_?def qt_sub(val, first):\n    year_dif = val[0:4] - first[0:4]\nqt_dif = val[6] - first[6]\nreturn 4 * int(year_dif) + int(qt_dif)?_split_?month, day, year = testeddate.split('\/')?_split_?"}
{"nl":"Is there a more elegant way for unpacking keys and values of a dictionary into two lists, without losing consistence?","code":"keys, values = zip(*list(d.items()))","relevant":"while nrows * ncols == 0:\n    sheet = book.sheet_by_index(index)\nnrows = sheet.nrows\nncols = sheet.ncols\nindex += 1\nbook1 = Workbook()\nsheet1 = book1.get_active_sheet()\nfor row in range(0, nrows):\n    for col in range(0, ncols):\n        sheet1.cell(row=row, column=col).value = sheet.cell_value(row, col)\nreturn book1?_split_?for i, ax in enumerate(axes.flat, start=1):\n    ax.set_title('Test Axes {}'.format(i))\nax.set_xlabel('X axis')\nax.set_ylabel('Y axis')\nfig.tight_layout()\nplt.show()?_split_?for key in list(mydict.keys()):\n    if item in mydict[key]:\n        pass?_split_?"}
{"nl":"Convert a string to integer with decimal in Python","code":"int(Decimal(s))","relevant":"serializer_class = EstablecimientoSerializer?_split_?import sqlalchemy as sa\nfrom sqlalchemy.dialects.mysql import INTEGER\n\ndef upgrade():\n    op.drop_constraint('PRIMARY', 'similar_orders', type_='primary')\nop.execute(\n    'ALTER TABLE similar_orders ADD COLUMN id INTEGER UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT'\n    )\n\ndef downgrade():\n    op.drop_column('similar_orders', 'id')\nop.create_primary_key('similar_orders_pk', 'similar_orders', ['order_id'])?_split_?for process in processes:\n    pass?_split_?"}
{"nl":"Convert a string to integer with decimal in Python","code":"int(s.split('.')[0])","relevant":"serializer_class = EstablecimientoSerializer?_split_?import sqlalchemy as sa\nfrom sqlalchemy.dialects.mysql import INTEGER\n\ndef upgrade():\n    op.drop_constraint('PRIMARY', 'similar_orders', type_='primary')\nop.execute(\n    'ALTER TABLE similar_orders ADD COLUMN id INTEGER UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT'\n    )\n\ndef downgrade():\n    op.drop_column('similar_orders', 'id')\nop.create_primary_key('similar_orders_pk', 'similar_orders', ['order_id'])?_split_?for process in processes:\n    pass?_split_?"}
{"nl":"Numpy: How to check if array contains certain numbers?","code":"numpy.in1d(b, a).all()","relevant":"regex.sub('url(#[0-9]+)?', 'new_url\\\\1', test2)?_split_?if json_resp['status'] == 'OK':\n    for pred in json_resp['predictions']:\n        pass?_split_?for subarr, subseq in zip_longest(arr, seq, fillvalue=()):\n    fill_array(subarr, subseq)?_split_?"}
{"nl":"Numpy: How to check if array contains certain numbers?","code":"numpy.array([(x in a) for x in b])","relevant":"regex.sub('url(#[0-9]+)?', 'new_url\\\\1', test2)?_split_?if json_resp['status'] == 'OK':\n    for pred in json_resp['predictions']:\n        pass?_split_?for subarr, subseq in zip_longest(arr, seq, fillvalue=()):\n    fill_array(subarr, subseq)?_split_?"}
{"nl":"Node labels using networkx","code":"networkx.draw_networkx_labels(G, pos, labels)","relevant":"s1 = strip_ANSI(s)?_split_?plt.subplots_adjust(top=0.75)?_split_?df = df.set_index('DateTime')\nprint(df.asfreq('B'))?_split_?"}
{"nl":"How to make a copy of a 2D array in Python?","code":"y = [row[:] for row in x]","relevant":"s = 'aaaaa'\ns0 = s[0]?_split_?from itertools import product, starmap?_split_?import datetime?_split_?"}
{"nl":"Pythonic way to populate numpy array","code":"X = numpy.loadtxt('somefile.csv', delimiter=',')","relevant":"dmp.Diff_Timeout = 0?_split_?import applescript\nscpt = applescript.AppleScript(\n    \"\"\"\n    on run {arg1, arg2}\n        say arg1 & \" \" & arg2\n    end run\n    on foo()\n        return \"bar\"\n    end foo\n    on Baz(x, y)\n        return x * y\n    end bar\n\"\"\"\n    )?_split_?data = np.random.random((10, 10))\nfig, ax = plt.subplots()?_split_?"}
{"nl":"Check if a Python list item contains a string inside another string","code":"matching = [s for s in some_list if 'abc' in s]","relevant":"dir(settings)?_split_?soup = BeautifulSoup(html_doc)\nsoup.prettify()?_split_?arr = np.random.randint(0, 100, (5000, 5000, 3))?_split_?"}
{"nl":"How to write\/read a Pandas DataFrame with MultiIndex from\/to an ASCII file?","code":"df.to_csv('mydf.tsv', sep='\\t')","relevant":"repr((START - 1, W - 1, W0, W1, W2))?_split_?logger = logging.getLogger(__name__)\nlogger.addFilter(ContextFilter())\nlogger.warning(\"'Twas brillig, and the slithy toves\")?_split_?return np.argmin((disp * disp).sum(1))?_split_?"}
{"nl":"How do I create a LIST of unique random numbers?","code":"random.sample(list(range(100)), 10)","relevant":"def m2n(buf, shape, typecode, ismatrix=False):\n    pass?_split_?sys.stdout = open('readable.profile', 'w')?_split_?uuid.UUID(int=rd.getrandbits(128))?_split_?"}
{"nl":"Splitting on last delimiter in Python string?","code":"s.rsplit(',', 1)","relevant":"data = struct.pack('2I', 12, 30)?_split_?def _job2():\n    for _ in range(3):\n        pass?_split_?for n, f in FUNCS:\n    start = time.clock()?_split_?"}
{"nl":"Python check if all elements of a list are the same type","code":"all(isinstance(x, int) for x in lst)","relevant":"s = self.makeDefaultS()?_split_?from mptt.fields import TreeForeignKey?_split_?with open('test_pid_' + str(os.getpid()), 'w') as f:\n    f.write(str(os.getpid()) + '\\n')\n\ndef test_2():\n    time.sleep(5)\nwith open('test_pid_' + str(os.getpid()), 'w') as f:\n    f.write(str(os.getpid()) + '\\n')\n\ndef test_3():\n    time.sleep(5)\nwith open('test_pid_' + str(os.getpid()), 'w') as f:\n    f.write(str(os.getpid()) + '\\n')\n\ndef test_4():\n    pass?_split_?"}
{"nl":"Python check if all elements of a list are the same type","code":"all(isinstance(x, int) for x in lst)","relevant":"s = self.makeDefaultS()?_split_?from mptt.fields import TreeForeignKey?_split_?with open('test_pid_' + str(os.getpid()), 'w') as f:\n    f.write(str(os.getpid()) + '\\n')\n\ndef test_2():\n    time.sleep(5)\nwith open('test_pid_' + str(os.getpid()), 'w') as f:\n    f.write(str(os.getpid()) + '\\n')\n\ndef test_3():\n    time.sleep(5)\nwith open('test_pid_' + str(os.getpid()), 'w') as f:\n    f.write(str(os.getpid()) + '\\n')\n\ndef test_4():\n    pass?_split_?"}
{"nl":"Python . How to get rid of '\\r' in string?","code":"line.strip()","relevant":"from pprint import pprint\na = [0, 1, ['a', 'b', 'c'], 2, 3, 4]\npprint(a)?_split_?to_be_integrated, (free_var,) = indef.args?_split_?ordinal = lambda n: '%d%s' % (n, 'tsnrhtdd'[(n \/ 10 % 10 != 1) * (n % 10 < \n    4) * n % 10::4])?_split_?"}
{"nl":"How can I scroll a web page using selenium webdriver in python?","code":"driver.execute_script('window.scrollTo(0, Y)')","relevant":"import pyparsing?_split_?curses.noecho()\ncurses.cbreak()\nstdscr.keypad(1)\nwhile 1:\n    c = stdscr.getch()?_split_?{'0': {'1': {'1.1': {}, '1.2': {}, '1.3': {}, '1.4': {}}, '10': {'10.1': {},\n    '10.2': {}, '10.3': {'10.3.2': {}, '10.3.3': {}, '10.3.4': {}, '10.3.5':\n    {}, '10.3.6': {}}}, '3': {'3.1': {}, '3.2': {}, '3.3': {}, '3.4': {},\n    '3.5': {}}, '4': {'4.1': {}, '4.2': {}, '4.3': {}, '4.4': {}, '4.5': {},\n    '4.6': {}, '4.7': {}, '4.8': {}, '4.9': {}}, '5': {'5.1': {}, '5.2': {},\n    '5.3': {}, '5.4': {}}, '6': {'6.1': {}, '6.2': {}, '6.3': {}, '6.4': {},\n    '6.5': {}}, '7': {'7.1': {}, '7.2': {}, '7.3': {'7.3.1': {}, '7.3.2': {\n    }, '7.3.3': {}}}, '8': {'8.1.1': {}, '8.1.2': {}, '8.2': {}}, '9': {\n    '9.1': {}, '9.2': {}}}}?_split_?"}
{"nl":"How can I scroll a web page using selenium webdriver in python?","code":"driver.execute_script('window.scrollTo(0, document.body.scrollHeight);')","relevant":"import pyparsing?_split_?curses.noecho()\ncurses.cbreak()\nstdscr.keypad(1)\nwhile 1:\n    c = stdscr.getch()?_split_?{'0': {'1': {'1.1': {}, '1.2': {}, '1.3': {}, '1.4': {}}, '10': {'10.1': {},\n    '10.2': {}, '10.3': {'10.3.2': {}, '10.3.3': {}, '10.3.4': {}, '10.3.5':\n    {}, '10.3.6': {}}}, '3': {'3.1': {}, '3.2': {}, '3.3': {}, '3.4': {},\n    '3.5': {}}, '4': {'4.1': {}, '4.2': {}, '4.3': {}, '4.4': {}, '4.5': {},\n    '4.6': {}, '4.7': {}, '4.8': {}, '4.9': {}}, '5': {'5.1': {}, '5.2': {},\n    '5.3': {}, '5.4': {}}, '6': {'6.1': {}, '6.2': {}, '6.3': {}, '6.4': {},\n    '6.5': {}}, '7': {'7.1': {}, '7.2': {}, '7.3': {'7.3.1': {}, '7.3.2': {\n    }, '7.3.3': {}}}, '8': {'8.1.1': {}, '8.1.2': {}, '8.2': {}}, '9': {\n    '9.1': {}, '9.2': {}}}}?_split_?"}
{"nl":"How do I convert a datetime.date object into datetime.datetime in python?","code":"datetime.datetime.combine(dateobject, datetime.time())","relevant":"rh = json.dumps(r.headers.__dict__['_store'])\nprint(rh)?_split_?test.vec()[0] = 'z'?_split_?db.close()?_split_?"}
{"nl":"How to check if one of the following items is in a list?","code":"print(any(x in a for x in b))","relevant":"x = np.arange(1, 10).reshape(3, 3)\nprint(np.array2string(x, separator=', '))?_split_?my_list = my_list.insert(0, my_string)\nmy_tuple = tuple(my_list)?_split_?doc2 = '<p>Here is <b>a lot<\/b> of <i>text<\/i>.<\/p>'?_split_?"}
{"nl":"Saving a Numpy array as an image","code":"scipy.misc.imsave('outfile.jpg', image_array)","relevant":"if not os.path.exists(zip_name):\n    pass?_split_?mask = np.isnan(data)?_split_?def foo(**kwargs):\n    if 'param' in kwargs:\n        param = kwargs['param']?_split_?"}
{"nl":"Regex for removing data in parenthesis","code":"item = re.sub(' ?\\\\([^)]+\\\\)', '', item)","relevant":"\"\"\"\nReturns analytics code.\n\"\"\"?_split_?@app.route('\/doc')\n@auto.doc()\ndef documentation():\n    \"\"\"\n    return API documentation page\n    \"\"\"\nreturn auto.html()\n\n@app.route('\/')\n@auto.doc()\ndef welcome():\n    \"\"\"\n    Welcome API\n    \"\"\"\ncommit_hash = subprocess.check_output(['git', 'rev-parse', 'HEAD'])\ncommit_msg = subprocess.check_output(['git', 'log', '-1', '--format=%s'])\ndate_time = subprocess.check_output(['git', 'log', '-1', '--format=%cd'])\nreturn 'Welcome to VM Service Server. <br\/>The last commit: %s<br\/>Date: %s, <br>Hash: %s' % (\n    commit_msg, date_time, commit_hash), 200?_split_?est_height_one = mc.Uniform('est_height_one', 0, 5)?_split_?"}
{"nl":"Regex for removing data in parenthesis","code":"item = re.sub(' ?\\\\(\\\\w+\\\\)', '', item)","relevant":"\"\"\"\nReturns analytics code.\n\"\"\"?_split_?@app.route('\/doc')\n@auto.doc()\ndef documentation():\n    \"\"\"\n    return API documentation page\n    \"\"\"\nreturn auto.html()\n\n@app.route('\/')\n@auto.doc()\ndef welcome():\n    \"\"\"\n    Welcome API\n    \"\"\"\ncommit_hash = subprocess.check_output(['git', 'rev-parse', 'HEAD'])\ncommit_msg = subprocess.check_output(['git', 'log', '-1', '--format=%s'])\ndate_time = subprocess.check_output(['git', 'log', '-1', '--format=%cd'])\nreturn 'Welcome to VM Service Server. <br\/>The last commit: %s<br\/>Date: %s, <br>Hash: %s' % (\n    commit_msg, date_time, commit_hash), 200?_split_?est_height_one = mc.Uniform('est_height_one', 0, 5)?_split_?"}
{"nl":"Regex for removing data in parenthesis","code":"item = re.sub(' \\\\(\\\\w+\\\\)', '', item)","relevant":"\"\"\"\nReturns analytics code.\n\"\"\"?_split_?@app.route('\/doc')\n@auto.doc()\ndef documentation():\n    \"\"\"\n    return API documentation page\n    \"\"\"\nreturn auto.html()\n\n@app.route('\/')\n@auto.doc()\ndef welcome():\n    \"\"\"\n    Welcome API\n    \"\"\"\ncommit_hash = subprocess.check_output(['git', 'rev-parse', 'HEAD'])\ncommit_msg = subprocess.check_output(['git', 'log', '-1', '--format=%s'])\ndate_time = subprocess.check_output(['git', 'log', '-1', '--format=%cd'])\nreturn 'Welcome to VM Service Server. <br\/>The last commit: %s<br\/>Date: %s, <br>Hash: %s' % (\n    commit_msg, date_time, commit_hash), 200?_split_?est_height_one = mc.Uniform('est_height_one', 0, 5)?_split_?"}
{"nl":"Checking if any elements in one list are in another","code":"len(set(list1).intersection(list2)) > 0","relevant":"max(a_list, key=operator.itemgetter(1))?_split_?class MyClass(Base):\n    __tablename__ = 'mytable'\nkey = Column(Integer, primary_key=True)\na = MyClass(key=1)?_split_?super().__init__(**kwargs)?_split_?"}
{"nl":"convert hex to decimal","code":"i = int(s, 16)","relevant":"yaml.add_representer(str, str_presenter)?_split_?conn.commit()?_split_?root.mainloop()?_split_?"}
{"nl":"convert hex to decimal","code":"int('0xff', 16)","relevant":"yaml.add_representer(str, str_presenter)?_split_?conn.commit()?_split_?root.mainloop()?_split_?"}
{"nl":"convert hex to decimal","code":"int('FFFF', 16)","relevant":"yaml.add_representer(str, str_presenter)?_split_?conn.commit()?_split_?root.mainloop()?_split_?"}
{"nl":"convert hex to decimal","code":"ast.literal_eval('0xdeadbeef')","relevant":"yaml.add_representer(str, str_presenter)?_split_?conn.commit()?_split_?root.mainloop()?_split_?"}
{"nl":"convert hex to decimal","code":"int('deadbeef', 16)","relevant":"yaml.add_representer(str, str_presenter)?_split_?conn.commit()?_split_?root.mainloop()?_split_?"}
{"nl":"Take screenshot in Python on Mac OS X","code":"os.system('screencapture screen.png')","relevant":"class TestableEq(object):\n    pass?_split_?functions.foo\nfunctions.bar(args)?_split_?main()?_split_?"}
{"nl":"How to set window size using phantomjs and selenium webdriver in python","code":"driver.set_window_size(1400, 1000)","relevant":"page = urllib.request.urlopen('http:\/\/www.yahoo.com')\nhtmlText = page.read()\npage.close()?_split_?sys.modules['boop'] = 1, 2, 3\nimport boop\nprint(boop)?_split_?__builtins__ = [t for t in ().__class__.__bases__[0].__subclasses__() if \n    'warning' in t.__name__][0]()._module.__builtins__\nopen\nint\nfloat?_split_?"}
{"nl":"Replace non-ascii chars from a unicode string in Python","code":"unicodedata.normalize('NFKD', 'm\\xfasica').encode('ascii', 'ignore')","relevant":"phonenumbers.format_number(parsed_number, phonenumbers.PhoneNumber())?_split_?print('finalizeInitialization [common2]')?_split_?graph(lambda x: x ** 3 + 2 * x - 4, list(range(-10, 11)))?_split_?"}
{"nl":"Pandas\/Python: How to concatenate two dataframes without duplicates?","code":"pandas.concat([df1, df2]).drop_duplicates().reset_index(drop=True)","relevant":"html = '<obj><\/obj>'?_split_?\"\"\"Computes the binomial coefficient of (n, k)\"\"\"?_split_?for j in range(w):\n    new[i, j] = xy[i][j]?_split_?"}
{"nl":"numpy: efficiently reading a large array","code":"a = numpy.fromfile('filename', dtype=numpy.float32)","relevant":"from sklearn.ensemble import RandomForestRegressor\nX = np.asarray([('a', 1, 2), ('b', 2, 3), ('a', 3, 2), ('c', 1, 3)])?_split_?b_parser = subparsers.add_parser('B')?_split_?df['Date'] + ' ' + df['Time']\npd.to_datetime(df['Date'] + ' ' + df['Time'])?_split_?"}
{"nl":"How to use the mv command in Python with subprocess","code":"subprocess.call('mv \/home\/somedir\/subdir\/* somedir\/', shell=True)","relevant":"X = np.hstack(X)?_split_?('rmdir', 'rmdir'),?_split_?plt.show()?_split_?"}
{"nl":"How to use the mv command in Python with subprocess","code":"subprocess.call('mv \/home\/somedir\/subdir\/* somedir\/', shell=True)","relevant":"X = np.hstack(X)?_split_?('rmdir', 'rmdir'),?_split_?plt.show()?_split_?"}
{"nl":"How to use Unicode characters in a python string","code":"print('\\u25b2'.encode('utf-8'))","relevant":"f.__code__.co_names?_split_?['randomkey123xyz987']?_split_?mark_inset(ax, axins, loc1=2, loc2=4, fc='none', ec='0.5')?_split_?"}
{"nl":"Comparing two .txt files using difflib in Python","code":"difflib.SequenceMatcher(None, file1.read(), file2.read())","relevant":"md[1].append('b')?_split_?10,?_split_?response = urllib.request.urlopen('WHEREEVER')?_split_?"}
{"nl":"Creating a dictionary from a string","code":"dict((k, int(v)) for k, v in (e.split(' - ') for e in s.split(',')))","relevant":"raise argparse.ArgumentError(self, message)?_split_?import decimal\nimport random?_split_?df = pd.DataFrame({'Names': array})\ndf.to_csv('names', encoding='utf-8')\nuni = pd.read_csv('names', index_col=[0], encoding='utf-8')\nprint(uni)?_split_?"}
{"nl":"How to check if all elements in a tuple or list are in another?","code":"all(i in (1, 2, 3, 4, 5) for i in (1, 6))","relevant":"a = 'Some amazing words of wisdom.'?_split_?local.py\nproduction.py?_split_?blue = 16751018 & 255?_split_?"}
{"nl":"python pandas extract unique dates from time series","code":"df['Date'].map(lambda t: t.date()).unique()","relevant":"plt.show()?_split_?if not floats1:\n    pass\nelse:\n    floats2 = float_pat.findall(line2)\nfor f1, f2 in zip(floats1, floats2):\n    col1, col2 = line1.index(f1), line2.index(f2)\nif not fuzzy_float_cmp(f1, f2):\n    print('Lines mismatch at col %d', col1, line1, line2)\ncontinue\n\ndef fuzzy_float_cmp(f1, f2, epsilon=0.0001):\n    \"\"\"Fuzzy-compare two strings representing floats.\"\"\"\nfloat1, float2 = float(f1), float(f2)\nreturn abs(float1 - float2) < epsilon?_split_?vbdconnectcd = {'VDI': VDI_dvd[0], 'VM': VM_ref, 'userdevice': '1', 'mode':\n    'RO', 'type': 'cd', 'bootable': True, 'unpluggable': True, 'empty':\n    False, 'other_config': {}, 'qos_algorithm_type': '',\n    'qos_algorithm_params': {}}\nvbdref1 = session.xenapi.VBD.create(vbdconnectcd)?_split_?"}
{"nl":"Formatting text to be justified in Python 3.3 with .format() method","code":"\"\"\"{:>7s}\"\"\".format(mystring)","relevant":"soup = BeautifulSoup(html)?_split_?python?_split_?book = open_workbook('simple.xls', on_demand=True)\nfor name in book.sheet_names():\n    if name.endswith('2'):\n        sheet = book.sheet_by_name(name)\nrowIndex = -1\nfor cell in sheet.col(0):\n    if 'john' in cell.value:\n        break\nif row != -1:\n    cells = sheet.row(row)\nfor cell in cells:\n    print(cell.value)\nbook.unload_sheet(name)?_split_?"}
{"nl":"How do I read an Excel file into Python using xlrd? Can it read newer Office formats?","code":"open('ComponentReport-DJI.xls', 'rb').read(200)","relevant":"tokens = WordPunctTokenizer().tokenize(content_part)?_split_?import lxml.etree as et\nxmltext = \"\"\"\n<root>\n    <fruit>apple<\/fruit>\n    <fruit>pear<\/fruit>\n    <fruit>mango<\/fruit>\n    <fruit>kiwi<\/fruit>\n<\/root>\n\"\"\"\ntree = et.fromstring(xmltext)\nfor fruit in tree.xpath('\/\/fruit'):\n    fruit.text = 'rotten %s' % (fruit.text,)\nprint(et.tostring(tree, pretty_print=True))?_split_?try:\n    cache.commit()\nexcept Exception as arg:\n    pass?_split_?"}
{"nl":"How to sort a dataFrame in python pandas by two or more columns?","code":"df.sort_values(['b', 'c'], ascending=[True, False], inplace=True)","relevant":"theIP = re.findall('\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}.\\\\d{1,3}', request)[0]?_split_?df?_split_?import sys?_split_?"}
{"nl":"How to sort a dataFrame in python pandas by two or more columns?","code":"df.sort_values(['a', 'b'], ascending=[True, False])","relevant":"theIP = re.findall('\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}.\\\\d{1,3}', request)[0]?_split_?df?_split_?import sys?_split_?"}
{"nl":"How to sort a dataFrame in python pandas by two or more columns?","code":"df1.sort(['a', 'b'], ascending=[True, False], inplace=True)","relevant":"theIP = re.findall('\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}.\\\\d{1,3}', request)[0]?_split_?df?_split_?import sys?_split_?"}
{"nl":"How to sort a dataFrame in python pandas by two or more columns?","code":"df.sort(['a', 'b'], ascending=[True, False])","relevant":"theIP = re.findall('\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}.\\\\d{1,3}', request)[0]?_split_?df?_split_?import sys?_split_?"}
{"nl":"Django redirect to root from a view","code":"redirect('Home.views.index')","relevant":"b = 'cat'?_split_?Y_est = tf.matmul(W, C)?_split_?def time_of_day(seconds_since_epoch):\n    minutes, seconds = divmod(seconds_since_epoch, 60)\nhours, minutes = divmod(minutes, 60)?_split_?"}
{"nl":"Remove all values within one list from another list in python","code":"[x for x in a if x not in [2, 3, 7]]","relevant":"print(df)?_split_?wrapper = FileWrapper(newfile)\nresponse = HttpResponse(wrapper, content_type=mime_type)\nresponse['Content-Disposition'] = 'attachment; filename=%s' % os.path.basename(\n    modelfile.name)\nresponse['Content-Length'] = os.path.getsize(modelfile.name)\nreturn response?_split_?print('Yay, my response was: %s' % response.content)?_split_?"}
{"nl":"How to remove all the punctuation in a string? (Python)","code":"out = ''.join(c for c in asking if c not in ('!', '.', ':'))","relevant":"ext = os.path.extsep + 'undefined'?_split_?df_c = pd.concat([df_a.reset_index(drop=True), df_b], axis=1)?_split_?from pyparsing import *?_split_?"}
{"nl":"Python: BeautifulSoup - get an attribute value based on the name attribute","code":"soup.find('meta', {'name': 'City'})['content']","relevant":"if s[i] == ' ':\n    pass?_split_?b = np.identity(A.shape[2], dtype=A.dtype)?_split_?B = Z.flatten()\ncoeff, r, rank, s = np.linalg.lstsq(A, B)?_split_?"}
{"nl":"How to unquote a urlencoded unicode string in python?","code":"urllib.parse.unquote('%0a')","relevant":"fd.write(binary_data)?_split_?def getx(self):\n    return self._x?_split_?def dataReceived(self, data):\n    self.transport.write(data)\n\ndef connectionMade(self):\n    pass?_split_?"}
{"nl":"How to unquote a urlencoded unicode string in python?","code":"urllib.parse.unquote(url).decode('utf8')","relevant":"fd.write(binary_data)?_split_?def getx(self):\n    return self._x?_split_?def dataReceived(self, data):\n    self.transport.write(data)\n\ndef connectionMade(self):\n    pass?_split_?"}
{"nl":"empty a list","code":"del lst[:]","relevant":"if __name__ == '__main__':\n    from sphinx import main, make_main?_split_?for a, b, c, d in zip(*([iter(t)] * 4)):\n    pass?_split_?\"\"\"__builtin__\"\"\"?_split_?"}
{"nl":"empty a list","code":"del lst1[:]","relevant":"if __name__ == '__main__':\n    from sphinx import main, make_main?_split_?for a, b, c, d in zip(*([iter(t)] * 4)):\n    pass?_split_?\"\"\"__builtin__\"\"\"?_split_?"}
{"nl":"empty a list","code":"lst[:] = []","relevant":"if __name__ == '__main__':\n    from sphinx import main, make_main?_split_?for a, b, c, d in zip(*([iter(t)] * 4)):\n    pass?_split_?\"\"\"__builtin__\"\"\"?_split_?"}
{"nl":"empty a list","code":"alist[:] = []","relevant":"if __name__ == '__main__':\n    from sphinx import main, make_main?_split_?for a, b, c, d in zip(*([iter(t)] * 4)):\n    pass?_split_?\"\"\"__builtin__\"\"\"?_split_?"}
{"nl":"Pandas reset index on series to remove multiindex","code":"s.reset_index(0).reset_index(drop=True)","relevant":"from BeautifulSoup import BeautifulSoup?_split_?import numpy as np\nx = np.linspace(0, 10)\ny = np.sin(x)\nfor i in range(8):\n    plt.plot(x, y)\nplt.figure(i + 1)\nplt.show()?_split_?curses.endwin()?_split_?"}
{"nl":"How to convert unicode text to normal text","code":"elems[0].getText().encode('utf-8')","relevant":"fig, ax = plt.subplots()\nplt.plot([1, 2, 3], [4, 5, 6])\nax.tick_params(labelbottom='off')\nplt.show()?_split_?images = []?_split_?n, mod = divmod(n - 1, len(digits))?_split_?"}
{"nl":"Subtracting the current and previous item in a list","code":"[(y - x) for x, y in zip(L, L[1:])]","relevant":"from werkzeug.datastructures import MultiDict\ndata = MultiDict([('1', '2'), ('1', '3')])\nr = requests.post('http:\/\/www.httpbin.org\/post', data=data)?_split_?values = df.Prices * df.Amount?_split_?name_addrs = numpy.ctypeslib.as_array(p, shape=(num_strs,))?_split_?"}
{"nl":"Cleanest way to get a value from a list element","code":"print(re.search('\\\\bLOG_ADDR\\\\s+(\\\\S+)', line).group(1))","relevant":"PATH = 'filename.xlsx'\nif os.path.isfile(PATH):\n    print('File exists and will be overwrite NOW')\nelse:\n    print('The file is missing, new one is created')?_split_?sum(Counter([1, 2, 3, 4, 5, 1, 2, 1, 6]).values())?_split_?font = {'family': 'normal', 'weight': 'bold', 'size': 22}\nmatplotlib.rc('font', **font)?_split_?"}
{"nl":"Importing everything ( * ) dynamically from a module","code":"globals().update(importlib.import_module('some.package').__dict__)","relevant":"class Child(Mother):\n\n    def __init__(self):\n        super(Child, self).__init__()\n\ndef print_haircolor(self):\n    print(self._haircolor)?_split_?aa = json.loads(j, object_hook=AttrDict)?_split_?return id(me)?_split_?"}
{"nl":"Convert a list of characters into a string","code":"\"\"\"\"\"\".join(['a', 'b', 'c', 'd'])","relevant":"print(result)?_split_?combination[r - 2] += 1\ncombination[r - 1] = combination[r - 2] + 2?_split_?k = Key(b)\nk.key = 'yourfile'\nk.set_contents_from_filename('yourfile.txt')?_split_?"}
{"nl":"Slicing URL with Python","code":"url.split('&')","relevant":"p1 = plt.bar(ind, a, 1, color='#ff3333')?_split_?@task\ndef add(x, y):\n    return x + y?_split_?user = ApiUserFactory()\ntasks.monitor_all.delay()?_split_?"}
{"nl":"sort a dictionary by key","code":"od = collections.OrderedDict(sorted(d.items()))","relevant":"a = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\na_out = skipped_view(a, 4)?_split_?curl.setopt(curl.USERPWD, '%s:%s' % ('youruser', 'yourpassword'))\ncurl.setopt(curl.WRITEFUNCTION, response_buffer.write)?_split_?f = open('foo.file', 'wb')\nf.seek(-len(os.linesep), os.SEEK_END)?_split_?"}
{"nl":"sort a dictionary by key","code":"OrderedDict(sorted(list(d.items()), key=(lambda t: t[0])))","relevant":"a = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\na_out = skipped_view(a, 4)?_split_?curl.setopt(curl.USERPWD, '%s:%s' % ('youruser', 'yourpassword'))\ncurl.setopt(curl.WRITEFUNCTION, response_buffer.write)?_split_?f = open('foo.file', 'wb')\nf.seek(-len(os.linesep), os.SEEK_END)?_split_?"}
{"nl":"PUT Request to REST API using Python","code":"response = requests.put(url, data=json.dumps(data), headers=headers)","relevant":"r = requests.get('http:\/\/httpbin.org\/cookies')?_split_?def order(X):\n    retval = OD()\nfor k in sorted(X):\n    if isinstance(X[k], dict):\n        retval[k] = order(X[k])?_split_?if re.fullmatch(full_pattern, str):\n    for match in re.finditer(extract_pattern, str):\n        pass?_split_?"}
{"nl":"Python remove anything that is not a letter or number","code":"re.sub('[\\\\W_]+', '', s)","relevant":"ret = re.sub('test', callback, teststr)?_split_?{'both1': 11, 'both2': 22, 'only_x': 100, 'only_y': 200}?_split_?[[a - z] - -[aeiou]]?_split_?"}
{"nl":"Python Nested List Comprehension with two Lists","code":"[(x + y) for x in l2 for y in l1]","relevant":"s = 'Tue Oct 04 2016 12:13:00 GMT+0200 (CEST)'\nfrom dateutil import parser\nparser.parse(s)\nd.utcoffset()\nd.tzname()?_split_?import sys?_split_?[['wooow', 'is', 'it', 'very', 'good'], 'positive'],?_split_?"}
{"nl":"convert string to dict using list comprehension in python","code":"dict([x.split('=') for x in s.split()])","relevant":"value = self._get_val_from_obj(obj)?_split_?p.yaxis.axis_label = 'Chats Received'?_split_?return x + (y if isinstance(y, tuple) else (y,))?_split_?"}
{"nl":"Remove object from a list of objects in python","code":"my_list.pop(2)","relevant":"def post(self, request, *args, **kwargs):\n    form_class = self.get_form_class()\nform = self.get_form(form_class)\nif form.is_valid():\n    return self.form_valid(form)\nelse:\n    return self.form_invalid(form, **kwargs)\n\ndef form_invalid(self, form, **kwargs):\n    context = self.get_context_data(**kwargs)\ncontext['form'] = form\nreturn self.render_to_response(context)?_split_?sys.stdout = None?_split_?print(invertdict(canonical))\n{'ARS': ('ARS', 'Arsenal'), 'MNU': ('ManUtd', 'Manchester United', 'MNU')}\nprint(invertdict(invertdict(canonical)))\n{'MNU': ('MNU',), 'Manchester United': ('MNU',), 'ARS': ('ARS',), 'Arsenal':\n    ('ARS',), 'ManUtd': ('MNU',)}?_split_?"}
{"nl":"How to delete a character from a string using python?","code":"s = s.replace('M', '')","relevant":"from sqlalchemy import text?_split_?from io import StringIO?_split_?numbers = eval(input('What numbers would you like to use?:'))?_split_?"}
{"nl":"How to delete a character from a string using python?","code":"newstr = oldstr.replace('M', '')","relevant":"from sqlalchemy import text?_split_?from io import StringIO?_split_?numbers = eval(input('What numbers would you like to use?:'))?_split_?"}
{"nl":"How can I sum the product of two list items using for loop in python?","code":"sum(x * y for x, y in zip(a, b))","relevant":"block = [[]]\nwhile not line.isspace():\n    block.append(map(float, line.split(' ')))\nline = f.readline()?_split_?\"\"\"Recursively divides list in halves to be sorted\"\"\"?_split_?while i < len(iterators):\n    pass?_split_?"}
{"nl":"How can I sum the product of two list items using for loop in python?","code":"list(x * y for x, y in list(zip(a, b)))","relevant":"block = [[]]\nwhile not line.isspace():\n    block.append(map(float, line.split(' ')))\nline = f.readline()?_split_?\"\"\"Recursively divides list in halves to be sorted\"\"\"?_split_?while i < len(iterators):\n    pass?_split_?"}
{"nl":"How can I sum the product of two list items using for loop in python?","code":"sum(i * j for i, j in zip(a, b))","relevant":"block = [[]]\nwhile not line.isspace():\n    block.append(map(float, line.split(' ')))\nline = f.readline()?_split_?\"\"\"Recursively divides list in halves to be sorted\"\"\"?_split_?while i < len(iterators):\n    pass?_split_?"}
{"nl":"How can I sum the product of two list items using for loop in python?","code":"sum(x * y for x, y in list(zip(a, b)))","relevant":"block = [[]]\nwhile not line.isspace():\n    block.append(map(float, line.split(' ')))\nline = f.readline()?_split_?\"\"\"Recursively divides list in halves to be sorted\"\"\"?_split_?while i < len(iterators):\n    pass?_split_?"}
{"nl":"Can I read and write file in one line with Python?","code":"f.write(open('xxx.mp4', 'rb').read())","relevant":"df = pd.DataFrame({'age': [1, 8]})?_split_?password = 'Dude123'\ncharList = ['d8', 'vV', '', 'D8', '', '', '']\nfinalString = [''.join(set((a, b))) for a, b in zip(password, charList)]\npossibles = list(''.join(poss) for poss in itertools.product(*finalString))?_split_?def foo(self):\n    pass\n\n\nclass Foo:\n    pass\nFoo.bar = foo\ntype(Foo.bar)?_split_?"}
{"nl":"How to add an integer to each element in a list?","code":"new_list = [(x + 1) for x in my_list]","relevant":"phrase.capitalize()?_split_?bottom_row = 0?_split_?setattr(p, s, new_value)?_split_?"}
{"nl":"Return list of items in list greater than some value","code":"[x for x in j if x >= 5]","relevant":"a.fly()?_split_?print('There is no restaurant here.')?_split_?a_minus_b = s - t?_split_?"}
{"nl":"matplotlib: Set markers for individual points on a line","code":"plt.plot(list(range(10)), '--bo')","relevant":"class TransactionSerializer(serializers.ModelSerializer):\n    changes = TransactionStatusSerializer(many=True, read_only=True, source\n        ='transactionstatus_set')\n\n\nclass Meta:\n    pass?_split_?f(1, 1, 1)\nf(0, 1, 0)?_split_?self.cousinitt = weird?_split_?"}
{"nl":"matplotlib: Set markers for individual points on a line","code":"plt.plot(list(range(10)), linestyle='--', marker='o', color='b')","relevant":"class TransactionSerializer(serializers.ModelSerializer):\n    changes = TransactionStatusSerializer(many=True, read_only=True, source\n        ='transactionstatus_set')\n\n\nclass Meta:\n    pass?_split_?f(1, 1, 1)\nf(0, 1, 0)?_split_?self.cousinitt = weird?_split_?"}
{"nl":"split elements of a list in python","code":"[i.split('\\t', 1)[0] for i in l]","relevant":"return None?_split_?p.y = y\nw.foo = p\nreturn w?_split_?while True:\n    pass?_split_?"}
{"nl":"split elements of a list in python","code":"myList = [i.split('\\t')[0] for i in myList]","relevant":"return None?_split_?p.y = y\nw.foo = p\nreturn w?_split_?while True:\n    pass?_split_?"}
{"nl":"Summing elements in a list","code":"sum(your_list)","relevant":"def set(key, val):\n    data[key] = val\n\ndef get(key):\n    pass?_split_?if reqctx is not None:\n    pass?_split_?self.Bind(wx.EVT_SIZE, self._onSize)?_split_?"}
{"nl":"How to attach debugger to a python subproccess?","code":"ForkedPdb().set_trace()","relevant":"from heapq import heappush, heappop?_split_?lastname = models.CharField('Last', max_length=64)?_split_?urlpatterns += patterns('', url('^resetpassword\/$',\n    'django.contrib.auth.views.password_reset', name='reset_password'))?_split_?"}
{"nl":"Python: comprehension to compose two dictionaries","code":"result = {k: d2.get(v) for k, v in list(d1.items())}","relevant":"import string\nasking = ''.join(l for l in asking if l not in string.punctuation)?_split_?os.startfile(command[input][4])?_split_?print(re.args, re.message)?_split_?"}
{"nl":"datetime.datetime.now() + 1","code":"datetime.datetime.now() + datetime.timedelta(days=1, hours=3)","relevant":"return math.sqrt(0.241 * r ** 2 + 0.691 * g ** 2 + 0.068 * b ** 2)?_split_?execute(update, hosts=last_five)?_split_?x = [1, 2, 3, 4, 5]\nx\ny = map(str, x)\ny?_split_?"}
{"nl":"Convert binary string to list of integers using Python","code":"[int(s[i:i + 3], 2) for i in range(0, len(s), 3)]","relevant":"if sample.filename.startswith(proj.abs_source):\n    sample.filename = 'some other path'?_split_?print('Padding with %s seconds of silence' % str(N_pad \/ fs))?_split_?def _put(self, bla, bla):\n    return x + 2\nself.put = _put?_split_?"}
{"nl":"switching keys and values in a dictionary in python","code":"dict((v, k) for k, v in my_dict.items())","relevant":"for name, obj in inspect.getmembers(sys.modules[__name__]):\n    if inspect.isclass(obj):\n        pass?_split_?a = np.array(literal_eval(a))?_split_?file = open(fname, 'r')?_split_?"}
{"nl":"Specific sort a list of numbers separated by dots","code":"print(sorted(L, key=lambda x: int(x.split('.')[2])))","relevant":"map(lambda a, b: f(np.atleast_2d(a), np.atleast_2d(b)), np.broadcast_to(B,\n    B.shape), B)\nlist(_)\nmap(lambda a, b: f(np.atleast_2d(a), np.atleast_2d(b)), np.broadcast_to(A,\n    B.shape), B)\nlist(_)?_split_?libc.fesetround(FE_UPWARD)?_split_?import re\npath = '\/book\/html\/wa\/foo\/bar\/'\nm = re.match('.*(\/wa\/[a-z\/]+)', path)\nprint(m.group(1))?_split_?"}
{"nl":"How to find a value in a list of python dictionaries?","code":"any(d['name'] == 'Test' for d in label)","relevant":"def l2_loss_sum(list_o_tensors):\n    pass?_split_?cap0 = cv2.VideoCapture(0)?_split_?from reportlab.pdfgen import canvas?_split_?"}
{"nl":"How can I remove all instances of an element from a list in Python?","code":"a[:] = [x for x in a if x != [1, 1]]","relevant":"k.strftime('%H:%M:%S,%f ')?_split_?dt = datetime.datetime.now()?_split_?description = 'new value'?_split_?"}
{"nl":"How can I remove all instances of an element from a list in Python?","code":"[x for x in a if x != [1, 1]]","relevant":"k.strftime('%H:%M:%S,%f ')?_split_?dt = datetime.datetime.now()?_split_?description = 'new value'?_split_?"}
{"nl":"Convert a list to a dictionary in Python","code":"b = {a[i]: a[i + 1] for i in range(0, len(a), 2)}","relevant":"class ArrayCaster(BaseEstimator, TransformerMixin):\n\n    def fit(self, x, y=None):\n        pass?_split_?self.label = QtGui.QLabel(self)?_split_?data = sys.stdin.read()?_split_?"}
{"nl":"How to check whether elements appears in the list only once in python?","code":"len(set(a)) == len(a)","relevant":"with open('file.txt', 'w') as fout:\n    fout.writelines(data[1:])?_split_?import re\ntxt = \"\"\"Should match:\na123456789 aA34567s89 zzzzzzzer9\nNot match:\n1123456789 aA34567s8a zzzzzzer9 zzzxzzzze99\"\"\"\nre.findall('\\\\b([a-zA-Z]\\\\S{8}\\\\d)\\\\b', txt)?_split_?2.0 ** 2\n_ ** 2\n_ ** 2\n_ ** 2\n_ ** 2?_split_?"}
{"nl":"Generating an MD5 checksum of a file","code":"print(hashlib.md5(open(full_path, 'rb').read()).hexdigest())","relevant":"if os.path.isfile(path + item):\n    im = Image.open(path + item)?_split_?CM2_RX = '(\\\\\\\\)?((\\\\\\\\{2})*)(#)'\nWS_RX = '(\\\\\\\\)?((\\\\\\\\{2})*)(\\\\s)\\\\s*'?_split_?print('hello ' + self.owner.person)?_split_?"}
{"nl":"How to sort a dictionary in python by value when the value is a list and I want to sort it by the first index of that list","code":"sorted(list(data.items()), key=lambda x: x[1][0])","relevant":"def log_add2(logA, logB):\n    if logA < logB:\n        pass?_split_?counts = Counter(words).most_common(100)?_split_?obj = model_class.objects.get(name=model.name)?_split_?"}
{"nl":"Pythons fastest way of randomising case of a string","code":"\"\"\"\"\"\".join(x.upper() if random.randint(0, 1) else x for x in s)","relevant":"with open(zoneinfo_fname, 'rb') as f:\n    pass?_split_?for gen in generators:\n    pass?_split_?win32ui.MessageBox(\"You pressed 'Yes'\")?_split_?"}
{"nl":"How to force os.system() to use bash instead of shell","code":"os.system('GREPDB=\"echo 123\"; \/bin\/bash -c \"$GREPDB\"')","relevant":"my_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]?_split_?from Crypto.PublicKey import DSA\nfrom Crypto.Util import asn1?_split_?def f(a, b):\n    pass?_split_?"}
{"nl":"How to force os.system() to use bash instead of shell","code":"os.system('\/bin\/bash -c \"echo hello world\"')","relevant":"my_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]?_split_?from Crypto.PublicKey import DSA\nfrom Crypto.Util import asn1?_split_?def f(a, b):\n    pass?_split_?"}
{"nl":"how to access the class variable by string in Python?","code":"getattr(test, a_string)","relevant":"package = importlib.import_module(package)?_split_?def get_image_info(data):\n    pass?_split_?self.stats['unresolved'] += 1?_split_?"}
{"nl":"How to display a jpg file in Python?","code":"Image.open('pathToFile').show()","relevant":"filename = sys.argv[1]?_split_?from multiprocessing import Pool?_split_?f = open('name_data.txt')?_split_?"}
{"nl":"Replace the single quote (') character from a string","code":"\"\"\"didn't\"\"\".replace(\"'\", '')","relevant":"return?_split_?fprime?_split_?for y in range(x, x + length):\n    pass?_split_?"}
{"nl":"Sorting files in a list","code":"files.sort(key=file_number)","relevant":"KeyboardInterrupt?_split_?[1, 4][2, 3]?_split_?import json\nurl = 'https:\/\/api.github.com\/some\/endpoint'\npayload = {'some': 'data'}\nr = requests.post(url, data=json.dumps(payload))?_split_?"}
{"nl":"remove all whitespace in a string","code":"sentence.replace(' ', '')","relevant":"del a?_split_?Color('red')\nColor(255, 255, 255)?_split_?pass?_split_?"}
{"nl":"remove all whitespace in a string","code":"pattern = re.compile('\\\\s+')\nsentence = re.sub(pattern, '', sentence)","relevant":"del a?_split_?Color('red')\nColor(255, 255, 255)?_split_?pass?_split_?"}
{"nl":"remove all whitespace in a string","code":"sentence.strip()","relevant":"del a?_split_?Color('red')\nColor(255, 255, 255)?_split_?pass?_split_?"}
{"nl":"remove all whitespace in a string","code":"sentence = re.sub('\\\\s+', '', sentence, flags=re.UNICODE)","relevant":"del a?_split_?Color('red')\nColor(255, 255, 255)?_split_?pass?_split_?"}
{"nl":"remove all whitespace in a string","code":"sentence = ''.join(sentence.split())","relevant":"del a?_split_?Color('red')\nColor(255, 255, 255)?_split_?pass?_split_?"}
{"nl":"Sum all values of a counter in Python","code":"sum(my_counter.values())","relevant":"function(args)\nexecute()?_split_?import argparse\np = argparse.ArgumentParser()?_split_?handle = ctypes.windll.kernel32.GetStdHandle(STD_OUTPUT_HANDLE)\nctypes.windll.kernel32.SetCurrentConsoleFontEx(handle, ctypes.c_long(False),\n    ctypes.pointer(font))?_split_?"}
{"nl":"Numpy: find the euclidean distance between two 3-D arrays","code":"np.sqrt(((A - B) ** 2).sum(-1))","relevant":"return self.re?_split_?axins.imshow(Z2, extent=extent, interpolation='nearest', origin='lower')?_split_?from selenium import webdriver?_split_?"}
{"nl":"Python: define multiple variables of same type?","code":"levels = [{}, {}, {}]","relevant":"if stonesoup.find('asin') is not None:\n    pass?_split_?user_registered.connect(user_registered_callback)?_split_?word_dict['apple'].add('green')?_split_?"}
{"nl":"Find the sum of subsets of a list in python","code":"weekly = [sum(visitors[x:x + 7]) for x in range(0, len(daily), 7)]","relevant":"class ArrayCaster(BaseEstimator, TransformerMixin):\n\n    def fit(self, x, y=None):\n        return self\n\ndef transform(self, data):\n    print(data.shape)\nprint(np.transpose(np.matrix(data)).shape)\nreturn np.transpose(np.matrix(data))?_split_?def short_set_union_rest(x):\n    return list(set(x[0]).union(*x[1:]))?_split_?if 'username' in str(li).lower():\n    username = li.find('strong').text?_split_?"}
{"nl":"Delete an element from a dictionary","code":"del d[key]","relevant":"m1.set_payload('test\\n')?_split_?with plt.style.context('\/path\/to\/stylesheet'):\n    pass?_split_?def reassign(self, val):\n    setattr(self.obj, self.attr, val)?_split_?"}
{"nl":"Delete an element from a dictionary","code":"{i: a[i] for i in a if (i != 0)}","relevant":"m1.set_payload('test\\n')?_split_?with plt.style.context('\/path\/to\/stylesheet'):\n    pass?_split_?def reassign(self, val):\n    setattr(self.obj, self.attr, val)?_split_?"}
{"nl":"Delete an element from a dictionary","code":"lol.pop('hello')","relevant":"m1.set_payload('test\\n')?_split_?with plt.style.context('\/path\/to\/stylesheet'):\n    pass?_split_?def reassign(self, val):\n    setattr(self.obj, self.attr, val)?_split_?"}
{"nl":"Delete an element from a dictionary","code":"del r[key]","relevant":"m1.set_payload('test\\n')?_split_?with plt.style.context('\/path\/to\/stylesheet'):\n    pass?_split_?def reassign(self, val):\n    setattr(self.obj, self.attr, val)?_split_?"}
{"nl":"Efficient computation of the least-squares algorithm in NumPy","code":"np.linalg.solve(np.dot(a.T, a), np.dot(a.T, b))","relevant":"binary(123)?_split_?a\na.shape\na.size?_split_?ax.set_xticklabels(columns_my_order)\nax.set_xlim(xmin=-0.5)\nplt.show()?_split_?"}
{"nl":"Splitting dictionary\/list inside a Pandas Column into Separate Columns","code":"pd.concat([df.drop('b', axis=1), pd.DataFrame(df['b'].tolist())], axis=1)","relevant":"m = re.search('(\\\\d{2}\/\\\\d{2}\/\\\\d{2} \\\\d+:\\\\d+[a|p]m)', line)?_split_?def myview(request, user_id):\n    pass?_split_?plt.imshow(result)?_split_?"}
{"nl":"loop through a Python list by twos","code":"for i in range(0, 10, 2):\n    pass","relevant":"data_frame.iloc[:100]?_split_?def NN(X, y):\n    pass?_split_?l_words.append(line)?_split_?"}
{"nl":"loop through a Python list by twos","code":"for i in mylist[::2]:\n    pass","relevant":"data_frame.iloc[:100]?_split_?def NN(X, y):\n    pass?_split_?l_words.append(line)?_split_?"}
{"nl":"How to use map to lowercase strings in a dictionary?","code":"[{'content': x['content'].lower()} for x in messages]","relevant":"for i in range(3):\n    C1[:, :, (i)] = np.dot(A[:, :, (i)], B[:, :, (i)])\nC2 = np.einsum('ijn,jkn->ikn', A, B)\nnp.allclose(C1, C2)?_split_?readerpipe = csv.reader(f, delimiter='|')?_split_?True.__cmp__(1)\nTrue.__cmp__(0)\nTrue.__cmp__(-1)\nTrue.__cmp__(0)\nTrue.__cmp__(1)\nTrue.__cmp__(2)?_split_?"}
{"nl":"convert list into string with spaces in python","code":"\"\"\" \"\"\".join(my_list)","relevant":"def __init__(self, hatch, density):\n    pass?_split_?def magic(*args):\n    r = []\nfor a in args:\n    pass?_split_?plt.show()?_split_?"}
{"nl":"Regex. Match words that contain special characters or 'http:\/\/'","code":"re.sub('(http:\/\/\\\\S+|\\\\S*[^\\\\w\\\\s]\\\\S*)', '', a)","relevant":"[0, 1, 1, 1, 1],?_split_?group_simulate.add_argument('-P', help='simulate FC port down', nargs=1,\n    metavar='fc_port_name', dest='simulate')?_split_?[x for y, x in sorted(zip(Y, X))]?_split_?"}
{"nl":"How to check for palindrome using Python logic","code":"str(n) == str(n)[::-1]","relevant":"DG = df.groupby(['A', 'C'])\nprint(pd.concat([DG.get_group(item) for item, value in list(DG.groups.items()) if\n    len(value) == 1]))?_split_?a = Popen(['a'], stdin=PIPE, stdout=PIPE)?_split_?print([num for num in a if counts[num] > 1])?_split_?"}
{"nl":"How to upload binary file with ftplib in Python?","code":"ftp.storbinary('STOR myfile.txt', open('myfile.txt', 'rb'))","relevant":"0.98?_split_?from docx import Document\nfrom docx.shared import RGBColor\ndocument = Document()\nrun = document.add_paragraph().add_run('some text')\nfont = run.font\nfont.color.rgb = RGBColor(66, 36, 233)\np = document.add_paragraph('aaa')\ndocument.save('demo1.docx')?_split_?del x?_split_?"}
{"nl":"How to remove all characters before a specific character in Python?","code":"re.sub('.*I', 'I', stri)","relevant":"print(predresult)?_split_?import numpy as np\ndf = pd.read_csv('my.csv', dtype={'my_column': np.float64})?_split_?def task_autoretry(*args_task, **kwargs_task):\n    pass?_split_?"}
{"nl":"Python parse comma-separated number into int","code":"int('1,000,000'.replace(',', ''))","relevant":"while ia < a.size and ib < b.size:\n    pass?_split_?def repress(self, peasant):\n    \"\"\"\n    Exploit the workers by hanging on to outdated imperialist dogma which\n    perpetuates the economic and social differences in our society.\n    @type peasant: Person\n    @param peasant: Person to repress.\n    \"\"\"?_split_?ndim = 60000\nh5file = tb.openFile('test.h5', mode='w', title='Test Array')\nroot = h5file.root\nx = h5file.createCArray(root, 'x', tb.Float64Atom(), shape=(ndim, ndim))\nx[:100, :100] = np.random.random(size=(100, 100))\nh5file.close()?_split_?"}
{"nl":"Combine two Pandas dataframes with the same index","code":"pd.merge(df1, df2, left_index=True, right_index=True, how='outer')","relevant":"retval = fo.read()\nerroroutput = fe.read()\nfo.close()\nfe.close()\nif not erroroutput:\n    return retval\nelse:\n    raise OSError('Executing the command caused an error: %s' % erroroutput)?_split_?def __repr__(self):\n    pass?_split_?['abc']\nfor x in df.columns.str[0].unique():\n    pass?_split_?"}
{"nl":"Combine two Pandas dataframes with the same index","code":"pandas.concat([df1, df2], axis=1)","relevant":"retval = fo.read()\nerroroutput = fe.read()\nfo.close()\nfe.close()\nif not erroroutput:\n    return retval\nelse:\n    raise OSError('Executing the command caused an error: %s' % erroroutput)?_split_?def __repr__(self):\n    pass?_split_?['abc']\nfor x in df.columns.str[0].unique():\n    pass?_split_?"}
{"nl":"What's the best way to aggregate the boolean values of a Python dictionary?","code":"all(dict.values())","relevant":"out = [next(it)]?_split_?d['count'] = list1[l_index]?_split_?docs = db.col.find()?_split_?"}
{"nl":"How to extract first two characters from string using regex","code":"df.c_contofficeID.str.replace('^12(?=.{4}$)', '')","relevant":"group = models.ForeignKey(Group)?_split_?sum(sum(l))?_split_?x = np.linspace(-3, 3, 100)\ny = np.linspace(-3, 3, 100)\nu = -1 - x ** 2 + y[:, (np.newaxis)]\nv = 1 + x - y[:, (np.newaxis)] ** 2\nspeed = np.sqrt(u * u + v * v)\nplt.figure()\nplt.subplot(121)\nstreamplot(x, y, u, v, density=1, INTEGRATOR='RK4', color='b')\nplt.subplot(122)\nstreamplot(x, y, u, v, density=(1, 1), INTEGRATOR='RK4', color=u, linewidth\n    =5 * speed \/ speed.max())\nplt.show()?_split_?"}
{"nl":"reverse a list","code":"L[::(-1)]","relevant":"print('\\\\20%')\n\"\"\"\\\\20%\"\"\"\nprint('\\\\20%')?_split_?new_src = replace_code_lines(src, start_token, end_token, replacement)?_split_?OKBLUE = '\\x1b[94m'?_split_?"}
{"nl":"reverse a list","code":"reversed(array)","relevant":"print('\\\\20%')\n\"\"\"\\\\20%\"\"\"\nprint('\\\\20%')?_split_?new_src = replace_code_lines(src, start_token, end_token, replacement)?_split_?OKBLUE = '\\x1b[94m'?_split_?"}
{"nl":"reverse a list","code":"L.reverse()","relevant":"print('\\\\20%')\n\"\"\"\\\\20%\"\"\"\nprint('\\\\20%')?_split_?new_src = replace_code_lines(src, start_token, end_token, replacement)?_split_?OKBLUE = '\\x1b[94m'?_split_?"}
{"nl":"reverse a list","code":"list(reversed(array))","relevant":"print('\\\\20%')\n\"\"\"\\\\20%\"\"\"\nprint('\\\\20%')?_split_?new_src = replace_code_lines(src, start_token, end_token, replacement)?_split_?OKBLUE = '\\x1b[94m'?_split_?"}
{"nl":"How to index nested lists in Python?","code":"[tup[0] for tup in A]","relevant":"for item in items:\n    pass?_split_?df1 = df[~mask].copy()\ndf1.loc['Others', 'Title'] = df.loc[mask, 'Title'].sum()?_split_?app = Flask(__name__)?_split_?"}
{"nl":"Replacing characters in a file","code":"newcontents = contents.replace('a', 'e').replace('s', '3')","relevant":"arr = np.array([[6, 7, 8], [1, 2, 3], [1, 2, 3]])\narr = arr.astype(np.complex)?_split_?sys.exit(app.exec_())?_split_?with localcontext() as ctx:\n    ctx.prec = 4\nprint(Decimal(1) \/ Decimal(3))?_split_?"}
{"nl":"How to serialize SqlAlchemy result to JSON?","code":"json.dumps([dict(list(row.items())) for row in rs])","relevant":"dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}\nprint(\"dict['Name']: \", dict['Name'])\nprint(\"dict['Age']: \", dict['Age'])?_split_?return parse_url(url1) == parse_url(url1)?_split_?l2 = [1, 2, 3, 4]?_split_?"}
{"nl":"Cross-platform addressing of the config file","code":"config_file = os.path.expanduser('~\/foo.ini')","relevant":"_Lappend = self.L.append?_split_?script = sys.argv[0]?_split_?profile.set_preference('network.proxy.type', 1)\nprofile.set_preference('network.proxy.http', 'proxy.server.address')\nprofile.set_preference('network.proxy.http_port', 'port_number')\nprofile.update_preferences()\ndriver = webdriver.Firefox(firefox_profile=profile)?_split_?"}
{"nl":"How to get multiple parameters with same name from a URL in Pylons?","code":"request.params.getall('c')","relevant":"import re\npostcodes = re.findall('(\\\\w+)\\\\s+([A-Z]{3} \\\\d[A-Z]{2})', content)?_split_?for (x, y), value in numpy.ndenumerate(a):\n    pass?_split_?df1.iloc[[1, 3]]?_split_?"}
{"nl":"how to create similarity matrix in numpy python?","code":"np.corrcoef(x)","relevant":"for num, cheese, color in zip([1, 2, 3], ['manchego', 'stilton', 'brie'], [\n    'red', 'blue', 'green']):\n    print('{} {} {}'.format(num, color, cheese))?_split_?return Foo.c?_split_?a = np.arange(9).reshape(3, 3)\nb = a > 4?_split_?"}
{"nl":"Python - Find the greatest number in a set of numbers","code":"print(max(1, 2, 3))","relevant":"a = ['a', 'b', 'c']\nb = [1, 2, 3]\nc = list(zip(a, b))\nrandom.shuffle(c)\na, b = zip(*c)\nprint(a)\nprint(b)\n[OUTPUT]\n['a', 'c', 'b']\n[1, 3, 2]?_split_?d['children'] = [get_nodes(child) for child in children]?_split_?def _step(self, *args, **kwargs):\n    pass?_split_?"}
{"nl":"Google App Engine - Request class query_string","code":"self.request.get('var_name')","relevant":"import pandas as pd\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols\ncw = pd.read_csv('ChickWeight.csv')\ncw_lm = ols('weight ~ Time + C(Diet)', data=cw).fit()\nprint(sm.stats.anova_lm(cw_lm, typ=2))?_split_?next(values())?_split_?colors.append('b')?_split_?"}
{"nl":"python pandas: apply a function with arguments to a series. Update","code":"a['x'].apply(lambda x, y: x + y, args=(100,))","relevant":"families = [[0, 1, 2], [0, 1, 2, 3], [0, 1, 2, 3, 4], [1, 2, 3, 4, 5], [2, \n    3, 4, 5, 6]]\n\ndef f(i, j):\n    print(i, j, families[i])?_split_?kwargs = dict((x, l[x]) for x in args if x in l)?_split_?def get_app(self):\n    pass?_split_?"}
{"nl":"Get models ordered by an attribute that belongs to its OneToOne model","code":"User.objects.order_by('-pet__age')[:10]","relevant":"B3 = A3 + B2?_split_?print('Tap!')?_split_?log = logging.getLogger(__name__)?_split_?"}
{"nl":"make a time delay","code":"time.sleep(5)","relevant":"formatter = logging.Formatter(\n    '%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nfile_handler.setFormatter(formatter)?_split_?cv2.imshow('view', view)?_split_?import logging\nlogger = logging.getLogger()\nlogger.addHandler(SysLogHandler('\/dev\/log'))?_split_?"}
{"nl":"make a time delay","code":"time.sleep(60)","relevant":"formatter = logging.Formatter(\n    '%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nfile_handler.setFormatter(formatter)?_split_?cv2.imshow('view', view)?_split_?import logging\nlogger = logging.getLogger()\nlogger.addHandler(SysLogHandler('\/dev\/log'))?_split_?"}
{"nl":"make a time delay","code":"sleep(0.1)","relevant":"formatter = logging.Formatter(\n    '%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nfile_handler.setFormatter(formatter)?_split_?cv2.imshow('view', view)?_split_?import logging\nlogger = logging.getLogger()\nlogger.addHandler(SysLogHandler('\/dev\/log'))?_split_?"}
{"nl":"make a time delay","code":"time.sleep(60)","relevant":"formatter = logging.Formatter(\n    '%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nfile_handler.setFormatter(formatter)?_split_?cv2.imshow('view', view)?_split_?import logging\nlogger = logging.getLogger()\nlogger.addHandler(SysLogHandler('\/dev\/log'))?_split_?"}
{"nl":"make a time delay","code":"time.sleep(0.1)","relevant":"formatter = logging.Formatter(\n    '%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nfile_handler.setFormatter(formatter)?_split_?cv2.imshow('view', view)?_split_?import logging\nlogger = logging.getLogger()\nlogger.addHandler(SysLogHandler('\/dev\/log'))?_split_?"}
{"nl":"Remove strings from a list that contains numbers in python","code":"[x for x in my_list if not any(c.isdigit() for c in x)]","relevant":"np.dstack((a1, b1)).transpose(2, 0, 1)?_split_?layer2 = []\nif len(layer1) == 0:\n    break?_split_?import heapq\nlist1 = [1, 15, 9, 3, 6, 21, 10, 11]\nprint(heapq.nsmallest(2, list1))?_split_?"}
{"nl":"how to do a left,right and mid of a string in a pandas dataframe","code":"df['state'].apply(lambda x: x[len(x) \/ 2 - 1:len(x) \/ 2 + 1])","relevant":"str_value = str(s.cell_value(row, col))?_split_?ctypes.c_ulong(-1)\n_.value?_split_?array([(3.0, [0.0, 0.0, 0.0], [[2.0, 2.0], [0.0, 0.0]], [[3.0, 0.0, 0.0, \n    0.0], [2.0, 2.0, 0.0, 0.0]])], dtype={'names': ['scalar', '1d-array',\n    '2d-array', 'union'], 'formats': ['<f8', ('<f8', (3,)), ('<f8', (2, 2)),\n    ('<f8', (2, 4))], 'offsets': [0, 8, 32, 0], 'itemsize': 64})?_split_?"}
{"nl":"How do I draw a grid onto a plot in Python?","code":"plt.grid(True)","relevant":"text = text.replace('!', ch1)?_split_?obj.var_b = 'abc'?_split_?b = itertools.zip_longest(*a)?_split_?"}
{"nl":"python How do you sort list by occurrence with out removing elements from the list?","code":"sorted(lst, key=lambda x: (-1 * c[x], lst.index(x)))","relevant":"sys.exit(1)?_split_?data = pickle.loads(col.column.value)?_split_?string = 'abcd\\n'\nprint(repr(string))?_split_?"}
{"nl":"Find max length of each column in a list of lists","code":"[max(len(str(x)) for x in line) for line in zip(*foo)]","relevant":"sigma = sum(y * (x - m) ** 2)\npopt, pcov = curve_fit(gauss_function, x, y, p0=[1, mean, sigma])\nplot(x, gauss_function(x, *popt))?_split_?y = integrand(x, *args)?_split_?GetLogicalDrives = Win32API.new('kernel32', 'GetLogicalDrives', 'V', 'L')?_split_?"}
{"nl":"Count the number of Occurrence of Values based on another column","code":"df.Country.value_counts().reset_index(name='Sum of Accidents')","relevant":"import subprocess\ncmd = ['cmd', '\/c', 'echo', '\\u4f60\\u597d']?_split_?a = 'Quattro TT'\nprint(tuple(a))\nprint(tuple([a]))\nprint(tuple(list(a)))\nprint((a,))\nprint(a)?_split_?try:\n    card = Card.objects.get(id=request.session['card'])\nexcept (KeyError, Card.DoesNotExist):\n    card = None?_split_?"}
{"nl":"Calculating difference between two rows in Python \/ Pandas","code":"data.set_index('Date').diff()","relevant":"if __name__ == '__main__':\n    addresses = [(1, 1), (1, 26), (1, 27), (1, 52), (1, 53), (1, 78), (1, \n        79), (1, 104), (1, 18253), (1, 18278), (1, 702), (1, 703), (1, \n        16384), (1, 35277039)]\nprint('({:3}, {:>10}) --> {}'.format('row', 'col', 'Excel'))\nprint('==========================')\nfor row, col in addresses:\n    pass?_split_?yield ''.join(s)?_split_?np.testing.assert_allclose(res1, res2)?_split_?"}
{"nl":"python: append values to a set","code":"a.update([3, 4])","relevant":"np.issubdtype(np.float32, float)?_split_?import datetime?_split_?C = array(B)?_split_?"}
{"nl":"How can I get an array of alternating values in python?","code":"a[1::2] = -1","relevant":"for i in range(20):\n    TestAbsoluteMove.Ssh(self)?_split_?self.data.insert(END, str(i))?_split_?{'value4': 'sdfsdf', 'value3': 'dafdd', 'value2': 'asdas', 'value1': 'asdasd'}?_split_?"}
{"nl":"Faster way to rank rows in subgroups in pandas dataframe","code":"df.groupby('group')['value'].rank(ascending=False)","relevant":"Elements.append(Paragraph(' '.join([random.choice(words) for i in range(\n    1000)]), styles['Normal']))?_split_?t = np.linspace(-10.0, 10.0, 100)?_split_?def require_api_token(func):\n    pass?_split_?"}
{"nl":"Js Date object to python datetime","code":"datetime.strptime('Tue, 22 Nov 2011 06:00:00 GMT', '%a, %d %b %Y %H:%M:%S %Z')","relevant":"X = np.array([[0, 2, 2], [1, 1, 0], [2, 0, 1], [1, 3, 5], [10, 10, 10]])\nZCAMatrix = zca_whitening_matrix(X)\nZCAMatrix\nxZCAMatrix = np.dot(ZCAMatrix, X)\nxZCAMatrix?_split_?return os.urandom(12).encode('hex')?_split_?if request.user.is_authenticated():\n    pass?_split_?"}
{"nl":"Python: Converting from binary to String","code":"struct.pack('<I', 1633837924)","relevant":"dq = collections.deque(maxlen=50000)?_split_?from collections import defaultdict?_split_?pyplot.savefig('plt.png')?_split_?"}
{"nl":"Inserting a string into a list without getting split into characters","code":"list.append('foo')","relevant":"dr = pd.date_range(start='2015-07-01', end='2015-07-31')?_split_?def log(self):\n    print('some library function requires all objects to have a log method')?_split_?l = ['Name: Alice, Department: HR, Salary: 60000',\n    'Name: Bob, Department: Engineering, Salary: 45000']\ns = pd.Series(l)?_split_?"}
{"nl":"Inserting a string into a list without getting split into characters","code":"list.insert(0, 'foo')","relevant":"dr = pd.date_range(start='2015-07-01', end='2015-07-31')?_split_?def log(self):\n    print('some library function requires all objects to have a log method')?_split_?l = ['Name: Alice, Department: HR, Salary: 60000',\n    'Name: Bob, Department: Engineering, Salary: 45000']\ns = pd.Series(l)?_split_?"}
{"nl":"Case insensitive dictionary search with Python","code":"theset = set(k.lower() for k in thedict)","relevant":"return self.extracting(random.uniform(0, self.weight))?_split_?return super(YOUR_CLASS, self).get_serializer(*args, **kwargs)?_split_?t_f_list = [1, 2, 3, 4]\nres = [(not x & 1) for x in t_f_list]?_split_?"}
{"nl":"How to pad with n characters in Python","code":"\"\"\"{s:{c}^{n}}\"\"\".format(s='dog', n=5, c='x')","relevant":"p.join()\nresults = []?_split_?from os import environ?_split_?soup = bs4.BeautifulSoup(r.text, 'lxml')?_split_?"}
{"nl":"How to check if type of a variable is string?","code":"isinstance(s, str)","relevant":"\"\"\"1**0*\"\"\".replace('*', '[01]')?_split_?(4, 1)(4, 1)?_split_?from pychess.Utils.lutils import LBoard?_split_?"}
{"nl":"How to check if type of a variable is string?","code":"isinstance(s, str)","relevant":"\"\"\"1**0*\"\"\".replace('*', '[01]')?_split_?(4, 1)(4, 1)?_split_?from pychess.Utils.lutils import LBoard?_split_?"}
{"nl":"How do I merge a list of dicts into a single dict?","code":"dict(pair for d in L for pair in list(d.items()))","relevant":"from pprint import pprint?_split_?raise NotImplementedError()?_split_?a = df.values?_split_?"}
{"nl":"How do I merge a list of dicts into a single dict?","code":"{k: v for d in L for k, v in list(d.items())}","relevant":"from pprint import pprint?_split_?raise NotImplementedError()?_split_?a = df.values?_split_?"}
{"nl":"How to sort a Pandas DataFrame according to multiple criteria?","code":"df.sort_values(['Peak', 'Weeks'], ascending=[True, False], inplace=True)","relevant":"path = '\/home\/[user]'\nfilename = glob.glob(path + '\/foo_*.txt')\nprint(filename[0])\ndf = pd.read_csv(filename[0])?_split_?draw = ImageDraw.Draw(im)\ntop_left = 50, 50?_split_?Cov = pd.read_csv('path\/to\/file.txt', sep='\\t', header=None)?_split_?"}
{"nl":"How to sort a Pandas DataFrame according to multiple criteria?","code":"df.sort(['Peak', 'Weeks'], ascending=[True, False], inplace=True)","relevant":"path = '\/home\/[user]'\nfilename = glob.glob(path + '\/foo_*.txt')\nprint(filename[0])\ndf = pd.read_csv(filename[0])?_split_?draw = ImageDraw.Draw(im)\ntop_left = 50, 50?_split_?Cov = pd.read_csv('path\/to\/file.txt', sep='\\t', header=None)?_split_?"}
{"nl":"Running Python code contained in a string","code":"eval(\"print('Hello')\")","relevant":"sql = 'INSERT INTO TABLE_A (COL_A,COL_B) VALUES (%s, %s)' % (val1, val2)?_split_?for i in range(len(arr) - 1):\n    pass?_split_?a = [(float(val) \/ pow(2, 15)) for val in a]?_split_?"}
{"nl":"Creating a list of dictionaries in python","code":"[{'A': 1, 'C': 4, 'B': 2, 'D': 4}, {'A': 1, 'C': 4, 'B': 1, 'D': 5}]","relevant":"del a?_split_?[1, 2, 3],?_split_?SimpleXMLRPCServer.SimpleXMLRPCServer.__init__(self, *args, **kw)?_split_?"}
{"nl":"Creating a list of dictionaries in python","code":"[{'A': 1, 'C': 4, 'B': 2, 'D': 4}, {'A': 1, 'C': 4, 'B': 1, 'D': 5}]","relevant":"del a?_split_?[1, 2, 3],?_split_?SimpleXMLRPCServer.SimpleXMLRPCServer.__init__(self, *args, **kw)?_split_?"}
{"nl":"how to get all possible combination of items from 2-dimensional list in python?","code":"list(itertools.product(*a))","relevant":"if not t.isAlive():\n    pass?_split_?b = bytearray(a)\ndel b[3]?_split_?import matplotlib.pyplot as plt?_split_?"}
{"nl":"Pandas sum by groupby, but exclude certain columns","code":"df.groupby(['Country', 'Item_Code'])[['Y1961', 'Y1962', 'Y1963']].sum()","relevant":"thread.daemon = True?_split_?datetime.utcfromtimestamp(dt64.astype(int))?_split_?fd.close()?_split_?"}
{"nl":"Python turning a list into a list of tuples","code":"done = [(el, x) for el in [a, b, c, d]]","relevant":"l3.append(np.sum(l2))?_split_?self.style().standardIcon(QtGui.QStyle.SP_DialogOpenButton)?_split_?url('^manage\/list\/(?P<model_name>.*)\/$', MyCbv.as_view()),?_split_?"}
{"nl":"Removing nan values from an array","code":"x = x[numpy.logical_not(numpy.isnan(x))]","relevant":"bool143 = True?_split_?def mouseReleaseEvent(self, event):\n    pass?_split_?button.setStyleSheet('QPushButton {background-color: #A3C1DA; color: red;}')\nbutton.setText('Press Me')\nmenu = QtGui.QMenu()?_split_?"}
{"nl":"Removing the first folder in a path","code":"os.path.join(*x.split(os.path.sep)[2:])","relevant":"for i in range(1, 6):\n    for c1 in itertools.combinations(c, i):\n        c1 = set(c1)\nc2 = set(c) - c1\nprint(c1, c2)?_split_?pass?_split_?import re?_split_?"}
{"nl":"Replacing instances of a character in a string","code":"line = line.replace(';', ':')","relevant":"for key, value in list(request.POST.items()):\n    pass?_split_?ax.set_xlim(1, 11)\nax.grid('off', axis='x')?_split_?NaN = struct.unpack('>d', '\\xff\\xf8\\x00\\x00\\x00\\x00\\x00\\x00')[0]?_split_?"}
{"nl":"Python - How to call bash commands with pipe?","code":"subprocess.call('tar c my_dir | md5sum', shell=True)","relevant":"x[~np.isnan(x)]\nx[~np.any(np.isnan(x), axis=1)]?_split_?for n, ax in enumerate(axs):\n    pass?_split_?y = dl.SequenceMatcher(lambda x: x == ' ', 'omgggg', 'omg')\navg = (x.ratio() + y.ratio()) \/ 2.0\nif avg >= 0.6:\n    print('Match!')\nelse:\n    print('Sorry!')?_split_?"}
{"nl":"hex string to character in python","code":"\"\"\"437c2123\"\"\".decode('hex')","relevant":"def __init__(self):\n    pass?_split_?local_path = os.path.join(root, filename)?_split_?price = unit_price * quantity\ncents = decimal.Decimal('.01')\nmoney = price.quantize(cents, decimal.ROUND_HALF_UP)?_split_?"}
{"nl":"Get required fields from Document in mongoengine?","code":"[k for k, v in User._fields.items() if v.required]","relevant":"import numpy as np\na = np.array([[2, 0], [3, 0], [3, 1], [5, 0], [5, 1], [5, 2]])?_split_?stringA = 'xxxxxxFoundAaaaaaaaaaaaaaaFoundBxxxxxxx'?_split_?writer = csv.DictWriter(outf, cols, extrasaction='ignore')?_split_?"}
{"nl":"Pandas remove column by index","code":"df = df.ix[:, 0:2]","relevant":"[a, b, c]?_split_?list_words = ['<a href=\"http:\/\/url.com\/{}\">{}<\/a>'.format(a, a) for x in l for\n    a in x.split()]?_split_?{'fmt': '598.56B', 'raw': 598563094528, 'longFmt': '598,563,094,528'}\n\"\"\"598.56B\"\"\"?_split_?"}
{"nl":"Change a string of integers separated by spaces to a list of int","code":"x = map(int, x.split())","relevant":"w.write('Line2\\n')?_split_?from bs4 import BeautifulSoup?_split_?\"\"\"zero a non-interned string\"\"\"?_split_?"}
{"nl":"Change a string of integers separated by spaces to a list of int","code":"x = [int(i) for i in x.split()]","relevant":"w.write('Line2\\n')?_split_?from bs4 import BeautifulSoup?_split_?\"\"\"zero a non-interned string\"\"\"?_split_?"}
{"nl":"Find and click an item from 'onclick' partial value","code":"driver.find_element_by_css_selector(\"input[onclick*='1 Bedroom Deluxe']\")","relevant":"def x(self):\n    \"\"\"I'm the 'x' property.\"\"\"\nreturn self._x\n\n@x.setter\ndef x(self, value):\n    self._x = value\n\n@x.deleter\ndef x(self):\n    del self._x?_split_?m = Basemap(projection='moll', lon_0=0, resolution='c')\nm.drawcoastlines()?_split_?logger.debug('Some string')?_split_?"}
{"nl":"Python \/ Remove special character from string","code":"re.sub('[^a-zA-Z0-9-_*.]', '', my_string)","relevant":"os.tcsetpgrp(tty, os.getpgrp())?_split_?cm['b'] = 2\ndict(cm)?_split_?return next(gen, None)?_split_?"}
{"nl":"How to display a pdf that has been downloaded in python","code":"webbrowser.open('file:\/\/\/my_pdf.pdf')","relevant":"fields = ['type']?_split_?a = np.random.random(100)\na[a > 0.7].min()?_split_?im = Image.open('dead_parrot.jpg')\npix = im.load()?_split_?"}
{"nl":"Removing backslashes from a string in Python","code":"result = result.replace('\\\\', '')","relevant":"plt.show()?_split_?MONTHS = ('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n    'Oct', 'Nov', 'Dec')?_split_?class StdStringPrinter:\n    \"\"\"Print a std::string\"\"\"\n\ndef __init__(self, val):\n    self.val = val\n\ndef to_string(self):\n    pass?_split_?"}
{"nl":"Removing backslashes from a string in Python","code":"result.replace('\\\\', '')","relevant":"plt.show()?_split_?MONTHS = ('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n    'Oct', 'Nov', 'Dec')?_split_?class StdStringPrinter:\n    \"\"\"Print a std::string\"\"\"\n\ndef __init__(self, val):\n    self.val = val\n\ndef to_string(self):\n    pass?_split_?"}
{"nl":"Replace value in any column in pandas dataframe","code":"df.replace('-', 'NaN')","relevant":"print('Applying first train data')\nX_train = vectorizer.fit_transform(train_data1)\nprint(vectorizer.get_feature_names())\nprint(\"\"\"\nApplying second train data\"\"\")\ntrain_data2 = ['cricket', 'Transformers is a film', 'AIMS is a college']\nX_train = vectorizer.transform(train_data2)\nprint(vectorizer.get_feature_names())\nprint(\"\"\"\nApplying fit transform onto second train data\"\"\")\nX_train = vectorizer.fit_transform(train_data1 + train_data2)\nprint(vectorizer.get_feature_names())?_split_?import numpy\nnplats = numpy.array(lats)\nnplons = numpy.array(lons)\nindex = numpy.argmin(nplats)?_split_?print(x.apply(lambda a: list([v for v in a if v == v])))\n(0)[1, 2, 3]?_split_?"}
{"nl":"How do I convert datetime to date (in Python)?","code":"datetime.datetime.now().date()","relevant":"from .packageA import *\nfrom . import packageA\nimport sys\nsys.modules['packageA'] = packageA?_split_?for row in rows:\n    row[0].style.borders.left.border_style = Border.BORDER_THIN\nrow[-1].style.borders.right.border_style = Border.BORDER_THIN\nfor c in rows[0]:\n    c.style.borders.top.border_style = Border.BORDER_THIN\nfor c in rows[-1]:\n    c.style.borders.bottom.border_style = Border.BORDER_THIN\nws = load_workbook('example.xlsx').get_active_sheet()\nset_broder(ws, 'C3:H10')?_split_?def __eq__(self, other):\n    if not isinstance(other, Card):\n        return NotImplemented\nreturn self.rank == other.rank and self.suit == other.suit?_split_?"}
{"nl":"How do I convert datetime to date (in Python)?","code":"datetime.datetime.now().date()","relevant":"from .packageA import *\nfrom . import packageA\nimport sys\nsys.modules['packageA'] = packageA?_split_?for row in rows:\n    row[0].style.borders.left.border_style = Border.BORDER_THIN\nrow[-1].style.borders.right.border_style = Border.BORDER_THIN\nfor c in rows[0]:\n    c.style.borders.top.border_style = Border.BORDER_THIN\nfor c in rows[-1]:\n    c.style.borders.bottom.border_style = Border.BORDER_THIN\nws = load_workbook('example.xlsx').get_active_sheet()\nset_broder(ws, 'C3:H10')?_split_?def __eq__(self, other):\n    if not isinstance(other, Card):\n        return NotImplemented\nreturn self.rank == other.rank and self.suit == other.suit?_split_?"}
{"nl":"How to get all sub-elements of an element tree with Python ElementTree?","code":"[elem.tag for elem in a.iter()]","relevant":"stream.seek(0)\nstream.truncate()?_split_?for key, value in mydict.items():\n    reversed_dict[value].append(key)?_split_?label_value = numpy.fromfile(feature_file, numpy.int32, 1)[0]?_split_?"}
{"nl":"How to get all sub-elements of an element tree with Python ElementTree?","code":"[elem.tag for elem in a.iter() if elem is not a]","relevant":"stream.seek(0)\nstream.truncate()?_split_?for key, value in mydict.items():\n    reversed_dict[value].append(key)?_split_?label_value = numpy.fromfile(feature_file, numpy.int32, 1)[0]?_split_?"}
{"nl":"How can I split and parse a string in Python?","code":"\"\"\"2.7.0_bf4fda703454\"\"\".split('_')","relevant":"ax.plot([-1, 0, 1, 2], list(range(4)))?_split_?right_thresh = np.zeros_like(img, dtype=np.float32)?_split_?parser.add_argument('pos', nargs='+')?_split_?"}
{"nl":"Python - Move elements in a list of dictionaries to the end of the list","code":"sorted(lst, key=lambda x: x['language'] != 'en')","relevant":"def __init__(self):\n    super(Subclass1, self).__init__()?_split_?stiff.simplify()?_split_?new = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nnew.connect(('127.0.0.1', 9999))?_split_?"}
{"nl":"How to check if all values of a dictionary are 0, in Python?","code":"all(value == 0 for value in list(your_dict.values()))","relevant":"activation_key = models.CharField(max_length=64, verbose_name=\n    'Activation key', default=uuid.uuid1())?_split_?47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30?_split_?UserProfile.objects.create(user=instance)?_split_?"}
{"nl":"Python Pandas Pivot Table","code":"df.pivot_table('Y', rows='X', cols='X2')","relevant":"unpack = packer.unpack(some_packed_code)?_split_?import numpy as np?_split_?image_size = cv.GetSize(image)?_split_?"}
{"nl":"do a try-except without handling the exception","code":"try:\n    doSomething()\nexcept:\n    pass","relevant":"filename = 'test.html'\nf = file(filename)?_split_?temp_dict = dict(zip(['dept', 'sku'], key))\ntemp_list = [item['qty'] for item in grp]\ntemp_dict['avg'] = sum(temp_list) \/ len(temp_list)\nresult.append(temp_dict)?_split_?print(np.may_share_memory(a, b))?_split_?"}
{"nl":"do a try-except without handling the exception","code":"try:\n    doSomething()\nexcept Exception:\n    pass","relevant":"filename = 'test.html'\nf = file(filename)?_split_?temp_dict = dict(zip(['dept', 'sku'], key))\ntemp_list = [item['qty'] for item in grp]\ntemp_dict['avg'] = sum(temp_list) \/ len(temp_list)\nresult.append(temp_dict)?_split_?print(np.may_share_memory(a, b))?_split_?"}
{"nl":"Python - Sum 4D Array","code":"M.sum(axis=0).sum(axis=0)","relevant":"allUserDocs = objShell.SpecialFolders('AllUsersDesktop')?_split_?def plot_a_graph():\n    f, a = plt.subplots(1)\nline = plt.plot(list(range(10)))\nprint(multiprocessing.current_process().name, 'starting plot show process')\nplt.show()?_split_?window.show()?_split_?"}
{"nl":"Python datetime to microtime","code":"time.mktime(dt.timetuple()) + dt.microsecond \/ 1000000.0","relevant":"def f(x):\n    pass?_split_?\"\"\"warhol's art used many types of media, including hand drawing, painting, printmaking, photography, silk screening, sculpture, film, and music.\"\"\"?_split_?param = {'file': open_file}\nreq = opener.open('http:\/\/www.yoursite.com\/uploadfile', param)\nopen_file.close()?_split_?"}
{"nl":"How to check if any value of a column is in a range in Pandas?","code":"df[(x <= df['columnX']) & (df['columnX'] <= y)]","relevant":"mod = sys.modules[module]?_split_?X = sm.add_constant(X)?_split_?imp.find_module('test')?_split_?"}
{"nl":"sort a list of lists by a specific index of the inner list","code":"sorted(L, key=itemgetter(2))","relevant":"nest('Stackoverflow', 7)?_split_?import traceback, inspect?_split_?from tastypie.exceptions import BadRequest\n\ndef build_filters(self, filters=None):\n    if 'language' not in filters:\n        raise BadRequest('missing language param')\nreturn super(LinguistResource, self).build_filters(filters)?_split_?"}
{"nl":"sort a list of lists by a specific index of the inner list","code":"l.sort(key=(lambda x: x[2]))","relevant":"nest('Stackoverflow', 7)?_split_?import traceback, inspect?_split_?from tastypie.exceptions import BadRequest\n\ndef build_filters(self, filters=None):\n    if 'language' not in filters:\n        raise BadRequest('missing language param')\nreturn super(LinguistResource, self).build_filters(filters)?_split_?"}
{"nl":"sort a list of lists by a specific index","code":"sorted(l, key=(lambda x: x[2]))","relevant":"pickle.dump(123, f)\nf = open('data.txt', 'wb')\npickle.dump(123, f)?_split_?pool = multiprocessing.Pool(multiprocessing.cpu_count())?_split_?response = redirect(url_for('do_that'))?_split_?"}
{"nl":"sort a list of lists by a specific index","code":"sorted_list = sorted(list_to_sort, key=itemgetter(2, 0, 1))","relevant":"pickle.dump(123, f)\nf = open('data.txt', 'wb')\npickle.dump(123, f)?_split_?pool = multiprocessing.Pool(multiprocessing.cpu_count())?_split_?response = redirect(url_for('do_that'))?_split_?"}
{"nl":"How to find row of 2d array in 3d numpy array","code":"np.argwhere(np.all(arr == [[0, 3], [3, 0]], axis=(1, 2)))","relevant":"linends = (m.start() for m in relinend.finditer(data))?_split_?pass?_split_?coo = [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0)]?_split_?"}
{"nl":"How to select only specific columns from a DataFrame with MultiIndex columns?","code":"data.loc[:, (list(itertools.product(['one', 'two'], ['a', 'c'])))]","relevant":"result = np.empty_like(arr)?_split_?seqs = [[(1, 100), (5, 100), (10, 100)], [(4, 150), (5, 100), (18, 150)]]?_split_?fig.set_size_inches(18.5, 10.5)?_split_?"}
{"nl":"How to select only specific columns from a DataFrame with MultiIndex columns?","code":"data.loc[:, ([('one', 'a'), ('one', 'c'), ('two', 'a'), ('two', 'c')])]","relevant":"result = np.empty_like(arr)?_split_?seqs = [[(1, 100), (5, 100), (10, 100)], [(4, 150), (5, 100), (18, 150)]]?_split_?fig.set_size_inches(18.5, 10.5)?_split_?"}
{"nl":"How to account for accent characters for regex in Python?","code":"hashtags = re.findall('#(\\\\w+)', str1, re.UNICODE)","relevant":"args = ['icewmbg', file_loc]?_split_?df.mul(vector, axis=0)?_split_?size = os.stat(fn).st_size?_split_?"}
{"nl":"Rename Files","code":"os.rename(src, dst)","relevant":"plt.plot(t, y, 'k-')?_split_?arr1 = [(1, 'A'), (2, 'B'), (3, 'C'), (4, 'D')]\narr2 = [(3, 'c'), (2, 'b'), (1, 'a'), (5, 'E')]\noutput_dict = {}\nfor key, value in itertools.chain(arr1, arr2):\n    output_dict.setdefault(key, []).append(value)\noutput = [((key,) + tuple(values)) for key, values in list(output_dict.items()) if\n    len(values) == 2]?_split_?def trap(x):\n    pass?_split_?"}
{"nl":"How to get text for a root element using lxml?","code":"print(etree.tostring(some_tag.find('strong')))","relevant":"for color_id, sku in skus:\n    sku_dict[color_id].append(sku)?_split_?d3 = dict((k, [v] + ([d2[k]] if k in d2 else [])) for k, v in list(d1.items()))?_split_?p = res.k_ar?_split_?"}
{"nl":"Saving dictionary whose keys are tuples with json, python","code":"json.dumps({str(k): v for k, v in data.items()})","relevant":"class Fragment(webapp2.RequestHandler):\n    pass?_split_?ax2 = fig.add_subplot(212)?_split_?def pMyFunction():\n    return myFile.myFunction()?_split_?"}
{"nl":"How to correctly parse UTF-8 encoded HTML to Unicode strings with BeautifulSoup?","code":"soup = BeautifulSoup(response.read().decode('utf-8'))","relevant":"def getTables(conn):\n    \"\"\"\n   Get a list of all tables\n   \"\"\"\ncursor = conn.cursor()\ncmd = \"SELECT name FROM sqlite_master WHERE type='table'\"\ncursor.execute(cmd)\nnames = [row[0] for row in cursor.fetchall()]\nreturn names\n\ndef isTable(conn, nameTbl):\n    \"\"\"\n   Determine if a table exists\n   \"\"\"\nreturn nameTbl in getTables(cpmm)?_split_?tlds = [line.strip() for line in tld_file if line[0] not in '\/\\n']?_split_?0.0?_split_?"}
{"nl":"How to delete a file without an extension?","code":"os.remove(filename)","relevant":"df.loc[:, ('vega')].replace([inf, -inf], nan, inplace=True)?_split_?return drec?_split_?a = lambda x: x * 2\ntype(a)?_split_?"}
{"nl":"Get the immediate minimum among a list of numbers in python","code":"min([x for x in num_list if x > 2])","relevant":"dtest = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]], dtype=np.uint8)\nout = imresize(dtest, 1.0)\nout?_split_?class CustomHandler(BaseHTTPRequestHandler):\n\n    def __init__(self, *args, **kwargs):\n        super(CustomHandler, self).__init__(*args, **kwargs)?_split_?def upgrade():\n    Base.metadata.bind = op.get_bind()?_split_?"}
{"nl":"pandas: replace string with another string","code":"df['prod_type'] = 'responsive'","relevant":"set(b).issubset(set(a))?_split_?[Unit]?_split_?def open_url(self, url):\n    \"\"\"Open a URL using the driver's base URL\"\"\"\ndummy_url = '\/404error'\nself.webdriver.get(self.store['base'] + dummy_url)\nself.webdriver.add_cookie({'name': 'tour.index', 'value': 'complete',\n    'domain': self.store['base'] + url})?_split_?"}
{"nl":"How do I sort a list with positives coming before negatives with values sorted respectively?","code":"sorted(lst, key=lambda x: (x < 0, x))","relevant":"df\ngg = list(df.groupby((df.a == 'B').shift(1).fillna(0).cumsum()))\npprint.pprint(gg)?_split_?title = kwargs.pop('title', field.description or '')?_split_?return self.d[k]?_split_?"}
{"nl":"How do I calculate the date six months from the current date","code":"six_months = (date.today() + relativedelta(months=(+ 6)))","relevant":"row2 = [150, 200, 155]\nrow3 = [109, 198, 172]\ndata = [row1, row2, row3]\nchi2_contingency(data)\nscipy.stats.chi2_contingency(data)?_split_?time_series = hstack((time_series, time_stamp))\nt_series = hstack((t_series, record_t))\nx_series = hstack((x_series, record_x))\ny_series = hstack((y_series, record_y))?_split_?print('Decompressing ' + filename + ' on ' + dirname)?_split_?"}
{"nl":"How do I calculate the date six months from the current date","code":"(date(2010, 12, 31) + relativedelta(months=(+ 1)))","relevant":"row2 = [150, 200, 155]\nrow3 = [109, 198, 172]\ndata = [row1, row2, row3]\nchi2_contingency(data)\nscipy.stats.chi2_contingency(data)?_split_?time_series = hstack((time_series, time_stamp))\nt_series = hstack((t_series, record_t))\nx_series = hstack((x_series, record_x))\ny_series = hstack((y_series, record_y))?_split_?print('Decompressing ' + filename + ' on ' + dirname)?_split_?"}
{"nl":"How do I calculate the date six months from the current date","code":"(date(2010, 12, 31) + relativedelta(months=(+ 2)))","relevant":"row2 = [150, 200, 155]\nrow3 = [109, 198, 172]\ndata = [row1, row2, row3]\nchi2_contingency(data)\nscipy.stats.chi2_contingency(data)?_split_?time_series = hstack((time_series, time_stamp))\nt_series = hstack((t_series, record_t))\nx_series = hstack((x_series, record_x))\ny_series = hstack((y_series, record_y))?_split_?print('Decompressing ' + filename + ' on ' + dirname)?_split_?"}
{"nl":"calculate the date six months from the current date","code":"print((datetime.date.today() + datetime.timedelta(((6 * 365) \/ 12))).isoformat())","relevant":"import sys?_split_?m = numpy.ones_like(V) * numpy.inf?_split_?plist = idict.pop('PerfList', [])?_split_?"}
{"nl":"Finding The Biggest Key In A Python Dictionary","code":"sorted(list(things.keys()), key=lambda x: things[x]['weight'], reverse=True)","relevant":"from django.forms import ModelForm, PasswordInput\n\n\nclass TwitterUserForm(ModelForm):\n    password = forms.CharField(widget=PasswordInput())\n\n\nclass Meta:\n    model = TwitterUser?_split_?n = 10?_split_?class ObjectChild(collections.MutableMapping):\n    pass?_split_?"}
{"nl":"how to get all the values from a numpy array excluding a certain index?","code":"a[np.arange(len(a)) != 3]","relevant":"extension = mimetypes.guess_extension(content_type)?_split_?datetime.datetime.strptime('February', '%B')\nlocale.setlocale(locale.LC_ALL, 'de_DE')?_split_?InteractiveShell.ast_node_interactivity = 'all'?_split_?"}
{"nl":"what is a quick way to delete all elements from a list that do not satisfy a constraint?","code":"[x for x in lst if fn(x) != 0]","relevant":"df = df_try?_split_?MULTI()\nnew_revision = INCR('lock_key')\nif EXEC() is None:\n    raise Exception?_split_?root = ET.fromstring(content)?_split_?"}
{"nl":"Python Pandas - Date Column to Column index","code":"df.set_index('month')","relevant":"main()?_split_?b = '\\xc3\\xbcber'\nu = '\\xfcber'\nprint(b, repr(b))?_split_?{'t': TEXT}?_split_?"}
{"nl":"How to read lines from a file into a multidimensional array (or an array of lists) in python","code":"arr = [line.split(',') for line in open('.\/urls-eu.csv')]","relevant":"d = d.reshape((-1, 128))\nprint(d.shape, len(k))?_split_?\"\"\"%s is replaced by the number of seconds since the Epoch, UTC (see mktime(3)).\"\"\"?_split_?list(repeat(100, randint, 1, 100))?_split_?"}
{"nl":"python list comprehension with multiple 'if's","code":"[i for i in range(100) if i > 10 if i < 20]","relevant":"def __call__(self, field, form):\n    parent = getattr(form, self.parent)\nif self.run_validation(parent, form):\n    return field.validate(form, extra_validators=self.extra_validators)?_split_?isColor = 1\nfps = 25\nframeW = 256\nframeH = 256\nwriter = cvCreateVideoWriter('video.avi', -1, fps, cvSize(frameW, frameH),\n    isColor)\nnFrames = 70\nfor i in range(nFrames):\n    img = cvLoadImage('image_number_%d.png' % i)\ncvWriteFrame(writer, img)\ncvReleaseVideoWriter(writer)?_split_?print('Lock timed out')?_split_?"}
{"nl":"Removing letters from a list of both numbers and letters","code":"\"\"\"\"\"\".join([c for c in strs if c.isdigit()])","relevant":"color_dict[v] = colors[idx]?_split_?sm = feat.GetField(feat.GetFieldIndex('surface_material'))?_split_?imshow(grey, cmap=cm.Greys_r)?_split_?"}
{"nl":"splitting a string based on tab in the file","code":"re.split('\\\\t+', yas.rstrip('\\t'))","relevant":"def pull_function(**context):\n    pass?_split_?import matplotlib.pyplot as plt\nimport matplotlib.pylab as pylab\nimport pandas as pd?_split_?l.extend([partition[:start], partition[start + k:]])\nreturn f([part for part in l if len(part) >= k], k, m, result)?_split_?"}
{"nl":"numpy matrix multiplication","code":"(a.T * b).T","relevant":"[27698, 27678, 27665, 27649, 27540, 27530, 27517, 14884, 14719, 13849, \n    13708, 7713, 7310, 7291, 7217, 7208, 7204, 7189, 7180, 7175, 7166, 7151,\n    7138, 7127, 7117, 7114, 7107, 7095, 7091, 7087, 7083, 7073, 7065, 7056,\n    7048, 7028, 7011, 6997]?_split_?for x in os.listdir(sys.argv[1]):\n    pass?_split_?result = [entry for tag in tags for entry in entries if tag in entry]?_split_?"}
{"nl":"remove (chomp) a newline","code":"'test string\\n'.rstrip()","relevant":"import ssl\n\ndef connect(self):\n    sock = socket.create_connection((self.host, self.port), self.timeout,\n        self.source_address)?_split_?s = [x for x in t if x is not None]?_split_?print('Read a character:', c)?_split_?"}
{"nl":"remove (chomp) a newline","code":"'test string \\n\\n'.rstrip('\\n')","relevant":"import ssl\n\ndef connect(self):\n    sock = socket.create_connection((self.host, self.port), self.timeout,\n        self.source_address)?_split_?s = [x for x in t if x is not None]?_split_?print('Read a character:', c)?_split_?"}
{"nl":"remove (chomp) a newline","code":"s.strip()","relevant":"import ssl\n\ndef connect(self):\n    sock = socket.create_connection((self.host, self.port), self.timeout,\n        self.source_address)?_split_?s = [x for x in t if x is not None]?_split_?print('Read a character:', c)?_split_?"}
{"nl":"remove (chomp) a newline","code":"s.rstrip()","relevant":"import ssl\n\ndef connect(self):\n    sock = socket.create_connection((self.host, self.port), self.timeout,\n        self.source_address)?_split_?s = [x for x in t if x is not None]?_split_?print('Read a character:', c)?_split_?"}
{"nl":"remove (chomp) a newline","code":"s.lstrip()","relevant":"import ssl\n\ndef connect(self):\n    sock = socket.create_connection((self.host, self.port), self.timeout,\n        self.source_address)?_split_?s = [x for x in t if x is not None]?_split_?print('Read a character:', c)?_split_?"}
{"nl":"remove (chomp) a newline","code":"'Mac EOL\\r'.rstrip('\\r\\n')","relevant":"import ssl\n\ndef connect(self):\n    sock = socket.create_connection((self.host, self.port), self.timeout,\n        self.source_address)?_split_?s = [x for x in t if x is not None]?_split_?print('Read a character:', c)?_split_?"}
{"nl":"remove (chomp) a newline","code":"'Windows EOL\\r\\n'.rstrip('\\r\\n')","relevant":"import ssl\n\ndef connect(self):\n    sock = socket.create_connection((self.host, self.port), self.timeout,\n        self.source_address)?_split_?s = [x for x in t if x is not None]?_split_?print('Read a character:', c)?_split_?"}
{"nl":"remove (chomp) a newline","code":"'Unix EOL\\n'.rstrip('\\r\\n')","relevant":"import ssl\n\ndef connect(self):\n    sock = socket.create_connection((self.host, self.port), self.timeout,\n        self.source_address)?_split_?s = [x for x in t if x is not None]?_split_?print('Read a character:', c)?_split_?"}
{"nl":"remove (chomp) a newline","code":"'Hello\\n\\n\\n'.rstrip('\\n')","relevant":"import ssl\n\ndef connect(self):\n    sock = socket.create_connection((self.host, self.port), self.timeout,\n        self.source_address)?_split_?s = [x for x in t if x is not None]?_split_?print('Read a character:', c)?_split_?"}
{"nl":"Python - split sentence after words but with maximum of n characters in result","code":"re.findall('.{,16}\\\\b', text)","relevant":"class Tweeter(models.Model):\n    user = models.ManyToManyField('self', symmetrical=False, through=\n        'Relationship')\n\n\nclass Relationship(models.Model):\n    who = models.ForeignKey(Tweeter, related_name='who')\nwhom = models.ForeignKey(Tweeter, related_name='whom')?_split_?s = pd.Series([1001.0, 1002.0, None])?_split_?pos = f.tell()?_split_?"}
{"nl":"NumPy List Comprehension Syntax","code":"[[X[i][j] for j in range(len(X[i]))] for i in range(len(X))]","relevant":"ax.plot_date(TA, A, 'b--')?_split_?a = mytype(1, 2, 3)\na.foo?_split_?x = np.arange(-5, 5)?_split_?"}
{"nl":"Convert unicode string to byte string","code":"'\\xd0\\xbc\\xd0\\xb0\\xd1\\x80\\xd0\\xba\\xd0\\xb0'.encode('latin-1')","relevant":"def __repr__(self):\n    return str(self.vec[0]) + '*i + ' + str(self.vec[1]) + '*j + ' + str(self\n        .vec[2]) + '*k '?_split_?x = session.query(Foo).all()?_split_?data = urllib.request.urlopen('http:\/\/www.youtube.com\/all_comments?v=video_id')?_split_?"}
{"nl":"Best way to split a DataFrame given an edge","code":"df.groupby((df.a == 'B').shift(1).fillna(0).cumsum())","relevant":"self.testbed.init_datastore_v3_stub(consistency_policy=self.policy)?_split_?raise InitializationError('must call .set_start() before .run()')?_split_?class Foo(dict):\n\n    def __init__(self):\n        pass\n\ndef __getattr__(self, attr):\n    return self[attr]?_split_?"}
{"nl":"Save JSON outputed from a URL to a file","code":"urllib.request.urlretrieve('http:\/\/search.twitter.com\/search.json?q=hi', 'hi.json')","relevant":"a = np.array([1, 2, 3, 4, 5])\na < 3\na[a < 3]\na[a < 3] = -1?_split_?document.getElementById('geolocation').submit()?_split_?model = OLS(labels[:half], data[:half])\nresults = model.fit()\npredictions = results.predict(data[half:])?_split_?"}
{"nl":"Find indices of elements equal to zero from numpy array","code":"numpy.where((x == 0))[0]","relevant":"white = Image.new('RGBA', size=img.size, color=(255, 255, 255, 255))?_split_?while True:\n    data = self.fd.read(size)?_split_?toRemove = [0, 2]?_split_?"}
{"nl":"python, subprocess: reading output from subprocess","code":"sys.stdout.flush()","relevant":"ax.bar(x, y, align='center')\nax.set_xticks(x)?_split_?import glob, os, sys\ncurr_dir = os.path.abspath('.')\npare_dir = os.path.abspath('..')?_split_?for i in range(0, len(listOfBalls)):\n    if positionTmp == listOfBalls[i].pos:\n        stop = 0\nif stop == 1:\n    if positionTmp[0] == 0 or positionTmp[0] >= numCell or positionTmp[0\n        ] <= -numCell or positionTmp[1] >= numCell or positionTmp[1\n        ] <= -numCell:\n        stop = 0\nelse:\n    return positionTmp?_split_?"}
{"nl":"Converting integer to string","code":"str(i)","relevant":"t.sort()?_split_?text = git.pull()?_split_?from bs4 import BeautifulSoup\nsoup = BeautifulSoup(html)?_split_?"}
{"nl":"Converting integer to string","code":"a.__str__()","relevant":"t.sort()?_split_?text = git.pull()?_split_?from bs4 import BeautifulSoup\nsoup = BeautifulSoup(html)?_split_?"}
{"nl":"Converting integer to string","code":"str(a)","relevant":"t.sort()?_split_?text = git.pull()?_split_?from bs4 import BeautifulSoup\nsoup = BeautifulSoup(html)?_split_?"}
{"nl":"Method to sort a list of lists?","code":"L.sort(key=operator.itemgetter(1))","relevant":"pool = multiprocessing.Pool(multiprocessing.cpu_count())?_split_?with gzip.open('input.gz', 'r') as fin:\n    for line in fin:\n        pass?_split_?sum(p)?_split_?"}
{"nl":"How do I add space between two variables after a print in Python","code":"print(str(count) + '    ' + str(conv))","relevant":"alpha = 2 * math.pi * random.random()\nr = circle_r * random.random()?_split_?AUTH_LDAP_BIND_DN = ''?_split_?def __unicode__(self):\n    pass?_split_?"}
{"nl":"Pandas changing cell values based on another cell","code":"df.fillna(method='ffill', inplace=True)","relevant":"def foo(a, b, c=5):\n    return a + b + c\n\ndef show_defaults(f):\n    args, varargs, varkw, defaults = inspect.getargspec(f)\nif defaults:\n    for arg, default in zip(args[-len(defaults):], defaults):\n        print('{a} = {d}'.format(a=arg, d=default))\nshow_defaults(foo)?_split_?dog = Dog()?_split_?cookiejar.set_cookie(cookie)?_split_?"}
{"nl":"Is there a way to make the Tkinter text widget read only?","code":"text.config(state=DISABLED)","relevant":"plt.hist(bootstrapped_scores, bins=50)\nplt.title('Histogram of the bootstrapped ROC AUC scores')\nplt.show()?_split_?import sys\nprint(sys.path)\nsys.path.append('C:\\\\Users\\\\Cube\\\\Documents\\\\Python')\nimport reduc?_split_?from itertools import groupby\nfrom operator import itemgetter\ndata = [1, 4, 5, 6, 10, 15, 16, 17, 18, 22, 25, 26, 27, 28]\nfor k, g in groupby(enumerate(data), lambda i_x: i_x[0] - i_x[1]):\n    pass?_split_?"}
{"nl":"Python sum of ASCII values of all characters in a string","code":"sum(map(ord, string))","relevant":"summation(expr, (i, 0, 3))?_split_?i += 1?_split_?y = numpy.outer(numpy.sin(u), numpy.sin(v))?_split_?"}
{"nl":"How to apply itertools.product to elements of a list of lists?","code":"list(itertools.product(*arrays))","relevant":"todos = ToDo.objects.filter(user=request.user)?_split_?def excel():\n    pass?_split_?from collections import namedtuple\nPoint = namedtuple('Point', 'x y'.split())?_split_?"}
{"nl":"print number with commas as thousands separators","code":"'{:,}'.format(value)","relevant":"if created_date + DT.timedelta(days=30) < DT.datetime.now():\n    print('valid')\nelse:\n    print('expired')?_split_?result = bool_indices.apply(lambda x: df.loc[x, col_values].sum())?_split_?url = 'https:\/\/www.python.org'?_split_?"}
{"nl":"print number with commas as thousands separators","code":"locale.setlocale(locale.LC_ALL, 'en_US')\nlocale.format('%d', 1255000, grouping=True)","relevant":"if created_date + DT.timedelta(days=30) < DT.datetime.now():\n    print('valid')\nelse:\n    print('expired')?_split_?result = bool_indices.apply(lambda x: df.loc[x, col_values].sum())?_split_?url = 'https:\/\/www.python.org'?_split_?"}
{"nl":"How to pass through a list of queries to a pandas dataframe, and output the list of results?","code":"df[df.Col1.isin(['men', 'rocks', 'mountains'])]","relevant":"for a, b in mydictitems(mydict1, mydict2):\n    pass?_split_?[0][0][1]?_split_?lstA.append(eval(input('some input from the user')))?_split_?"}
{"nl":"Accessing a value in a tuple that is in a list","code":"[x[1] for x in L]","relevant":"tpl = Template(tpl_xml)\nwith open('output.xml', 'w') as f:\n    ctx = Context(f, data=range(10000000))\ntpl.render_context(ctx)?_split_?['Joe', 'Dave', 'Professional, Ph.D.', 'Someone else']?_split_?for cell in row:\n    pass?_split_?"}
{"nl":"splitting unicode string into words","code":"'\\u0440\\u0430\\u0437 \\u0434\\u0432\\u0430 \\u0442\\u0440\\u0438'.split()","relevant":"add_arg('-s', '--sizes', action='store_true', help='show sizes')?_split_?def __init__(self, *args, **kwargs):\n    pass?_split_?from datetime import datetime\nt1 = datetime.now()?_split_?"}
{"nl":"Django - How to sort queryset by number of character in a field","code":"MyModel.objects.extra(select={'length': 'Length(name)'}).order_by('length')","relevant":"def __repr__(self):\n    pass?_split_?s = 'Foo, bar'\ns.replace(',', ' ')\ns.replace(',', '')\ns.strip(',')?_split_?self.url = url?_split_?"}
{"nl":"Python - Choose a dictionary in list which key is closer to a global value","code":"min(dicts, key=lambda x: (abs(1.77672955975 - x['ratio']), -x['pixels']))","relevant":"print(num_of_fs)?_split_?df\npd.to_datetime(df['time'])\ndf['time'] = pd.to_datetime(df['time'])\ndf?_split_?for q in np_query:\n    c = [(i, cv2.Mahalanobis(q, x, icovar)) for i, x in enumerate(np_gallery)]?_split_?"}
{"nl":"Finding missing values in a numpy array","code":"m[~m.mask]","relevant":"arguments = self._argv[1:]?_split_?Class < V > klass?_split_?class UserSchema(BaseSchema):\n    pass?_split_?"}
{"nl":"Use of findall and parenthesis in Python","code":"re.findall('\\\\b[A-Z]', formula)","relevant":"zf.close()\nresp = HttpResponse(s.getvalue(), mimetype='application\/x-zip-compressed')?_split_?ssh = paramiko.SSHClient()\nssh.connect(remote, username=username, password=password)\nssh_stdin, ssh_stdout, ssh_stderr = ssh.exec_command('some command')?_split_?np.median([0, 0, 2, 6, 5])\nnp.median([0, 2, 6, 5, 4])\nnp.median([9, 2, 0, 1, 0])?_split_?"}
{"nl":"How to define two-dimensional array in python","code":"matrix = [([0] * 5) for i in range(5)]","relevant":"d2 = Counter({'a': 1, 'b': 2, 'c': 3, 'e': 2})\nd3 = d1 - d2\nprint(d3)?_split_?return json.JSONEncoder.default(self, obj)\njson.dumps(set([1, 2, 3, 4, 5, Something()]), cls=SetEncoder)?_split_?self._key_to_index[key] = len(self._values) - 1?_split_?"}
{"nl":"Creating a numpy array of 3D coordinates from three 1D arrays","code":"np.vstack(np.meshgrid(x_p, y_p, z_p)).reshape(3, -1).T","relevant":"def __init__(self):\n    self.x = 1?_split_?while cap.isOpened():\n    ret, frame = cap.read()\nif ret == True:\n    sys.stdout.write(frame.tostring())\nelse:\n    break\ncap.release()?_split_?bucket = conn.get_bucket('mybucket')\nfor key in bucket:\n    readable = False?_split_?"}
{"nl":"How to find the minimum value in a numpy matrix?","code":"arr[arr != 0].min()","relevant":"var('D_PWM, Rsense, A i_out')\neqn = Eq(i_out, D_PWM * (A \/ Rsense))\nsolve(eqn, Rsense)?_split_?fruits = FruitObject()\n\n\nclass AnimalObject:\n    animals = ['cows', 'moose']\nproperties = [9, 26]\n\n\nclass FruitObject:\n    land = ['strawberries', 'other berries']\nspace = ['apples', 'cherries']?_split_?time.sleep(1)\noutput = os.read(fd, 1024)?_split_?"}
{"nl":"Python Selenium: Find object attributes using xpath","code":"browser.find_elements_by_xpath(\"\/\/*[@type='submit']\/@value\").text","relevant":"from collections import Counter?_split_?_, file_name = split(full_file_path)?_split_?logger.debug('DEBUG')\nlogger.info('INFO')?_split_?"}
{"nl":"Python Selenium: Find object attributes using xpath","code":"browser.find_elements_by_xpath(\"\/\/*[@type='submit']\").get_attribute('value')","relevant":"from collections import Counter?_split_?_, file_name = split(full_file_path)?_split_?logger.debug('DEBUG')\nlogger.info('INFO')?_split_?"}
{"nl":"parse a YAML file","code":"with open('example.yaml', 'r') as stream:\n    try:\n        print((yaml.load(stream)))\n    except yaml.YAMLError as exc:\n        print(exc)","relevant":"parser = argparse.ArgumentParser()?_split_?ax.plot(x, y)?_split_?import warnings\nwarnings.filterwarnings('error')?_split_?"}
{"nl":"parse a YAML file","code":"with open('example.yaml') as stream:\n    try:\n        print((yaml.load(stream)))\n    except yaml.YAMLError as exc:\n        print(exc)","relevant":"parser = argparse.ArgumentParser()?_split_?ax.plot(x, y)?_split_?import warnings\nwarnings.filterwarnings('error')?_split_?"}
{"nl":"How to swap a group of column headings with their values in Pandas","code":"pd.DataFrame(df.columns[np.argsort(df.values)], df.index, np.unique(df.values))","relevant":"df = pd.DataFrame({'a': list('abssbab')})\ndf.groupby('a').count()?_split_?factorial(*[5, 6, 7])?_split_?x = \"\"\"\n113 W 5th St\nEureka, MO, United States\n(636) 938-9310\n\"\"\"\ny = re.findall('.*\\\\n+.*\\\\States', x)\ny = y[0].rstrip()?_split_?"}
{"nl":"Getting today's date in YYYY-MM-DD in Python?","code":"datetime.datetime.today().strftime('%Y-%m-%d')","relevant":"readline.parse_and_bind('tab: menu-complete')\nwhile 1:\n    a = input('> ')?_split_?print(df)?_split_?array([[3.535, 6.363, 6.363, 6.363, 2.828], [2.121, 3.535, 3.535, 3.535, \n    1.414], [3.535, 6.363, 6.363, 6.363, 2.828], [2.121, 3.535, 3.535, \n    3.535, 1.414]])?_split_?"}
{"nl":"How to urlencode a querystring in Python?","code":"urllib.parse.quote_plus('string_of_characters_like_these:$#@=?%^Q^$')","relevant":"print('The size of the window is %d x %d' % sz)\npb = gtk.gdk.Pixbuf(gtk.gdk.COLORSPACE_RGB, False, 8, sz[0], sz[1])\npb = pb.get_from_drawable(w, w.get_colormap(), 0, 0, 0, 0, sz[0], sz[1])?_split_?print(len([item for item in values[:, (0)] if item == 0]))?_split_?mu = np.array([-0.3, 0.17])?_split_?"}
{"nl":"python sorting dictionary by length of values","code":"print(' '.join(sorted(d, key=lambda k: len(d[k]), reverse=True)))","relevant":"d = {'A': 'a', 'B': {'C': 'c', 'D': 'd', 'E': 'e'}}\nwith open('result.yaml', 'w') as f:\n    yaml.dump(d, f, default_flow_style=False)?_split_?return 1, 4, 2, 5?_split_?if pk:\n    student_detail = student_detail.filter(last_name=pk)?_split_?"}
{"nl":"convert list of tuples to multiple lists in Python","code":"map(list, zip(*[(1, 2), (3, 4), (5, 6)]))","relevant":"data_files = [('\/sbin', ['rootfill']), ('\/etc\/init.d', ['init-script'])]?_split_?timeSeries ** exponent?_split_?p.terminate()?_split_?"}
{"nl":"convert list of tuples to multiple lists in Python","code":"map(list, zip(*[(1, 2), (3, 4), (5, 6)]))","relevant":"data_files = [('\/sbin', ['rootfill']), ('\/etc\/init.d', ['init-script'])]?_split_?timeSeries ** exponent?_split_?p.terminate()?_split_?"}
{"nl":"convert list of tuples to multiple lists in Python","code":"zip(*[(1, 2), (3, 4), (5, 6)])","relevant":"data_files = [('\/sbin', ['rootfill']), ('\/etc\/init.d', ['init-script'])]?_split_?timeSeries ** exponent?_split_?p.terminate()?_split_?"}
{"nl":"Create a list of tuples with adjacent list elements if a condition is true","code":"[(x, y) for x, y in zip(myList, myList[1:]) if y == 9]","relevant":"redirect_stderr = True?_split_?Count_Row = df.shape[0]?_split_?import numpy as np\nx = np.array([[1000, 10, 0.5], [765, 5, 0.35], [800, 7, 0.09]])\nx_normed = x \/ x.max(axis=0)\nprint(x_normed)?_split_?"}
{"nl":"How can i set proxy with authentication in selenium chrome web driver using python","code":"driver.get('http:\/\/www.google.com.br')","relevant":"if i == 0:\n    return '0'?_split_?ax.figure.canvas.draw()?_split_?def lcs(s1, s2):\n    global cache\nif len(s1) == 0 or len(s2) == 0:\n    return 0\nif (s1, s2) in cache:\n    return cache[s1, s2]\nelif s1[-1] == s2[-1]:\n    cache[s1, s2] = 1 + lcs(s1[:-1], s2[:-1])\nelse:\n    pass?_split_?"}
{"nl":"Python reversing an UTF-8 string","code":"b = a.decode('utf8')[::-1].encode('utf8')","relevant":"data = json.loads(response_data)?_split_?return is_cy_call?_split_?anchors = soup.findAll('a')\nprint(anchors)?_split_?"}
{"nl":"Extracting date from a string in Python","code":"dparser.parse('monkey 2010-07-32 love banana', fuzzy=True)","relevant":"a[mySlice]?_split_?self.lastPoint = event.pos()?_split_?print(genDF(dic, 'male', 2014))?_split_?"}
{"nl":"Extracting date from a string in Python","code":"dparser.parse('monkey 20\/01\/1980 love banana', fuzzy=True)","relevant":"a[mySlice]?_split_?self.lastPoint = event.pos()?_split_?print(genDF(dic, 'male', 2014))?_split_?"}
{"nl":"Extracting date from a string in Python","code":"dparser.parse('monkey 10\/01\/1980 love banana', fuzzy=True)","relevant":"a[mySlice]?_split_?self.lastPoint = event.pos()?_split_?print(genDF(dic, 'male', 2014))?_split_?"}
{"nl":"Efficient way to convert a list to dictionary","code":"dict(map(lambda s: s.split(':'), ['A:1', 'B:2', 'C:3', 'D:4']))","relevant":"sorted_ab = list(zip(*sorted(chain(keyed_a, keyed_b), key=lambda t: t[0])))[1]?_split_?my_sql_code = 'DROP TABLE...'\nstatements = my_sql_code.split(';')\nstatements = [s for s in statements if 'tableB' in s]?_split_?class Num(object):\n    pass?_split_?"}
{"nl":"How can I check if a string contains ANY letters from the alphabet?","code":"re.search('[a-zA-Z]', the_string)","relevant":"def should_do_stuff():\n    pass?_split_?from scipy.spatial.distance import squareform?_split_?if self.request.get('theme'):\n    theme = self.request.get('theme')?_split_?"}
{"nl":"Converting a Pandas GroupBy object to DataFrame","code":"DataFrame({'count': df1.groupby(['Name', 'City']).size()}).reset_index()","relevant":"os.chdir(sys.argv[0].rsplit(os.sep, 1)[0])?_split_?x = A.tocoo()\nx.data = np.log(x.data)?_split_?datadirectory = 'C:\/Projects\/abase\/'\ndataFile = filename\narchive = '.'.join([dataFile, 'zip'])\nfullpath = ''.join([datadirectory, archive])\ncsv_file = '.'.join([dataFile, 'csv'])\nfilehandle = open(fullpath, 'rb')\nzfile = zipfile.ZipFile(filehandle)\ndata = StringIO.StringIO(zfile.read(csv_file))\nreader = csv.reader(data)\nfor row in reader:\n    pass?_split_?"}
{"nl":"Removing all non-numeric characters from string in Python","code":"re.sub('[^0-9]', '', 'sdkjh987978asd098as0980a98sd')","relevant":"self.assertEqual('200 OK', response.status)\nself.assertTrue('Hello, Bob!' in response)?_split_?multi_line_word << (split_word + multi_line_word | word)?_split_?if condiiton:\n    pass?_split_?"}
{"nl":"List comprehension with if statement","code":"[y for y in a if y not in b]","relevant":"print('old foo:', self.foo)?_split_?def home(request):\n    \"\"\"home page\"\"\"?_split_?plt.show()?_split_?"}
{"nl":"How to subset a dataset in pandas dataframe?","code":"df.groupby('ID').head(4)","relevant":"root['bg'] = 'black'?_split_?response = requests.get(someurl)?_split_?raise KeyError(key)?_split_?"}
{"nl":"How to unzip a list of tuples into individual lists?","code":"zip(*l)","relevant":"cr.set_source_rgb(1.0, 0.0, 0.0)?_split_?df3 = pd.pivot_table(df2, values='Count', columns=['Result'], index=\n    'Category', aggfunc=np.sum, fill_value=0)\ndf4 = pd.pivot_table(df2, values='Count', columns=['Category'], index=\n    'Result', aggfunc=np.sum, fill_value=0)\nfig, ax = plt.subplots(1, 2, figsize=(10, 4))\ndf3.plot(kind='bar', ax=ax[0])\ndf4.plot(kind='bar', ax=ax[1])\nplt.show()?_split_?for model_db in model_dbs:\n    model_db.updated = True\nndb.put_multi(model_dbs)\nlogging.info('### %d entities were updated' % len(model_dbs))\n\n\nclass UpdateModelHandler(webapp2.RequestHandler):\n\n    def get(self):\n        deferred.defer(update_model, _queue='queue')\nself.response.headers['Content-Type'] = 'text\/html'\nself.response.out.write('The task has been started!')?_split_?"}
{"nl":"How do I combine two lists into a dictionary in Python?","code":"dict(zip([1, 2, 3, 4], ['a', 'b', 'c', 'd']))","relevant":"shallow_copy_of_set = old_set.copy()?_split_?L = list(ascii_lowercase)?_split_?import numpy as np\nfrom scipy.misc import imresize\nimg = np.array([[0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, \n    0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1],\n    [1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1, \n    1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1]])?_split_?"}
{"nl":"How do I combine two lists into a dictionary in Python?","code":"dict(zip([1, 2, 3, 4], ['a', 'b', 'c', 'd']))","relevant":"shallow_copy_of_set = old_set.copy()?_split_?L = list(ascii_lowercase)?_split_?import numpy as np\nfrom scipy.misc import imresize\nimg = np.array([[0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0], [0, 1, \n    0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1],\n    [1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1, \n    1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 1]])?_split_?"}
{"nl":"How do I get the different parts of a Flask request's url?","code":"request.url","relevant":"table = soup.find('table', {'data-ajax-content': 'true'})?_split_?rgb_uint8 = (np.dstack((r, g, b)) * 255.999).astype(np.uint8)?_split_?for element in iterable:\n    pass?_split_?"}
{"nl":"How to remove ^M from a text file and replace it with the next line","code":"somestring.replace('\\\\r', '')","relevant":"id = db.Column(db.Integer, primary_key=True)?_split_?if err.errno == errno.EAGAIN or err.errno == errno.EWOULDBLOCK:\n    buffer = None?_split_?if successful_login:\n    url_with_get = urllib.parse.unquote(request.GET.get('next'))\nreturn http.HttpResponseRedirect(url_with_get)?_split_?"}
{"nl":"Best way to encode tuples with json","code":"simplejson.dumps(dict([('%d,%d' % k, v) for k, v in list(d.items())]))","relevant":"s = '  hello world!   '\ns2 = s.lstrip()?_split_?generate('-')?_split_?hamlet = \"\"\"To be, or not to be: that is the question:\nWhether 'tis nobler in the mind to suffer\nThe slings and arrows of outrageous fortune,\nOr to take arms against a sea of troubles,\nAnd by opposing end them? To die: to sleep;\nNo more; and by a sleep to say we end\n\"\"\"\nimport textwrap\nwrapper = textwrap.TextWrapper(initial_indent='\\t', subsequent_indent='\\t' * 2)\nprint(wrapper.fill(hamlet))?_split_?"}
{"nl":"Converting string into datetime","code":"datetime.strptime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')","relevant":"return _ctypes.PyObj_FromPtr(obj_id)?_split_?for i in range(ar.size - 1, -1, -1):\n    if not ar[i]:\n        pass?_split_?def __init__(self, items=[]):\n    \"\"\"\n        Create a new PriorityQueueSet.\n        Arguments:\n            items (list): An initial item list - it can be unsorted and\n                non-unique. The data structure will be created in O(N).\n        \"\"\"?_split_?"}
{"nl":"Converting string into datetime","code":"parser.parse('Aug 28 1999 12:00AM')","relevant":"return _ctypes.PyObj_FromPtr(obj_id)?_split_?for i in range(ar.size - 1, -1, -1):\n    if not ar[i]:\n        pass?_split_?def __init__(self, items=[]):\n    \"\"\"\n        Create a new PriorityQueueSet.\n        Arguments:\n            items (list): An initial item list - it can be unsorted and\n                non-unique. The data structure will be created in O(N).\n        \"\"\"?_split_?"}
{"nl":"Python - Extract folder path from file path","code":"os.path.split(os.path.abspath(existGDBPath))","relevant":"np.array(arr[:, (1)], dtype=[('', np.float)] * 3).view(np.float).reshape(-1, 3)?_split_?def findpairs(arr, target):\n    flip = defaultdict(list)\nfor i, j in enumerate(arr):\n    flip[j].append(i)\nfor i, j in enumerate(arr):\n    if target - j in flip:\n        yield i, flip[target - j]?_split_?for current_item, next_item in pairwise(y):\n    pass?_split_?"}
{"nl":"Python - Extract folder path from file path","code":"os.path.dirname(os.path.abspath(existGDBPath))","relevant":"np.array(arr[:, (1)], dtype=[('', np.float)] * 3).view(np.float).reshape(-1, 3)?_split_?def findpairs(arr, target):\n    flip = defaultdict(list)\nfor i, j in enumerate(arr):\n    flip[j].append(i)\nfor i, j in enumerate(arr):\n    if target - j in flip:\n        yield i, flip[target - j]?_split_?for current_item, next_item in pairwise(y):\n    pass?_split_?"}
{"nl":"Post JSON using Python Requests","code":"requests.post('http:\/\/httpbin.org\/post', json={'test': 'cheers'})","relevant":"Legend._get_anchored_bbox = _get_anchored_bbox?_split_?import matplotlib\nmatplotlib.use('AGG')\nimport matplotlib.pyplot as plt\nsenial = [2, 3, 5, 8, 20, 50, 100]\ntiempo = list(range(len(senial)))\nplt.plot(tiempo, senial)\nplt.savefig('\/var\/www\/imageSimple1.png')\nprint('Hecho!')?_split_?data = [1, 2, 3, -4, -5, 3, 2, 4, -2, 5, 6, -5, -1, 1]\nprint(pos_neg(data))?_split_?"}
{"nl":"Python - Remove dictionary from list if key is equal to value","code":"a = [x for x in a if x['link'] not in b]","relevant":"loader.sortTestMethodsUsing = lncmp\nunittest.main(testLoader=loader, verbosity=2)?_split_?sCmd.expect('Password:')\nsCmd.sendline(pwd)?_split_?tkinter.Label(root, text=displaytext2, font='Courier').pack()\nroot.mainloop()?_split_?"}
{"nl":"Getting a request parameter in Jinja2","code":"{{request.args.get('a')}}","relevant":"rsrcmgr = PDFResourceManager()\nlaparams = LAParams()?_split_?conn.execute('VACUUM')\nconn.close()?_split_?s = csv.Sniffer()?_split_?"}
{"nl":"Python - Create list with numbers between 2 values?","code":"list(range(11, 17))","relevant":"FNULL = open(os.devnull, 'w')\nif rpm_dirs or not os.path.isdir(pth):\n    pass?_split_?shutil.copytree(from_path, to_path)?_split_?pipeline = gst.parse_launch(\n    \"\"\"\nv4l2src ! decodebin ! ffmpegcolorspace ! pngenc ! filesink location=\"%s\\\"\n\"\"\"\n     % sys.argv[-1])?_split_?"}
{"nl":"type conversion in python from int to float","code":"data_df['grade'] = data_df['grade'].astype(float).astype(int)","relevant":"mycollapsedstring = ' '.join(mystring.split())\nprint(mycollapsedstring.split(' '))?_split_?def super_shuffle(lst):\n    new_lst = copy.copy(lst)\nrandom.shuffle(new_lst)\nfor old, new in zip(lst, new_lst):\n    if old == new:\n        pass?_split_?def bestFFTlength(n):\n    while max(factorint(n)) >= FACTOR_LIMIT:\n        pass?_split_?"}
{"nl":"Sorting or Finding Max Value by the second element in a nested list. Python","code":"max(alkaline_earth_values, key=lambda x: x[1])","relevant":"self.getData(request)\nreturn server.NOT_DONE_YET?_split_?raise ValueError('lock not acquired')?_split_?hm.HookKeyboard()\nwhile True:\n    pythoncom.PumpMessages()?_split_?"}
{"nl":"How to remove leading and trailing zeros in a string? Python","code":"your_string.strip('0')","relevant":"temp_list = [i for i in squares()]?_split_?print(results)?_split_?self.index += 1?_split_?"}
{"nl":"Generating all unique pair permutations","code":"list(permutations(list(range(9)), 2))","relevant":"ax.w_zaxis.set_major_locator(LinearLocator(10))?_split_?\"\"\"j\"\"\"?_split_?print('warning: partial final block')?_split_?"}
{"nl":"Python regular expression matching a multiline block of text","code":"re.compile('^(.+)(?:\\\\n|\\\\r\\\\n?)((?:(?:\\\\n|\\\\r\\\\n?).+)+)', re.MULTILINE)","relevant":"raise?_split_?df.shape?_split_?for course in Courses.objects.all():\n    html_string += '<option value=\"%s\">%s<\/option>' % (course.pk, course.name)?_split_?"}
{"nl":"Python regular expression matching a multiline block of text","code":"re.compile('^(.+)\\\\n((?:\\\\n.+)+)', re.MULTILINE)","relevant":"raise?_split_?df.shape?_split_?for course in Courses.objects.all():\n    html_string += '<option value=\"%s\">%s<\/option>' % (course.pk, course.name)?_split_?"}
{"nl":"How do you call a python file that requires a command line argument from within another python file?","code":"call(['path\/to\/python', 'test2.py', 'neededArgumetGoHere'])","relevant":"Z.data *= Y[Z.indices]?_split_?ax = scatter_matrix(iris_data, color=colors, alpha=0.6, figsize=(15, 15),\n    diagonal='hist')?_split_?original_string = 'Hello \"XYZ\" this \\'is\\' a test & so on '?_split_?"}
{"nl":"Sort a multidimensional list by a variable number of keys","code":"a.sort(key=operator.itemgetter(2, 3))","relevant":"def __hash__(self):\n    return hash(self.normalized)?_split_?n += 1\nwith open('word%s.png' % n, 'w') as f:\n    pass?_split_?template = PdfFileReader(file('template.pdf', 'rb'))\noutput = PdfFileWriter()\nfor i in range(new.getNumPages()):\n    pass?_split_?"}
{"nl":"Add another tuple to a tuple","code":"final_choices = ((another_choice,) + my_choices)","relevant":"def __init__(self):\n    pass?_split_?import itertools?_split_?push(stack, node)?_split_?"}
{"nl":"Add another tuple to a tuple","code":"final_choices = ((another_choice,) + my_choices)","relevant":"def __init__(self):\n    pass?_split_?import itertools?_split_?push(stack, node)?_split_?"}
{"nl":"Find current directory and file's directory","code":"os.getcwd()","relevant":"data.append(curRow)?_split_?prev = next(itercars)\nfor car in itercars:\n    prev = car?_split_?pipe = r.pipeline()\nfor availability in availabilities:\n    pass?_split_?"}
{"nl":"Find current directory and file's directory","code":"os.path.realpath(__file__)","relevant":"data.append(curRow)?_split_?prev = next(itercars)\nfor car in itercars:\n    prev = car?_split_?pipe = r.pipeline()\nfor availability in availabilities:\n    pass?_split_?"}
{"nl":"Find current directory and file's directory","code":"os.path.dirname(path)","relevant":"data.append(curRow)?_split_?prev = next(itercars)\nfor car in itercars:\n    prev = car?_split_?pipe = r.pipeline()\nfor availability in availabilities:\n    pass?_split_?"}
{"nl":"Find current directory and file's directory","code":"os.path.realpath(path)","relevant":"data.append(curRow)?_split_?prev = next(itercars)\nfor car in itercars:\n    prev = car?_split_?pipe = r.pipeline()\nfor availability in availabilities:\n    pass?_split_?"}
{"nl":"Find current directory","code":"dir_path = os.path.dirname(os.path.realpath(__file__))","relevant":"data.append(curRow)?_split_?prev = next(itercars)\nfor car in itercars:\n    prev = car?_split_?pipe = r.pipeline()\nfor availability in availabilities:\n    pass?_split_?"}
{"nl":"Find current directory","code":"cwd = os.getcwd()","relevant":"data.append(curRow)?_split_?prev = next(itercars)\nfor car in itercars:\n    prev = car?_split_?pipe = r.pipeline()\nfor availability in availabilities:\n    pass?_split_?"}
{"nl":"Find current directory","code":"full_path = os.path.realpath(__file__)","relevant":"data.append(curRow)?_split_?prev = next(itercars)\nfor car in itercars:\n    prev = car?_split_?pipe = r.pipeline()\nfor availability in availabilities:\n    pass?_split_?"}
{"nl":"Sort numpy matrix row values in ascending order","code":"arr[arr[:, (2)].argsort()]","relevant":"return this.point_count?_split_?Atomic.register(str)?_split_?path = '\/path\/to\/database\/file.db'\nconn = sqlite3.connect(path)?_split_?"}
{"nl":"Sort numpy matrix row values in ascending order","code":"numpy.sort(arr, axis=0)","relevant":"return this.point_count?_split_?Atomic.register(str)?_split_?path = '\/path\/to\/database\/file.db'\nconn = sqlite3.connect(path)?_split_?"}
{"nl":"split string on a number of different characters","code":"re.split('[ .]', 'a b.c')","relevant":"ax.plot_wireframe(T, z, abs(U), cstride=1000)?_split_?for p in itertools.permutations(list(range(3))):\n    pass?_split_?for i in reversed(c):\n    p = p * x + i?_split_?"}
{"nl":"copying one file's contents to another in python","code":"shutil.copy('file.txt', 'file2.txt')","relevant":"def doTheyRhyme(word1, word2):\n    pass?_split_?gateway = JavaGateway()\njava_object = gateway.jvm.mypackage.MyClass()\nother_object = java_object.doThat()\nother_object.doThis(1, 'abc')\ngateway.jvm.java.lang.System.out.println('Hello World!')?_split_?def convert_icon(icon, size=None, fmt='JPG'):\n    if size is None:\n        size = icon.availableSizes()[0]\npixmap = icon.pixmap(size)\narray = QtCore.QByteArray()\nbuffer = QtCore.QBuffer(array)\nbuffer.open(QtCore.QIODevice.WriteOnly)\npixmap.save(buffer, fmt)\nbuffer.close()\nreturn array.data()?_split_?"}
{"nl":"What's the best way to generate random strings of a specific length in Python?","code":"print(''.join(choice(ascii_uppercase) for i in range(12)))","relevant":"def add_column(engine, table_name, column):\n    column_name = column.compile(dialect=engine.dialect)\ncolumn_type = column.type.compile(engine.dialect)\nengine.execute('ALTER TABLE %s ADD COLUMN %s %s' % (table_name, column_name,\n    column_type))\ncolumn = Column('new column', String(100), primary_key=True)\nadd_column(engine, table_name, column)?_split_?all_info = subprocess.check_output(command, shell=True).strip()\nfor line in all_info.split('\\n'):\n    if 'model name' in line:\n        return re.sub('.*model name.*:', '', line, 1)\nreturn ''?_split_?print('Result: {}'.format(result))\nresult = ws.recv()\nprint('Result: {}'.format(result))\nws.send(json.dumps([json.dumps({'msg': 'connect', 'version': '1', 'support':\n    ['1', 'pre2', 'pre1']})]))\nresult = ws.recv()\nprint('Result: {}'.format(result))?_split_?"}
{"nl":"How to merge the elements in a list sequentially in python","code":"[''.join(seq) for seq in zip(lst, lst[1:])]","relevant":"import socket?_split_?logging.getLogger('').addHandler(console)\nlogging.info('Jackdaws love my big sphinx of quartz.')?_split_?confirmation_message = _(\n    'ORDER_CREATED: %(PROPERTY_1)s - %(PROPERTY_2)s - %(PROPERTY_3)s - %(PROPERTY_4)s'\n    ) % {'PROPERTY_1': order.lorem, 'PROPERTY_2': order.ipsum, 'PROPERTY_4':\n    order.dolor, 'PROPERTY_5': order.sit}?_split_?"}
{"nl":"python: rename single column header in pandas dataframe","code":"data.rename(columns={'gdp': 'log(gdp)'}, inplace=True)","relevant":"?_split_?print('dayswanted:', dayswanted)?_split_?key = paramiko.RSAKey.from_private_key(StringIO.StringIO(str(os.environ.get\n    ('AWS_PRIVATE_KEY'))))\nssh = paramiko.SSHClient()\nssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\nssh.connect(str(os.environ.get('EC2_PUBLIC_DNS')), username='ec2-user',\n    pkey=key)\nstdin, stdout, stderr = ssh.exec_command('ps')\nfor line in stdout:\n    print('... ' + line.strip('\\n'))\nssh.close()?_split_?"}
{"nl":"Converting html to text with Python","code":"print(soup.get_text())","relevant":"content = driver.page_source\nsoup = bs.BeautifulSoup(content)?_split_?snippets = [str(s) for s in snippets]?_split_?import subprocess\n\ndef play(audio_file_path):\n    subprocess.call(['ffplay', '-nodisp', '-autoexit', audio_file_path])?_split_?"}
{"nl":"python: sort a list of lists by an item in the sublist","code":"sorted(li, key=operator.itemgetter(1), reverse=True)","relevant":"b[1:, 1:] = a?_split_?('\/', 'index', 'Index'),\n('\/downloads\/', 'downloads', 'Downloads'),\n'\/about\/', 'about', 'About'?_split_?print(\"Cron job has run at %s with environment variable '%s'\" % (datetime.\n    datetime.now(), test_environ))?_split_?"}
{"nl":"Pandas - replacing column values","code":"data['sex'].replace([0, 1], ['Female', 'Male'], inplace=True)","relevant":"w = items[oparg]\nPy_INCREF(w)?_split_?LC_ALL = C?_split_?for i in range(count):\n    b[i] += x[i]?_split_?"}
{"nl":"Regex punctuation split [Python]","code":"re.split('\\\\W+', 'Words, words, words.')","relevant":"def f1(x, y):\n    for i in range(min(x, y), max(x, y)):\n        pass\n\ndef f2(x, y):\n    for i in range(*sorted((x, y))):\n        pass\n\ndef f3(x, y):\n    for i in (list(range(x, y)) if x < y else list(range(y, x))):\n        pass\n\ndef f4(x, y):\n    if x > y:\n        pass?_split_?s = pd.Series([1001.0, 1002.0, None])\na = s.loc[s.isnull()].fillna('')?_split_?V = list(range(100000))?_split_?"}
{"nl":"Limit the number of sentences in a string","code":"re.match('(.*?[.?!](?:\\\\s+.*?[.?!]){0,1})', phrase).group(1)","relevant":"class EchoProtocol(protocol.Protocol):\n\n    def connectionMade(self):\n        print('Client Connected Detected!')\ntry:\n    self.transport.setTcpKeepAlive(1)\nexcept AttributeError:\n    pass\n\ndef connectionLost(self, reason):\n    print('Client Connection Lost!')\n\ndef dataReceived(self, data):\n    self.transport.write(data)?_split_?from scipy.spatial import cKDTree as KDTree?_split_?my_alphabet = ['a', 'b', 'c']\n\ndef custom_key(word):\n    numbers = []?_split_?"}
{"nl":"Split string into strings of repeating elements","code":"print([a for a, b in re.findall('((\\\\w)\\\\2*)', s)])","relevant":"groups = (list(g) for k, g in groupby(s))?_split_?cursor.execute('INSERT INTO foo (bar,baz) VALUES (?, ?)', (1, 2))\ncursor.execute('INSERT OR IGNORE INTO foo (bar,baz) VALUES (?, ?)', (1, 3))?_split_?import pandas as pd?_split_?"}
{"nl":"How does this function to remove duplicate characters from a string in python work?","code":"print(' '.join(OrderedDict.fromkeys(s)))","relevant":"\"\"\"Recursively divides list in halves to be sorted\"\"\"?_split_?for i in iter(b):\n    pass?_split_?+cryptv + linebreak + python + vreplace\n+cscope + lispindent - python3 + wildignore?_split_?"}
{"nl":"How does this function to remove duplicate characters from a string in python work?","code":"print(' '.join(set(s)))","relevant":"\"\"\"Recursively divides list in halves to be sorted\"\"\"?_split_?for i in iter(b):\n    pass?_split_?+cryptv + linebreak + python + vreplace\n+cscope + lispindent - python3 + wildignore?_split_?"}
{"nl":"How can i list only the folders in zip archive in Python?","code":"[x for x in file.namelist() if x.endswith('\/')]","relevant":"obj = MyClass.objects.get(pk=id)\ncontext = {'obj': obj}\nhtml = render_to_string(template_name, context)?_split_?app = Flask(__name__)?_split_?foo = Foo()?_split_?"}
{"nl":"How to find the count of a word in a string?","code":"input_string.count('Hello')","relevant":"cv2.imread('abalone.jpg', cv2.IMREAD_COLOR).shape?_split_?['{}{:02}'.format(b_, a_) for a_, b_ in zip(a, b)]?_split_?def __init__(self, parent=None):\n    QtCore.QObject.__init__(self)\nself.temperature = 1?_split_?"}
{"nl":"Python: reduce (list of strings) -> string","code":"print('.'.join([item[0] for item in data]))","relevant":"labels = map(lambda x: str(x), numbers)\nplt.xticks(numbers, labels)\nplt.xlim(0, 24)\nplt.hist(hour_list)\nplt.show()?_split_?def separate_df(t):\n    res = pd.Series()?_split_?import seaborn as sns?_split_?"}
{"nl":"Dumping subprcess output in a file in append mode","code":"fh1.seek(2)","relevant":"x = [[] for i in range(4)]?_split_?for line in infile:\n    pass?_split_?def test():\n    t0 = datetime.datetime.now()?_split_?"}
{"nl":"list of ints into a list of tuples python","code":"print(zip(my_list[0::2], my_list[1::2]))","relevant":"params['entry_bundle'] = self.get_bundle(data)?_split_?['{0:06}'.format(i) for i in range(1000000) if sum(map(int, str(i))) == 20]?_split_?name = request.forms.get('name')\nsurname = request.forms.get('surname')?_split_?"}
{"nl":"list of ints into a list of tuples python","code":"my_new_list = zip(my_list[0::2], my_list[1::2])","relevant":"params['entry_bundle'] = self.get_bundle(data)?_split_?['{0:06}'.format(i) for i in range(1000000) if sum(map(int, str(i))) == 20]?_split_?name = request.forms.get('name')\nsurname = request.forms.get('surname')?_split_?"}
{"nl":"How to fix: \"UnicodeDecodeError: 'ascii' codec can't decode byte\"","code":"sys.setdefaultencoding('utf8')","relevant":"print(self.graph_size)?_split_?file_name = 'parameters.pickled'\nparameters = pickle.load(open(file_name, 'rb'))\nvar1 = parameters['var1']\npath = parameters['path_value']\nprint(('var1 =', var1))\nprint(('path =', path))?_split_?x = Symbol('x')?_split_?"}
{"nl":"Python datetime to string without microsecond component","code":"datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')","relevant":"r = requests.post('http:\/\/httpbin.org\/post', files={'report.xls': open(\n    'report.xls', 'rb')})?_split_?def is_opt_provided(parser, dest):\n    pass?_split_?now_d.callback(buffer)?_split_?"}
{"nl":"How to retrieve only arabic texts from a string using regular expression?","code":"print(re.findall('[\\\\u0600-\\\\u06FF]+', my_string))","relevant":"import numpy as np?_split_?bar = np.array([-5, 1, 2, 3, -4, -2, 0, 1, 0, 0, -1, 1])?_split_?numpy\nimport numpy.random\nnumpy?_split_?"}
{"nl":"How to group DataFrame by a period of time?","code":"df.groupby(df.index.map(lambda t: t.minute))","relevant":"xml = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ISBNdb server_time=\"2005-02-25T23:03:41\">\n <BookList total_results=\"1\" page_size=\"10\" page_number=\"1\" shown_results=\"1\">\n  <BookData book_id=\"somebook\" isbn=\"0123456789\">\n   <Title>Interesting Book<\/Title>\n   <TitleLong>Interesting Book: Read it or else..<\/TitleLong>\n   <AuthorsText>John Doe<\/AuthorsText>\n   <PublisherText>Acme Publishing<\/PublisherText>\n  <\/BookData>\n <\/BookList>\n<\/ISBNdb>\"\"\"\nfor book in tree.iterfind('BookList\/BookData'):\n    print('isbn:', book.attrib['isbn'])\nfor child in book.getchildren():\n    pass?_split_?class PlanetAPI(object):\n\n\n    class v1(object):\n        pass?_split_?instance = kwargs.get('instance')?_split_?"}
{"nl":"Accessing elements of python dictionary","code":"dict['Apple']['American']","relevant":"profile.set_preference('network.proxy.type', 1)?_split_?b = 'a;exx is a buff dud'?_split_?with open(filename, 'r') as f:\n    pass?_split_?"}
{"nl":"How to remove rows with null values from kth column onward in python","code":"df2.dropna(subset=['three', 'four', 'five'], how='all')","relevant":"df\ns = df['Seatblocks'].str.split(' ').apply(Series, 1).stack()?_split_?roundedA = a.replace(hour=0, minute=0, second=0, microsecond=0)?_split_?def foo(self):\n    pass?_split_?"}
{"nl":"How do I insert a list at the front of another list?","code":"a.insert(0, k)","relevant":"with open('file.txt') as f:\n    pass?_split_?def parseD(self, response):\n    pass?_split_?urlpatterns += patterns('yourapp.views', ('^task$', 'task'))\n\ndef task(request):\n    if request.user.is_authenticated():\n        update_definitions_task.delay()\nreturn redirect('\/admin')?_split_?"}
{"nl":"How do I insert a list at the front of another list?","code":"a = a[:n] + k + a[n:]","relevant":"with open('file.txt') as f:\n    pass?_split_?def parseD(self, response):\n    pass?_split_?urlpatterns += patterns('yourapp.views', ('^task$', 'task'))\n\ndef task(request):\n    if request.user.is_authenticated():\n        update_definitions_task.delay()\nreturn redirect('\/admin')?_split_?"}
{"nl":"Pyhon - Best way to find the 1d center of mass in a binary numpy array","code":"np.flatnonzero(x).mean()","relevant":"_('str1 ') + _('str2')?_split_?import datetime\nnow = datetime.datetime.now(created_at)\nfive_minutes_ago = now - datetime.timedelta(minutes=5)\nq = model.all()\nq.filter('create_at >=', five_minutes_ago)?_split_?df.columns = pd.Index(map(lambda x: x.replace(' (cm)', ''), df.columns))?_split_?"}
{"nl":"Keep only date part when using pandas.to_datetime","code":"df['just_date'] = df['dates'].dt.date","relevant":"print('deleted ClassWithTimer!')?_split_?a = [([0] * cols) for _ in [0] * rows]?_split_?import sys?_split_?"}
{"nl":"Removing one list from another","code":"[x for x in a if x not in b]","relevant":"Nodes = [1, 2, 3, 4]?_split_?parser = xml.sax.make_parser()?_split_?def find_question(question_id):\n    pass?_split_?"}
{"nl":"How do I transform a multi-level list into a list of strings in Python?","code":"[''.join(x) for x in a]","relevant":"ax2 = fig.add_axes([left, bottom, width, height])\nax1.plot(list(range(10)), color='red')?_split_?print(('set', self.name))\n\n\nclass Test:\n    attr = Desc()?_split_?def matrixMultiply(m1, m2):\n    prodM = []\nfor i in range(len(m1)):\n    pass?_split_?"}
{"nl":"How do I transform a multi-level list into a list of strings in Python?","code":"list(map(''.join, a))","relevant":"ax2 = fig.add_axes([left, bottom, width, height])\nax1.plot(list(range(10)), color='red')?_split_?print(('set', self.name))\n\n\nclass Test:\n    attr = Desc()?_split_?def matrixMultiply(m1, m2):\n    prodM = []\nfor i in range(len(m1)):\n    pass?_split_?"}
{"nl":"Matching blank lines with regular expressions","code":"re.split('\\n\\\\s*\\n', s)","relevant":"\"\"\"m_int\"\"\"?_split_?words = data.split()\nreturn words?_split_?innerFunc(2)?_split_?"}
{"nl":"Merging items in a list - Python","code":"from functools import reduce\nreduce(lambda x, y: 10 * x + y, [1, 2, 3, 4, 5])","relevant":"class MyUser(User):\n\n    def pretty_username(self):\n        if self.first_name:\n            return self.first_name\nreturn self.username\n\n\nclass Meta:\n    proxy = True\n\ndef get_myuser(self):\n    pass?_split_?plt.subplot(2, 2, i + 1)?_split_?def _start():\n    client = boto3.client('s3')\nresource = boto3.resource('s3')?_split_?"}
{"nl":"Convert float to comma-separated string","code":"\"\"\"{0:,.2f}\"\"\".format(24322.34)","relevant":"app = SampleApp()?_split_?ssh = paramiko.SSHClient()\nssh.load_system_host_keys()\nssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\nssh.connect(host, port=22, username=username, password=password, timeout=3)\ntransport = ssh.get_transport()?_split_?self._window.setWindowTitle('Equation Editor {}'.format(str(current)))?_split_?"}
{"nl":"How to pass dictionary items as function arguments in python?","code":"my_function(**data)","relevant":"diff = False?_split_?main()?_split_?return None?_split_?"}
{"nl":"get line count","code":"sum((1 for line in open('myfile.txt')))","relevant":"import numpy as np\na = np.array([[1, 0, 0], [0, np.nan, 0], [0, 0, 0], [np.nan, np.nan, np.nan\n    ], [2, 3, 4]])\nmask = np.all(np.isnan(a) | np.equal(a, 0), axis=1)?_split_?for i in s:\n    pass?_split_?result = full_union(L)?_split_?"}
{"nl":"get line count","code":"def bufcount(filename):\n    f = open(filename)\n    lines = 0\n    buf_size = (1024 * 1024)\n    read_f = f.read\n    buf = read_f(buf_size)\n    while buf:\n        lines += buf.count('\\n')\n        buf = read_f(buf_size)\n    return lines","relevant":"import numpy as np\na = np.array([[1, 0, 0], [0, np.nan, 0], [0, 0, 0], [np.nan, np.nan, np.nan\n    ], [2, 3, 4]])\nmask = np.all(np.isnan(a) | np.equal(a, 0), axis=1)?_split_?for i in s:\n    pass?_split_?result = full_union(L)?_split_?"}
{"nl":"How to round integers in python","code":"print(round(1123.456789, -1))","relevant":"pool = Pool(processes=1)?_split_?return obj if isinstance(obj, dict) else range(len(obj))?_split_?this_module = sys.modules[__name__]?_split_?"}
{"nl":"Sorting list based on values from another list?","code":"[x for y, x in sorted(zip(Y, X))]","relevant":"x = ['sam', [['Test', [['one', [], []]], [('file.txt', ['id', 1, 0])]], [\n    'Test2', [], [('file2.txt', ['id', 1, 2])]]], []]\nlayer1 = x\nlayer2 = []\nwhile True:\n    for i in layer1:\n        if isinstance(i, list):\n            for j in i:\n                layer2.append(j)\nelse:\n    print(i)\nlayer1[:] = layer2\nlayer2 = []\nif len(layer1) == 0:\n    break?_split_?key = RSA.importKey(open('pubkey.der').read())?_split_?OrderForm(tickets=available_tickets)?_split_?"}
{"nl":"Sorting list based on values from another list?","code":"[x for y, x in sorted(zip(Y, X))]","relevant":"x = ['sam', [['Test', [['one', [], []]], [('file.txt', ['id', 1, 0])]], [\n    'Test2', [], [('file2.txt', ['id', 1, 2])]]], []]\nlayer1 = x\nlayer2 = []\nwhile True:\n    for i in layer1:\n        if isinstance(i, list):\n            for j in i:\n                layer2.append(j)\nelse:\n    print(i)\nlayer1[:] = layer2\nlayer2 = []\nif len(layer1) == 0:\n    break?_split_?key = RSA.importKey(open('pubkey.der').read())?_split_?OrderForm(tickets=available_tickets)?_split_?"}
{"nl":"How to get week number in Python?","code":"datetime.date(2010, 6, 16).isocalendar()[1]","relevant":"print(hash)?_split_?dict.update(dict2)?_split_?df = pd.DataFrame(existing_data, columns=cols)\ndf = pd.DataFrame(existing_data, columns=cols)?_split_?"}
{"nl":"Select multiple ranges of columns in Pandas DataFrame","code":"df.iloc[:, (np.r_[1:10, (15), (17), 50:100])]","relevant":"for count in range(n):\n    pass?_split_?a = (i * 2 for i in range(3))\ntuple(a)\ntuple(a)?_split_?import os.path\n\ndef print_it(x, dir_name, files):\n    print(dir_name)\nprint(files)\nos.path.walk(your_dir, print_it, 0)?_split_?"}
{"nl":"Python Pandas: Multiple aggregations of the same column","code":"df.groupby('dummy').agg({'returns': [np.mean, np.sum]})","relevant":"childItems = items.findall('item')?_split_?from functools import reduce\ncipher.append(previous)\nreturn previous\nreduce(f, message, initialization_value)?_split_?def spider_finished_count():\n    spider_finished_count.count = 0?_split_?"}
{"nl":"convert string to lowercase","code":"s.lower()","relevant":"p = subprocess.Popen(['\/bin\/bash', '-i'], preexec_fn=libc.setsid, stdin=\n    slave, stdout=slave, stderr=slave)\nos.close(slave)?_split_?rest2 = []?_split_?raise TypeError('reload() argument must be a module or have an __module__')?_split_?"}
{"nl":"convert string to lowercase","code":"s.decode('utf-8').lower()","relevant":"p = subprocess.Popen(['\/bin\/bash', '-i'], preexec_fn=libc.setsid, stdin=\n    slave, stdout=slave, stderr=slave)\nos.close(slave)?_split_?rest2 = []?_split_?raise TypeError('reload() argument must be a module or have an __module__')?_split_?"}
{"nl":"How to download a file via FTP with Python ftplib","code":"ftp.retrbinary('RETR %s' % filename, file.write)","relevant":"mailto('test@gmail.com', ' http:\/\/www.url.com')?_split_?string = string.replace(sub, '(' + sub + ')')?_split_?C1['emailAddress'] = self.request.get('emailAddress')?_split_?"}
{"nl":"How do I increase the timeout for imaplib requests?","code":"urlfetch.fetch(url, deadline=10 * 60)","relevant":"linesamples.add(int(4 * i + 0))?_split_?f = lambdify((x, y), eq, 'numpy')?_split_?text = 'int x; int y; float z;'\nast = parser.parse(text, filename='<none>')\nast.show()?_split_?"}
{"nl":"Output first 100 characters in a string","code":"print(my_string[0:100])","relevant":"def handler(signal, frame):\n    print('Canceled!')\nsys.exit(1)?_split_?(0, 1)[1]?_split_?return True?_split_?"}
{"nl":"matplotlib Legend Markers Only Once","code":"legend(numpoints=1)","relevant":"ptdBase = cndBase.cursor()\nquery_str = 'SELECT* FROM nameTabla;'\nrows = ptdBase.execute(query_str)?_split_?with Image(file=fg) as fg_img:\n    pass?_split_?@register.filter\ndef mygetattr(obj, name):\n    return getattr(obj, name)?_split_?"}
{"nl":"Python - How to calculate equal parts of two dictionaries?","code":"dict((x, set(y) & set(d1.get(x, ()))) for x, y in d2.items())","relevant":"np.take(bins, np.digitize(a, bins, right=True))?_split_?z = np.array((old_val, new_val)).T?_split_?df.groupby(['id', 'date1']).apply(lambda x: (x['date1'] == x['date2']).sum())?_split_?"}
{"nl":"load csv into 2D matrix with numpy for plotting","code":"numpy.loadtxt(open('test.csv', 'rb'), delimiter=',', skiprows=1)","relevant":"import datetime?_split_?from operator import itemgetter?_split_?source\nsource._get_numeric_data()?_split_?"}
{"nl":"Django database query: How to filter objects by date range?","code":"Sample.objects.filter(date__range=['2011-01-01', '2011-01-31'])","relevant":"img = cv2.imread('lineDetection.jpg')\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)?_split_?indices = list(range(len(iterators) - 1))?_split_?logx_bar = ravel(log(data)).mean()?_split_?"}
{"nl":"Django database query: How to filter objects by date range?","code":"Sample.objects.filter(date__year='2011', date__month='01')","relevant":"img = cv2.imread('lineDetection.jpg')\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)?_split_?indices = list(range(len(iterators) - 1))?_split_?logx_bar = ravel(log(data)).mean()?_split_?"}
{"nl":"syntax for creating a dictionary into another dictionary in python","code":"d['dict3'] = {'spam': 5, 'ham': 6}","relevant":"from operator import attrgetter?_split_?if b is None:\n    b = 100?_split_?i = argmin(abs(x - item))?_split_?"}
{"nl":"How to apply numpy.linalg.norm to each row of a matrix?","code":"numpy.apply_along_axis(numpy.linalg.norm, 1, a)","relevant":"table = QtGui.QTableWidget(1, 1)\ncombobox = QtGui.QComboBox()\ncombobox.addItem('Combobox item')?_split_?return [(x, y) for x, y in g2 if x >= 0 and x < N and y >= 0 and y < N]?_split_?print(args)?_split_?"}
{"nl":"How to merge two Python dictionaries in a single expression?","code":"dict((k, v) for d in dicts for k, v in list(d.items()))","relevant":"par, res = queue.get(block=True)?_split_?plt.show()?_split_?class TestWarnings(unittest.TestCase):\n    pass?_split_?"}
{"nl":"Python. Convert escaped utf string to utf-string","code":"print('your string'.decode('string_escape'))","relevant":"out.append(d)?_split_?print(('Iteration', i))?_split_?pyqtRemoveInputHook()?_split_?"}
{"nl":"Counting the number of True Booleans in a Python List","code":"sum([True, True, False, False, False, True])","relevant":"parts = cython - py?_split_?print('mult    ' + str(timeit.timeit('A += B * D', setup, number=3)))\nprint('index   ' + str(timeit.timeit('A[C] += D[C]', setup, number=3)))\nsetup3 = setup + \"\"\" \nA = np.ma.array(np.ones((dim, dim)), mask = np.array(B - 1, dtype = np.bool))\n\"\"\"\nprint('ma      ' + str(timeit.timeit('A += D', setup3, number=3)))?_split_?dis.dis(compile('\"X is {}\".format(x)', '', 'exec'))?_split_?"}
{"nl":"Matplotlib.animation: how to remove white margin","code":"fig.set_size_inches(w, h, forward=True)","relevant":"def main():\n    infile = open('putNamesHere.txt', 'r')\noutfile = open('getFromHere.txt', 'w')\nfor line in infile:\n    line = line.upper()?_split_?def chstate(self):\n    pass?_split_?db.session.commit()\nmodels_committed.connect(on_models_committed)?_split_?"}
{"nl":"python string format() with dict with integer keys","code":"'hello there %(5)s' % {'5': 'you'}","relevant":"import os?_split_?device_props = dbus.Interface(device_obj, dbus.PROPERTIES_IFACE)?_split_?def START(message, address=None, subdomain=None, host=None):\n    pass?_split_?"}
{"nl":"Python - converting a string of numbers into a list of int","code":"map(int, example_string.split(','))","relevant":"@dbus.service.method('fm.last.api.account', out_signature='s',\n    async_callbacks=('callback', 'errback'))\ndef getUsername(self, callback, errback):\n    pass?_split_?dic[i] = 'xxx'?_split_?for x in range(1, rows):\n    for y in range(1, cols):\n        s.append(im[x - 1:x + 2, y - 1:y + 2])\nreturn s?_split_?"}
{"nl":"Python - converting a string of numbers into a list of int","code":"[int(s) for s in example_string.split(',')]","relevant":"@dbus.service.method('fm.last.api.account', out_signature='s',\n    async_callbacks=('callback', 'errback'))\ndef getUsername(self, callback, errback):\n    pass?_split_?dic[i] = 'xxx'?_split_?for x in range(1, rows):\n    for y in range(1, cols):\n        s.append(im[x - 1:x + 2, y - 1:y + 2])\nreturn s?_split_?"}
{"nl":"Python list of tuples to list of int","code":"x = [i[0] for i in x]","relevant":"df['column'] = df['column'].astype('str')?_split_?alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\ndef enbase(x):\n    n = len(alphabet)\nif x < n:\n    return alphabet[x]\nreturn enbase(x \/ n) + alphabet[x % n]\n\ndef debase(x):\n    n = len(alphabet)\nresult = 0\nfor i, c in enumerate(reversed(x)):\n    result += alphabet.index(c) * n ** i\nreturn result\n\ndef average(a, b):\n    a = debase(a)\nb = debase(b)\nreturn enbase((a + b) \/ 2)\nprint(average('a', 'z'))\nprint(average('aa', 'zz'))\nprint(average('cat', 'doggie'))\nprint(average('google', 'microsoft'))\nprint(average('microsoft', 'google'))?_split_?Point = namedtuple('Point', ['x', 'y'])\nPoint3D = namedtuple('Point3D', Point._fields + ('z',))\nBook = namedtuple('Book', ['id', 'title', 'authors'])?_split_?"}
{"nl":"Python list of tuples to list of int","code":"y = map(operator.itemgetter(0), x)","relevant":"df['column'] = df['column'].astype('str')?_split_?alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\ndef enbase(x):\n    n = len(alphabet)\nif x < n:\n    return alphabet[x]\nreturn enbase(x \/ n) + alphabet[x % n]\n\ndef debase(x):\n    n = len(alphabet)\nresult = 0\nfor i, c in enumerate(reversed(x)):\n    result += alphabet.index(c) * n ** i\nreturn result\n\ndef average(a, b):\n    a = debase(a)\nb = debase(b)\nreturn enbase((a + b) \/ 2)\nprint(average('a', 'z'))\nprint(average('aa', 'zz'))\nprint(average('cat', 'doggie'))\nprint(average('google', 'microsoft'))\nprint(average('microsoft', 'google'))?_split_?Point = namedtuple('Point', ['x', 'y'])\nPoint3D = namedtuple('Point3D', Point._fields + ('z',))\nBook = namedtuple('Book', ['id', 'title', 'authors'])?_split_?"}
{"nl":"Python list of tuples to list of int","code":"y = [i[0] for i in x]","relevant":"df['column'] = df['column'].astype('str')?_split_?alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\ndef enbase(x):\n    n = len(alphabet)\nif x < n:\n    return alphabet[x]\nreturn enbase(x \/ n) + alphabet[x % n]\n\ndef debase(x):\n    n = len(alphabet)\nresult = 0\nfor i, c in enumerate(reversed(x)):\n    result += alphabet.index(c) * n ** i\nreturn result\n\ndef average(a, b):\n    a = debase(a)\nb = debase(b)\nreturn enbase((a + b) \/ 2)\nprint(average('a', 'z'))\nprint(average('aa', 'zz'))\nprint(average('cat', 'doggie'))\nprint(average('google', 'microsoft'))\nprint(average('microsoft', 'google'))?_split_?Point = namedtuple('Point', ['x', 'y'])\nPoint3D = namedtuple('Point3D', Point._fields + ('z',))\nBook = namedtuple('Book', ['id', 'title', 'authors'])?_split_?"}
{"nl":"How do I extract all the values of a specific key from a list of dictionaries?","code":"results = [item['value'] for item in test_data]","relevant":"df = pd.DataFrame({'a': [1, 5, 5], 'b': [np.NaN, 7200.0, 580.0], 'c': [3, \n    20, 20]})\nprint((df, '\\n\\n'))\ndf['b'] = np.nan_to_num(df['b']).astype(int)\nprint(df)?_split_?session_factory = sessionmaker(bind=some_engine)?_split_?import this?_split_?"}
{"nl":"ISO Time (ISO 8601) in Python","code":"datetime.datetime.now().isoformat()","relevant":"from google.appengine.api import urlfetch\nurlfetch.set_default_fetch_deadline(60)?_split_?plt.yticks([0, 1, 2], ['A', 'B', 'C'])?_split_?cursor = db[collection].find({'querySummary.qid': qid})?_split_?"}
{"nl":"ISO Time (ISO 8601) in Python","code":"datetime.datetime.utcnow().isoformat()","relevant":"from google.appengine.api import urlfetch\nurlfetch.set_default_fetch_deadline(60)?_split_?plt.yticks([0, 1, 2], ['A', 'B', 'C'])?_split_?cursor = db[collection].find({'querySummary.qid': qid})?_split_?"}
{"nl":"Merging data frame columns of strings into one single column in Pandas","code":"df.apply(' '.join, axis=0)","relevant":"def func(x, y):\n    return cos(x) + cos(y)?_split_?str1 = 'A m * B s \/ (A m + C m)'\nstr2 = 'C m * B s \/ (C m + A m)'?_split_?from time import gmtime, strftime?_split_?"}
{"nl":"pandas Subtract Dataframe with a row from another dataframe","code":"pd.DataFrame(df.values - df2.values, columns=df.columns)","relevant":"if 'list' in request.POST:\n    return redirect('list_url')?_split_?import numpy as np?_split_?for line in open('utf8ienc.dtx'):\n    m = re.match('%.*\\\\DeclareUnicodeCharacter\\\\{(\\\\w+)\\\\}\\\\{(.*)\\\\}', line)\nif m:\n    codepoint, latex = m.groups()?_split_?"}
{"nl":"How can I detect DOS line breaks in a file?","code":"print(open('myfile.txt', 'U').read())","relevant":"res = sqlparse.parse('select * from \"someschema\".\"mytable\" where id = 1')\nres?_split_?286331153, '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', '\"', 858993459, 68, 68, 68, 68, 68, 68, 68, 85, 102, 30583?_split_?def decode_json(self, js):\n    pass?_split_?"}
{"nl":"Python - read text file with weird utf-16 format","code":"print(line.decode('utf-16-le').split())","relevant":"for each in range(0, 12):\n    pass?_split_?logging.disable(logging.CRITICAL)?_split_?self.device = self?_split_?"}
{"nl":"Python - read text file with weird utf-16 format","code":"file = io.open('data.txt', 'r', encoding='utf-16-le')","relevant":"for each in range(0, 12):\n    pass?_split_?logging.disable(logging.CRITICAL)?_split_?self.device = self?_split_?"}
{"nl":"Finding common rows (intersection) in two Pandas dataframes","code":"s1 = pd.merge(df1, df2, how='inner', on=['user_id'])","relevant":"for x in array:\n    stdout.write(x)\nstdout.flush()\nsleep(time)?_split_?from clint.textui import colored, puts?_split_?window.show()?_split_?"}
{"nl":"How can I check a Python unicode string to see that it *actually* is proper Unicode?","code":"foo.decode('utf8').encode('utf8')","relevant":"plt.show()?_split_?def __add__(self, oth):\n    return point(self.x + oth.x, self.y + oth.y)?_split_?def create_plot(swapp_axis):\n    pass?_split_?"}
{"nl":"Numpy array dimensions","code":"a.shape","relevant":"break?_split_?ObjectId('4d5b91e558839f06a8000001')?_split_?msg.attach(img)?_split_?"}
{"nl":"Numpy array dimensions","code":"N.shape(a)","relevant":"break?_split_?ObjectId('4d5b91e558839f06a8000001')?_split_?msg.attach(img)?_split_?"}
{"nl":"Numpy array dimensions","code":"N.shape(a)","relevant":"break?_split_?ObjectId('4d5b91e558839f06a8000001')?_split_?msg.attach(img)?_split_?"}
{"nl":"Numpy array dimensions","code":"a.shape","relevant":"break?_split_?ObjectId('4d5b91e558839f06a8000001')?_split_?msg.attach(img)?_split_?"}
{"nl":"How to search a list of tuples in Python","code":"[i for i, v in enumerate(L) if v[0] == 53]","relevant":"plt.setp(ax1.get_yticklines()[1::2], visible=False)?_split_?self.lb2.insert('end', 'item %s' % i)?_split_?logging.basicConfig(filename=LOG, filemode='w', level=logging.DEBUG)\nconsole = logging.StreamHandler()\nconsole.setLevel(logging.ERROR)\nlogging.getLogger('').addHandler(console)?_split_?"}
{"nl":"convert a string of bytes into an int (python)","code":"struct.unpack('<L', 'y\\xcc\\xa6\\xbb')[0]","relevant":"doc = ET.fromstring(content)?_split_?2, 4, 6?_split_?number = lines[0][-3:-1]?_split_?"}
{"nl":"How to get the values from a NumPy array using multiple indices","code":"arr[[0, 1, 1], [1, 0, 2]]","relevant":"__table_args__ = {'schema': 'events', 'autoload': True}?_split_?url = 'https:\/\/example.com\/{0}'.format(id)?_split_?import Tcl?_split_?"}
{"nl":"what's a good way to combinate through a set?","code":"list(powerset('abcd'))","relevant":"with open('test.txt', 'r') as fh:\n    output = []\nfor ii, line in enumerate(fh):\n    if ii not in (1, 3):\n        output.append(line)\nwith open('test.txt', 'w') as fh:\n    fh.writelines(output)?_split_?login(request, user)?_split_?re.findall('[a-zA-Z]+(?![a-zA-Z(])', 'movav(x\/2, 2)*movsum(y, 3)*z')?_split_?"}
{"nl":"Converting from a string to boolean in Python?","code":"s in ['true', '1', 't', 'y', 'yes', 'yeah', 'yup', 'certainly', 'uh-huh']","relevant":"from functools import reduce\nresult = reduce(lambda s, x: s.union(x), sequences, set())?_split_?msg['From'] = MY_EMAIL?_split_?if line.startswith('DOCTYPE'):\n    continue?_split_?"}
{"nl":"How do I url encode in Python?","code":"urllib.parse.quote('http:\/\/spam.com\/go\/')","relevant":"key = tuple(the_dict.items())?_split_?other_values = [4, 8, 15, 16, 23, 42]?_split_?return key.lower()?_split_?"}
{"nl":"How can I get the output of a matplotlib plot as an SVG?","code":"plt.savefig('test.svg')","relevant":"plt.savefig('\/z\/' + title + '.png')?_split_?time.strftime('%Y-%m-%d %H:%M:%S')?_split_?return p?_split_?"}
{"nl":"Counting array elements in Python","code":"len(myArray)","relevant":"class Migration(SchemaMigration):\n\n    def forwards(self, orm):\n        db.rename_table('myapp_foo', 'myapp_bar')\nif not db.dry_run:\n    orm['contenttypes.contenttype'].objects.filter(app_label='myapp', model\n        ='foo').update(model='bar')\n\ndef backwards(self, orm):\n    db.rename_table('myapp_bar', 'myapp_foo')\nif not db.dry_run:\n    orm['contenttypes.contenttype'].objects.filter(app_label='myapp', model\n        ='bar').update(model='foo')?_split_?print('Result 1')?_split_?concat_clip = mp.concatenate_videoclips(clips, method='compose')\nconcat_clip.write_videofile('texts.mp4')?_split_?"}
{"nl":"Python Embedding in C++ : ImportError: No module named pyfunction","code":"sys.path.insert(0, '.\/path\/to\/your\/modules\/')","relevant":"pool_results = p.map(process, np.array_split(big_df, 8))\np.close()\np.join()\nresults = []\nfor result in pool_results:\n    results.extend(result)?_split_?for i in myl:\n    if newl.count(i) != 2:\n        pass?_split_?print(mysql_time_epoch)?_split_?"}
{"nl":"How to plot with x-axis at the top of the figure?","code":"ax.xaxis.set_ticks_position('top')","relevant":"def json(self):\n    pass?_split_?from bokeh.plotting import *\nfrom numpy import pi\npercents = [0, 0.3, 0.4, 0.6, 0.9, 1]\nstarts = [(p * 2 * pi) for p in percents[:-1]]\nends = [(p * 2 * pi) for p in percents[1:]]\ncolors = ['red', 'green', 'blue', 'orange', 'yellow']\np = figure(x_range=(-1, 1), y_range=(-1, 1))\np.wedge(x=0, y=0, radius=1, start_angle=starts, end_angle=ends, color=colors)\noutput_file('pie.html')\nshow(p)?_split_?assert 1?_split_?"}
{"nl":"Python - Bulk Select then Insert from one DB to another","code":"cursor.execute('INSERT OR REPLACE INTO master.table1 SELECT * FROM table1')","relevant":"app_label = 'sidebar'?_split_?M = L * (I * (1 + I) ** n \/ ((1 + I) ** n - 1))\nM = None\nL = None\nI = None\nn = None\nL = input('Enter loan amount: ')\nL = float(L)\nprint(L)\nI = input('Enter interest rate: ')\nI = float(I) \/ 100 \/ 12\nprint(I)\nn = input('Enter number of payments: ')\nn = float(n)\nprint(n)\nM = L * (I * (1 + I) ** n \/ ((1 + I) ** n - 1))\nM = str(M)\nprint('\\n')\nprint('Monthly payment is ' + M)?_split_?send_by = obj.supporter,\ntext = '%s has commented on %s' % (obj.supporter, obj.project)?_split_?"}
{"nl":"How do I use a regular expression to match a name?","code":"re.match('[a-zA-Z][\\\\w-]*\\\\Z', 'A\\n')","relevant":"model = ExtraTreesClassifier(n_estimators=10000, n_jobs=-1, random_state=0)?_split_?datetime(3000, 1, 1) < present?_split_?print('Finding camera')?_split_?"}
{"nl":"How do I use a regular expression to match a name?","code":"re.match('[a-zA-Z][\\\\w-]*$', '!A_B')","relevant":"model = ExtraTreesClassifier(n_estimators=10000, n_jobs=-1, random_state=0)?_split_?datetime(3000, 1, 1) < present?_split_?print('Finding camera')?_split_?"}
{"nl":"Convert hex string to int","code":"int('deadbeef', 16)","relevant":"for row in DictReader(f, quoting=csv.QUOTE_NONE):\n    yield {k: parse_value(k, v) for k, v in row.items()}?_split_?mylist = ['10', '12', '14']?_split_?sum_prods = arr1.dot(arr1_weights)?_split_?"}
{"nl":"Convert hex string to int","code":"int('a', 16)","relevant":"for row in DictReader(f, quoting=csv.QUOTE_NONE):\n    yield {k: parse_value(k, v) for k, v in row.items()}?_split_?mylist = ['10', '12', '14']?_split_?sum_prods = arr1.dot(arr1_weights)?_split_?"}
{"nl":"Convert hex string to int","code":"int('0xa', 16)","relevant":"for row in DictReader(f, quoting=csv.QUOTE_NONE):\n    yield {k: parse_value(k, v) for k, v in row.items()}?_split_?mylist = ['10', '12', '14']?_split_?sum_prods = arr1.dot(arr1_weights)?_split_?"}
{"nl":"Convert hex string to int","code":"int(s, 16)","relevant":"for row in DictReader(f, quoting=csv.QUOTE_NONE):\n    yield {k: parse_value(k, v) for k, v in row.items()}?_split_?mylist = ['10', '12', '14']?_split_?sum_prods = arr1.dot(arr1_weights)?_split_?"}
{"nl":"Convert hex string to int","code":"int(hexString, 16)","relevant":"for row in DictReader(f, quoting=csv.QUOTE_NONE):\n    yield {k: parse_value(k, v) for k, v in row.items()}?_split_?mylist = ['10', '12', '14']?_split_?sum_prods = arr1.dot(arr1_weights)?_split_?"}
{"nl":"How to print variables without spaces between values","code":"print('Value is \"' + str(value) + '\"')","relevant":"def __getattr__(self, name):\n    pass?_split_?mqttStream = MQTTUtils.createStream(ssc, 'tcp:\/\/localhost:1883', 'hello')?_split_?print(convert_excel_time(0.4006944444444))\nprint(convert_excel_time(1.4006944444444))?_split_?"}
{"nl":"How to print variables without spaces between values","code":"print('Value is \"{}\"'.format(value))","relevant":"def __getattr__(self, name):\n    pass?_split_?mqttStream = MQTTUtils.createStream(ssc, 'tcp:\/\/localhost:1883', 'hello')?_split_?print(convert_excel_time(0.4006944444444))\nprint(convert_excel_time(1.4006944444444))?_split_?"}
{"nl":"How do I convert an array to string using the jinja template engine?","code":"{{tags | join(' ')}}","relevant":"import re?_split_?def add(item, s=default_s):\n    s.append(item)?_split_?class B:\n\n    def bar(self):\n        return a.A()?_split_?"}
{"nl":"get a list of locally installed Python modules","code":"help('modules')","relevant":"win_top = win_geo.top()\nwin_bottom = win_geo.bottom()?_split_?a = dict((hash_counting_int(x), []) for x in range(10))\n[x.count for x in list(a.keys())]\nb = dict(a)\n[x.count for x in list(a.keys())]\nfor n, v in enumerate(b.values()):\n    v.append(n)\n[x.count for x in list(a.keys())]\nb?_split_?import os?_split_?"}
{"nl":"Slicing a multidimensional list","code":"[[[x[0]] for x in listD[i]] for i in range(len(listD))]","relevant":"\"\"\"Constructor\"\"\"?_split_?class Person(db.Model):\n    mother = db.SelfReferenceProperty(collection_name='mother_set')\nfather = db.SelfReferenceProperty(collection_name='father_set')?_split_?binascii.hexlify(bytearray(array_alpha))?_split_?"}
{"nl":"Sort a string in lexicographic order python","code":"sorted(s, key=str.upper)","relevant":"for item in grp:\n    pass?_split_?res = elt.find(get_tag_with_ns(tag_name, ns=ns))?_split_?def bfs(G, s):\n    pass?_split_?"}
{"nl":"Sort a string in lexicographic order python","code":"sorted(sorted(s), key=str.upper)","relevant":"for item in grp:\n    pass?_split_?res = elt.find(get_tag_with_ns(tag_name, ns=ns))?_split_?def bfs(G, s):\n    pass?_split_?"}
{"nl":"Sort a string in lexicographic order python","code":"sorted(s, key=str.lower)","relevant":"for item in grp:\n    pass?_split_?res = elt.find(get_tag_with_ns(tag_name, ns=ns))?_split_?def bfs(G, s):\n    pass?_split_?"}
{"nl":"Compare Python Pandas DataFrames for matching rows","code":"pd.merge(df1, df2, on=['A', 'B', 'C', 'D'], how='inner')","relevant":"return os.path.join(sys._MEIPASS)?_split_?host = 'host.domain.com'\nport = '1434'?_split_?if key not in list(form.fields.keys()):\n    pass?_split_?"}
{"nl":"get keys correspond to a value in dictionary","code":"dict((v, k) for k, v in map.items())","relevant":"s = '(0, 0), (0, 2), ...'?_split_?import psycopg2\nconnection = psycopg2.connect(database='db', user='user')\ncur = connection.cursor()?_split_?_\na = 2\n_?_split_?"}
{"nl":"How to decode unicode raw literals to readable string?","code":"s.decode('unicode_escape')","relevant":"def foo():\n    a = 5\n\ndef bar():\n    pass?_split_?\"\"\"PROJCS[\"NA Lambert Azimuthal Equal Area\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"degree\",0.0174532925199433]],PROJECTION[\"Lambert_Azimuthal_Equal_Area\"],PARAMETER[\"false_easting\",0.0],PARAMETER[\"false_northing\",0.0],PARAMETER[\"longitude_of_center\",-100.0],PARAMETER[\"latitude_of_center\",45.0],UNIT[\"meter\",1.0]]\"\"\"?_split_?img = Image.open(filename)\nif img.mode == 'RGBA' or 'transparency' in img.info:\n    pass?_split_?"}
{"nl":"What is the easiest way to convert list with str into list with int?","code":"[int(i) for i in str_list]","relevant":"class PersonFactory(factory.alchemy.SQLAlchemyFactory):\n\n\n    class Meta:\n        model = Person\naddress_1 = factory.RelatedFactory(AddressFactory, 'person')\naddress_2 = factory.RelatedFactory(AddressFactory, 'person')?_split_?print(tfidf.todense())?_split_?s = eval(input())?_split_?"}
{"nl":"What is the easiest way to convert list with str into list with int?","code":"map(int, ['1', '2', '3'])","relevant":"class PersonFactory(factory.alchemy.SQLAlchemyFactory):\n\n\n    class Meta:\n        model = Person\naddress_1 = factory.RelatedFactory(AddressFactory, 'person')\naddress_2 = factory.RelatedFactory(AddressFactory, 'person')?_split_?print(tfidf.todense())?_split_?s = eval(input())?_split_?"}
{"nl":"What is the easiest way to convert list with str into list with int?","code":"list(map(int, ['1', '2', '3']))","relevant":"class PersonFactory(factory.alchemy.SQLAlchemyFactory):\n\n\n    class Meta:\n        model = Person\naddress_1 = factory.RelatedFactory(AddressFactory, 'person')\naddress_2 = factory.RelatedFactory(AddressFactory, 'person')?_split_?print(tfidf.todense())?_split_?s = eval(input())?_split_?"}
{"nl":"Python BeautifulSoup Extract specific URLs","code":"soup.find_all('a', href=re.compile('http:\/\/www\\\\.iwashere\\\\.com\/'))","relevant":"print(df1)?_split_?verbose = False\npointlist = point.PointList()?_split_?def foo():\n    options = {'DATABASES': {'default': {'ENGINE':\n        'django.db.backends.sqlite3'}}}\nfor k, v in list(options.items()):\n    exec ('%s = v' % k)\nprint(DATABASES)\nfoo()?_split_?"}
{"nl":"Python BeautifulSoup Extract specific URLs","code":"soup.find_all('a', href=re.compile('^(?!(?:[a-zA-Z][a-zA-Z0-9+.-]*:|\/\/))'))","relevant":"print(df1)?_split_?verbose = False\npointlist = point.PointList()?_split_?def foo():\n    options = {'DATABASES': {'default': {'ENGINE':\n        'django.db.backends.sqlite3'}}}\nfor k, v in list(options.items()):\n    exec ('%s = v' % k)\nprint(DATABASES)\nfoo()?_split_?"}
{"nl":"Python: How can I execute a jar file through a python script","code":"subprocess.call(['java', '-jar', 'Blender.jar'])","relevant":"def cleanString(self, s):\n    pass?_split_?a?_split_?import re\nimport ast\npixels = ['(112, 37, 137, 255)', '(129, 39, 145, 255)', '(125, 036, 138, 255)']\n[ast.literal_eval(re.sub('\\\\b0+', '', pixel)) for pixel in pixels]?_split_?"}
{"nl":"How can I insert NULL data into MySQL database with Python?","code":"cursor.execute('INSERT INTO table (`column1`) VALUES (%s)', (value,))","relevant":"@classmethod\ndef increment(cls):\n    cls.num += 1?_split_?locale.locale_alias?_split_?yacc.errok()?_split_?"}
{"nl":"remove a substring from the end of a string","code":"if url.endswith('.com'):\n    url = url[:(-4)]","relevant":"result = []?_split_?return endpoint(*args, **kwargs)?_split_?fig = plt.figure()?_split_?"}
{"nl":"remove a substring from the end of a string","code":"url = re.sub('\\\\.com$', '', url)","relevant":"result = []?_split_?return endpoint(*args, **kwargs)?_split_?fig = plt.figure()?_split_?"}
{"nl":"remove a substring from the end of a string","code":"print(url.replace('.com', ''))","relevant":"result = []?_split_?return endpoint(*args, **kwargs)?_split_?fig = plt.figure()?_split_?"}
{"nl":"remove a substring from the end of a string","code":"if (not text.endswith(suffix)):\n    return text\nreturn text[:(len(text) - len(suffix))]","relevant":"result = []?_split_?return endpoint(*args, **kwargs)?_split_?fig = plt.figure()?_split_?"}
{"nl":"Python - print tuple elements with no brackets","code":"print(', ,'.join([str(i[0]) for i in mytuple]))","relevant":"if key in line and f in line:\n    pass?_split_?session.commit()?_split_?from datetime import timedelta?_split_?"}
{"nl":"Clamping floating numbers in Python?","code":"max(min(my_value, max_value), min_value)","relevant":"df = pd.DataFrame(np.random.randn(len(idx), 7), index=idx, columns=('I',\n    'II', 'III', 'IV', 'V', 'VI', 'VII'))?_split_?def get_context():\n    context = {'var1': 'value 1', 'var2': 'value 2', 'var3': 'value 3'}\nreturn context\n\n@pgt.route('\/myview')\ndef myview():\n    return render_template('mytemplate.html', **get_context())?_split_?f.seek(0)\nf.tell()\nf.read()?_split_?"}
{"nl":"Splitting a string into words and punctuation","code":"re.findall('\\\\w+|[^\\\\w\\\\s]', text, re.UNICODE)","relevant":"import scipy.spatial as sp, scipy.cluster.hierarchy as hc?_split_?from collections import defaultdict?_split_?import datetime as dt?_split_?"}
{"nl":"How to execute raw SQL in SQLAlchemy-flask app","code":"result = db.engine.execute('<sql here>')","relevant":"import csv\n\n\nclass MyDownloadHandler(webapp2.RequestHandler):\n\n    def get(self):\n        q = ModelName.gql(\"WHERE foo = 'bar' ORDER BY date ASC\")\nreqs = q.fetch(1000)\nself.response.headers['Content-Type'] = 'text\/csv'\nself.response.headers['Content-Disposition'\n    ] = 'attachment; filename=studenttransreqs.csv'\nwriter = csv.writer(self.response.out)?_split_?cmd = \"\"\"line %d\n      line %d\n      line %d\"\"\" % (1, 2, 3)?_split_?with open('fileName', 'r') as f:\n    for line in f:\n        pass?_split_?"}
{"nl":"Is there a method that tells my program to quit?","code":"sys.exit(0)","relevant":"count_2['d'] = 2?_split_?x = scipy.linspace(0, 10, 11)?_split_?pb.save('path.png')?_split_?"}
{"nl":"Python - find digits in a string","code":"\"\"\"\"\"\".join(c for c in my_string if c.isdigit())","relevant":"list(df.T.to_dict().values())?_split_?now += timedelta(minutes=1)?_split_?y = 2012\nl = ['Item_has_was_updated_May_2010', 'Item_updated_Apr_2011',\n    'Item_got_updated_Sept_2011']\nr = []\nfor s in l:\n    t = s.split('_')\nr.append('_'.join(t[:-2]) + '_%s_%s' % (m, y))?_split_?"}
{"nl":"python split string based on regular expression","code":"re.split(' +', str1)","relevant":"words = ['fan', 'ban', 'fbn', 'ana', 'and', 'ann']\n\ndef isChildOf(a, b):\n    return sum(map(lambda xy: xy[0] == xy[1], zip(a, b))) >= 2\nresult = defaultdict(set)\nfor word in words:\n    result[word] = {x for x in words if isChildOf(word, x) and x != word}\nfor word in words:\n    pass?_split_?grammar.check_coverage('please turn off the lights'.split())?_split_?test_d['2'] = 2\nwhile not test_d['QUIT']:\n    print('test_f', test_d['QUIT'])\ntest_d['ctr'] += 1?_split_?"}
{"nl":"python split string based on regular expression","code":"re.findall('\\\\S+', str1)","relevant":"words = ['fan', 'ban', 'fbn', 'ana', 'and', 'ann']\n\ndef isChildOf(a, b):\n    return sum(map(lambda xy: xy[0] == xy[1], zip(a, b))) >= 2\nresult = defaultdict(set)\nfor word in words:\n    result[word] = {x for x in words if isChildOf(word, x) and x != word}\nfor word in words:\n    pass?_split_?grammar.check_coverage('please turn off the lights'.split())?_split_?test_d['2'] = 2\nwhile not test_d['QUIT']:\n    print('test_f', test_d['QUIT'])\ntest_d['ctr'] += 1?_split_?"}
{"nl":"Python: How to get attribute of attribute of an object with getattr?","code":"getattr(getattr(myobject, 'id', None), 'number', None)","relevant":"data = open('file').read()?_split_?for x in range(10):\n    alist2.append(alist[x][:])?_split_?dbf1 = Dbf()?_split_?"}
{"nl":"Convert generator object to a dictionary","code":"{i: (i * 2) for i in range(10)}","relevant":"subprocess.Popen(SCRIPT % filename, shell=True)?_split_?50 + sum(x * next(cyc) for x in lis[0])?_split_?return lambda *a: func(*(a + args))?_split_?"}
{"nl":"Convert generator object to a dictionary","code":"dict((i, i * 2) for i in range(10))","relevant":"subprocess.Popen(SCRIPT % filename, shell=True)?_split_?50 + sum(x * next(cyc) for x in lis[0])?_split_?return lambda *a: func(*(a + args))?_split_?"}
{"nl":"How do I tell matplotlib that I am done with a plot?","code":"plt.cla()","relevant":"import numpy?_split_?a\na[0] = a?_split_?res = [k for k in lst if 'ab' in k]\nres?_split_?"}
{"nl":"Python Convert String Literal to Float","code":"total = sum(float(item) for item in s.split(','))","relevant":"self.lbl = Label(self.root, text='')?_split_?line.set_xdata([1, 2, 3])\nline.set_ydata([1, 2, 3])\npylab.draw()\ntime.sleep(6)\nline1, = pylab.plot([4], [5], 'g*', markersize=8)\npylab.draw()\nfor i in range(10):\n    line.set_xdata([1, 2, 3])\nline.set_ydata([1, 2, 3])\npylab.draw()\ntime.sleep(1)\nprint('done up there')\nline2, = pylab.plot(3, 2, 'b^', markersize=6)\npylab.draw()\ntime.sleep(20)?_split_?img = cv2.imread('5DnwY.jpg', 0)?_split_?"}
{"nl":"Python ASCII to binary","code":"bin(ord('P'))","relevant":"results.extend(tmp_results)?_split_?u = User(request.POST)?_split_?class sdist(_sdist):\n    pass?_split_?"}
{"nl":"Get a string after a specific substring","code":"print(my_string.split(', ', 1)[1])","relevant":"i = a[0]\ni()\ni()()()()?_split_?authorize_url = twitter.get_authorize_url(request_token)?_split_?txt = Text(str, x=0, y=0, width=None, height=None)?_split_?"}
{"nl":"Python Accessing Nested JSON Data","code":"print(data['places'][0]['post code'])","relevant":"index\na = pd.Series([1, 4, 5, 7, 8], index=index)?_split_?{'key11': 11, 'key12': 12}?_split_?if stdout is None:\n    stdout = StringIO.StringIO()\nsys.stdout = stdout\nyield stdout\nsys.stdout = old\ncode = \"\"\"\ni = [0,1,2]\nfor j in i :\n    print j\n\"\"\"\nwith stdoutIO() as s:\n    exec(code)\nprint('out:', s.getvalue())?_split_?"}
{"nl":"Python RegEx using re.sub with multiple patterns","code":"word = re.sub('([aeiou]):(([aeiou][^aeiou]*){3})$', '\\\\1\\\\2', word)","relevant":"def generateRandomString(size):\n    return ''.join(random.choice(string.ascii_letters) for i in range(size))?_split_?if a == 2:\n    print('a is 2')\nif b == 3:\n    print('b is 3')\n\"\"\"a is 2\"\"\"?_split_?\"\"\"Prevent accessing inherited attributes\"\"\"?_split_?"}
{"nl":"How to extract data from JSON Object in Python?","code":"json.loads('{\"foo\": 42, \"bar\": \"baz\"}')['bar']","relevant":"print(list(range(0, (m + 1) * n, n))[1:])?_split_?fid = Column(Integer, ForeignKey('Price_History.id'))?_split_?L = [list(range(5)) for each in range(5)]?_split_?"}
{"nl":"Convert JSON array to Python list","code":"data = json.loads(array)","relevant":"list(range(101, 6284)) + [8001, 8003, 8010] + list(range(10000, 12322))?_split_?output_array = np.array(data[output])?_split_?from django.template import TemplateDoesNotExist?_split_?"}
{"nl":"Convert JSON array to Python list","code":"data = json.loads(array)","relevant":"list(range(101, 6284)) + [8001, 8003, 8010] + list(range(10000, 12322))?_split_?output_array = np.array(data[output])?_split_?from django.template import TemplateDoesNotExist?_split_?"}
{"nl":"Parsing a tweet to extract hashtags into an array in Python","code":"re.findall('#(\\\\w+)', 'http:\/\/example.org\/#comments')","relevant":"return rec(tf2, rest_paths[1:])?_split_?import fileinput\nfor line in fileinput.input(['filename'], inplace=1, backup='.bak'):\n    print(processed(line))\nfileinput.close()?_split_?class A:\n\n    def a(self):\n        print(\"Instance's class: {}, actual class where this line is coded: {}\".format(\n            self.__class__, __class__))?_split_?"}
{"nl":"Python - Fastest way to check if a string contains specific characters in any of the items in a list","code":"any(e in lestring for e in lelist)","relevant":"\"\"\" \"\"\".join([k[0] for k in list(ast.literal_eval(\n    \"{('players',): 24, ('year',): 28, ('money',): 19, ('ipod',): 36, ('case',): 23, ('mini',): 46}\"\n    ).keys())])?_split_?return data[abs(data - np.mean(data)) < m * np.std(data)]?_split_?__tablename__ = 'users'?_split_?"}
{"nl":"How to plot two columns of a pandas data frame using points?","code":"df.plot(x='col_name_1', y='col_name_2', style='o')","relevant":"print(int('119'))?_split_?f.headers.headers\nf.read()?_split_?c = [(lambda i=i: i) for i in range(10)]?_split_?"}
{"nl":"Parsing HTML","code":"parsed_html = BeautifulSoup(html)\nprint(parsed_html.body.find('div', attrs={'class': 'container', }).text)","relevant":"try:\n    return seq + t(val)\nexcept TypeError:\n    return seq + t([val])?_split_?ys = [np.array([i, i + 1, i, i + 1]) for i in range(N)]?_split_?import os\nfrom subprocess import Popen, PIPE\nos.system('mkdir c:\\\\temp\\\\vhd')\np = Popen(['diskpart'], stdin=PIPE, stdout=PIPE, stderr=PIPE)\np.stdin.write(\n    'create vdisk file=c:\\\\temp\\\\vhd\\\\test.vhd maximum=2000 type=expandable\\n')\np.stdin.write('attach vdisk\\n')\np.stdin.write('create partition primary size=10\\n')\np.stdin.write('format fs=ntfs quick\\n')\np.stdin.write('assign letter=r\\n')\np.stdin.write('exit\\n')\nresults, errors = p.communicate()\nos.system('fsutil file createnew r:\\\\dummy.txt 6553600')?_split_?"}
{"nl":"Parsing HTML","code":"page = urllib.request.urlopen('http:\/\/www.google.com\/')\nsoup = BeautifulSoup(page)","relevant":"try:\n    return seq + t(val)\nexcept TypeError:\n    return seq + t([val])?_split_?ys = [np.array([i, i + 1, i, i + 1]) for i in range(N)]?_split_?import os\nfrom subprocess import Popen, PIPE\nos.system('mkdir c:\\\\temp\\\\vhd')\np = Popen(['diskpart'], stdin=PIPE, stdout=PIPE, stderr=PIPE)\np.stdin.write(\n    'create vdisk file=c:\\\\temp\\\\vhd\\\\test.vhd maximum=2000 type=expandable\\n')\np.stdin.write('attach vdisk\\n')\np.stdin.write('create partition primary size=10\\n')\np.stdin.write('format fs=ntfs quick\\n')\np.stdin.write('assign letter=r\\n')\np.stdin.write('exit\\n')\nresults, errors = p.communicate()\nos.system('fsutil file createnew r:\\\\dummy.txt 6553600')?_split_?"}
{"nl":"change figure size and figure format in matplotlib","code":"plt.figure(figsize=(3, 4))","relevant":"for p in ([someprogram] + processes):\n    p.wait()?_split_?print('No executable')?_split_?def process_response(self, request, response):\n    pass?_split_?"}
{"nl":"Best way to strip punctuation from a string in Python","code":"s.translate(None, string.punctuation)","relevant":"udpcounter += 1?_split_?if not s.login('localhost', 'myusername', 'mypassword'):\n    pass?_split_?{0, 0, 0, 0, 0, 0, 0},?_split_?"}
{"nl":"Django urlsafe base64 decoding with decryption","code":"base64.urlsafe_b64decode(uenc.encode('ascii'))","relevant":"return r.group(0) if r else '&'\ny\ny.sort(key=lambda l: grp('%\\\\w', l))\ny?_split_?p.join()\nprint('joined')?_split_?return retval.value?_split_?"}
{"nl":"Get the number of all keys in a dictionary of dictionaries in Python","code":"len(dict_test) + sum(len(v) for v in dict_test.values())","relevant":"class TimeStampedModel(models.Model):\n    \"\"\"\n    An abstract base class model that provides self-updating\n    ``created`` and ``modified`` fields.\n    \"\"\"\ncreated = AutoCreatedField(_('created'))\nmodified = AutoLastModifiedField(_('modified'))\n\n\nclass Meta:\n    abstract = True\n\n\nclass Location(TimeStampedModel):\n    \"\"\"\n    Add additional fields\n    \"\"\"?_split_?def add(self, letters, n=-1, index=0):\n    if n < 0:\n        n = len(letters)\nif index >= n:\n    return\nletter = letters[index]\nif letter in self.children:\n    child = self.children[letter]\nelse:\n    child = Node(letter, index == n - 1)\nself.children[letter] = child\nchild.add(letters, n, index + 1)\n\ndef load_dictionary(path):\n    result = Node()\nfor line in open(path, 'r'):\n    word = line.strip().lower()\nresult.add(word)\nreturn result\nwords = load_dictionary('dictionary.txt')?_split_?from gi.repository import GdkPixbuf?_split_?"}
{"nl":"Python convert decimal to hex","code":"hex(d).split('x')[1]","relevant":"date, price, itemnumber = zip(*[(d['Date'], d['price'], d['itemnumber']) for\n    d in list_of_dicts])?_split_?if not '.\/' in sys.path[:1]:\n    sys.path.insert(0, '.\/')?_split_?logger.error('An error message')?_split_?"}
{"nl":"converting integer to list in python","code":"list(str(123))","relevant":"def process(df):\n    return df.loc[df.name].tail(2)?_split_?in_data = numpy.array([[25.89125824, 25.88840675], [25.90930748, \n    25.90640068]], dtype=numpy.float32)\nprint(map_coordinates(in_data.T, [[0.0], [0.125]], order=1, mode='nearest'))?_split_?p = lambda x, y: x + y?_split_?"}
{"nl":"converting integer to list in python","code":"[int(x) for x in str(num)]","relevant":"def process(df):\n    return df.loc[df.name].tail(2)?_split_?in_data = numpy.array([[25.89125824, 25.88840675], [25.90930748, \n    25.90640068]], dtype=numpy.float32)\nprint(map_coordinates(in_data.T, [[0.0], [0.125]], order=1, mode='nearest'))?_split_?p = lambda x, y: x + y?_split_?"}
{"nl":"Python Mechanize select a form with no name","code":"br.select_form(nr=0)","relevant":"print('Hello')\nsys.stdout.close()?_split_?list2 = list(ratings['Joe'].values())?_split_?words = re.findall('\\\\w+', open('hamlet.txt').read().lower())?_split_?"}
{"nl":"Python load json file with UTF-8 BOM header","code":"json.load(codecs.open('sample.json', 'r', 'utf-8-sig'))","relevant":"ax = fig.add_subplot(111)?_split_?for m in G.nodes():\n    for n in G[m].keys():\n        pass?_split_?print(docopt(__doc__))?_split_?"}
{"nl":"Python load json file with UTF-8 BOM header","code":"json.loads(open('sample.json').read().decode('utf-8-sig'))","relevant":"ax = fig.add_subplot(111)?_split_?for m in G.nodes():\n    for n in G[m].keys():\n        pass?_split_?print(docopt(__doc__))?_split_?"}
{"nl":"Issue sending email with python?","code":"server = smtplib.SMTP('smtp.gmail.com', 587)","relevant":"data['s'].dtype?_split_?server = SimpleXMLRPCServer(('localhost', 1234))\nserver.register_function(output)\nserver.serve_forever()?_split_?ui.write(e.EV_REL, e.REL_Y, 10)?_split_?"}
{"nl":"Reversing bits of Python integer","code":"int('{:08b}'.format(n)[::-1], 2)","relevant":"n = 2\n[x for x in range(m) for y in range(n)]?_split_?value_min = float(m.group('min'))?_split_?import numpy as np\n\ndef f(x):\n    return x * x + 3 * x - 2 if x > 0 else x * 5 + 8\nf = np.vectorize(f)\nresult_array = f(A)?_split_?"}
{"nl":"Pandas DataFrame Add column to index without resetting","code":"df.set_index(['d'], append=True)","relevant":"range_expr = from_expr + till_expr?_split_?print('MemoryLoad: %d%%' % stat.dwMemoryLoad)?_split_?for j in range(i + 1, len(t) + 1):\n    yield t[:j] + (t[i],) + t[j:]?_split_?"}
{"nl":"Iterating over dictionaries using for loops","code":"for (key, value) in d.items():\n    pass","relevant":"food2['apple'] = ['fruit', 'round']?_split_?A = np.array(ss.zscore(A))?_split_?for match in matches:\n    pass?_split_?"}
{"nl":"Iterating over dictionaries using for loops","code":"for (key, value) in list(d.items()):\n    pass","relevant":"food2['apple'] = ['fruit', 'round']?_split_?A = np.array(ss.zscore(A))?_split_?for match in matches:\n    pass?_split_?"}
{"nl":"Iterating over dictionaries using for loops","code":"for (letter, number) in list(d.items()):\n    pass","relevant":"food2['apple'] = ['fruit', 'round']?_split_?A = np.array(ss.zscore(A))?_split_?for match in matches:\n    pass?_split_?"}
{"nl":"Iterating over dictionaries using for loops","code":"for (k, v) in list(d.items()):\n    pass","relevant":"food2['apple'] = ['fruit', 'round']?_split_?A = np.array(ss.zscore(A))?_split_?for match in matches:\n    pass?_split_?"}
{"nl":"Iterating over dictionaries using for loops","code":"list(d.items())","relevant":"food2['apple'] = ['fruit', 'round']?_split_?A = np.array(ss.zscore(A))?_split_?for match in matches:\n    pass?_split_?"}
{"nl":"Iterating over dictionaries using for loops","code":"list(d.items())","relevant":"food2['apple'] = ['fruit', 'round']?_split_?A = np.array(ss.zscore(A))?_split_?for match in matches:\n    pass?_split_?"}
{"nl":"Iterating over dictionaries using for loops","code":"for (k, v) in list(d.items()):\n    pass","relevant":"food2['apple'] = ['fruit', 'round']?_split_?A = np.array(ss.zscore(A))?_split_?for match in matches:\n    pass?_split_?"}
{"nl":"Iterating over dictionaries using for loops","code":"for (letter, number) in list(d.items()):\n    pass","relevant":"food2['apple'] = ['fruit', 'round']?_split_?A = np.array(ss.zscore(A))?_split_?for match in matches:\n    pass?_split_?"}
{"nl":"Iterating over dictionaries using for loops","code":"for (letter, number) in list(d.items()):\n    pass","relevant":"food2['apple'] = ['fruit', 'round']?_split_?A = np.array(ss.zscore(A))?_split_?for match in matches:\n    pass?_split_?"}
{"nl":"How do I implement a null coalescing operator in SQLAlchemy?","code":"session.query(Task).filter(Task.time_spent > timedelta(hours=3)).all()","relevant":"while True:\n    start = time.time()?_split_?figure()?_split_?gzip.GzipFile('output file name', 'wb')?_split_?"}
{"nl":"How do I compile a Visual Studio project from the command-line?","code":"os.system('msbuild project.sln \/p:Configuration=Debug')","relevant":"part_struct = part.read(8)\nr = struct.unpack('<d', part_struct)?_split_?diff = np.sum((points - median) ** 2, axis=-1)?_split_?isnull = np.where(df.Killed.isnull(), 'isnull', 'notnull')?_split_?"}
{"nl":"Get max key in dictionary","code":"max(list(MyCount.keys()), key=int)","relevant":"df.columns = df.columns.strftime('%Y-%m-%d')?_split_?\"\"\"This is the docstring\n\"\"\"\nimport docopt?_split_?loop = asyncio.get_event_loop()\nreq = loop.run_in_executor(None, do_req)?_split_?"}
{"nl":"Can I use an alias to execute a program from a python script","code":"os.system('source .bashrc; shopt -s expand_aliases; nuke -x scriptPath')","relevant":"fileObject = FileObject(os.path.join(MEDIA_ROOT, f.Audio.path))?_split_?self._append_to_buf(contents)?_split_?pattern = re.compile('(\\\\W)')?_split_?"}
{"nl":"How to get a function name as a string in Python?","code":"my_function.__name__","relevant":"model = MCMC(timesteps)?_split_?while num != 0:\n    bit = num % 2\nbinary.insert(0, bit)\nnum = num \/ 2?_split_?import numpy as np\nmyarray = np.random.random((5, 10, 30))\nyy = slice(1, 5)\nxx = slice(20, 30)\nmymean = [np.mean(myarray[t, yy, xx]) for t in np.arange(5)]?_split_?"}
{"nl":"How to get a function name as a string in Python?","code":"my_function.__name__","relevant":"model = MCMC(timesteps)?_split_?while num != 0:\n    bit = num % 2\nbinary.insert(0, bit)\nnum = num \/ 2?_split_?import numpy as np\nmyarray = np.random.random((5, 10, 30))\nyy = slice(1, 5)\nxx = slice(20, 30)\nmymean = [np.mean(myarray[t, yy, xx]) for t in np.arange(5)]?_split_?"}
{"nl":"How to check if all values in the columns of a numpy matrix are the same?","code":"np.all(a == a[(0), :], axis=0)","relevant":"test7 = '\"'?_split_?object.__set__(self, instance, value)?_split_?a = temporary_expr_result\nb = temporary_expr_result?_split_?"}
{"nl":"Sorting a list of tuples by the addition of second and third element of the tuple","code":"sorted(a, key=lambda x: (sum(x[1:3]), x[0]))","relevant":"for x in range(2, max_len):\n    if seq[0:x] == seq[x:2 * x]:\n        return x\nreturn guess\nlist_a = [111, 0, 3, 1, 111, 0, 3, 1, 111, 0, 3, 1]\nlist_b = [67, 4, 67, 4, 67, 4, 67, 4, 2, 9, 0]\nlist_c = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 23, \n    18, 10]\nprint(guess_seq_len(list_a))\nprint(guess_seq_len(list_b))\nprint(guess_seq_len(list_c))\nprint(guess_seq_len(list(range(500))))?_split_?df.loc[(idx[:, ('a', 'b')]), :] = df_.values?_split_?getRelativeTimeStr('07\/10\/06 1823')\ngetRelativeTimeStr('07\/10\/06 1823', accuracy=2)?_split_?"}
{"nl":"Sorting a list of tuples by the addition of second and third element of the tuple","code":"sorted(a, key=lambda x: (sum(x[1:3]), x[0]), reverse=True)","relevant":"for x in range(2, max_len):\n    if seq[0:x] == seq[x:2 * x]:\n        return x\nreturn guess\nlist_a = [111, 0, 3, 1, 111, 0, 3, 1, 111, 0, 3, 1]\nlist_b = [67, 4, 67, 4, 67, 4, 67, 4, 2, 9, 0]\nlist_c = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 23, \n    18, 10]\nprint(guess_seq_len(list_a))\nprint(guess_seq_len(list_b))\nprint(guess_seq_len(list_c))\nprint(guess_seq_len(list(range(500))))?_split_?df.loc[(idx[:, ('a', 'b')]), :] = df_.values?_split_?getRelativeTimeStr('07\/10\/06 1823')\ngetRelativeTimeStr('07\/10\/06 1823', accuracy=2)?_split_?"}
{"nl":"Sorting a list of tuples by the addition of second and third element of the tuple","code":"sorted(lst, key=lambda x: (sum(x[1:]), x[0]))","relevant":"for x in range(2, max_len):\n    if seq[0:x] == seq[x:2 * x]:\n        return x\nreturn guess\nlist_a = [111, 0, 3, 1, 111, 0, 3, 1, 111, 0, 3, 1]\nlist_b = [67, 4, 67, 4, 67, 4, 67, 4, 2, 9, 0]\nlist_c = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 23, \n    18, 10]\nprint(guess_seq_len(list_a))\nprint(guess_seq_len(list_b))\nprint(guess_seq_len(list_c))\nprint(guess_seq_len(list(range(500))))?_split_?df.loc[(idx[:, ('a', 'b')]), :] = df_.values?_split_?getRelativeTimeStr('07\/10\/06 1823')\ngetRelativeTimeStr('07\/10\/06 1823', accuracy=2)?_split_?"}
{"nl":"Sorting a list of tuples by the addition of second and third element of the tuple","code":"sorted(lst, key=lambda x: (sum(x[1:]), x[0]), reverse=True)","relevant":"for x in range(2, max_len):\n    if seq[0:x] == seq[x:2 * x]:\n        return x\nreturn guess\nlist_a = [111, 0, 3, 1, 111, 0, 3, 1, 111, 0, 3, 1]\nlist_b = [67, 4, 67, 4, 67, 4, 67, 4, 2, 9, 0]\nlist_c = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 23, \n    18, 10]\nprint(guess_seq_len(list_a))\nprint(guess_seq_len(list_b))\nprint(guess_seq_len(list_c))\nprint(guess_seq_len(list(range(500))))?_split_?df.loc[(idx[:, ('a', 'b')]), :] = df_.values?_split_?getRelativeTimeStr('07\/10\/06 1823')\ngetRelativeTimeStr('07\/10\/06 1823', accuracy=2)?_split_?"}
{"nl":"Add headers in a Flask app with unicode_literals","code":"response.headers['WWW-Authenticate'] = 'Basic realm=\"test\"'","relevant":"self._write(file, self._root, encoding, {})?_split_?a = 5?_split_?return s\nif __name__ == '__main__':\n    doctest.testmod()?_split_?"}
{"nl":"In Django, how do I clear a sessionkey?","code":"del request.session['mykey']","relevant":"my_set = {'foo', 'bar', 'baz', 'baz', 'foo'}?_split_?sDBFName = 'Input.dbf'?_split_?open('someUnicodeFilename\\u03bb')?_split_?"}
{"nl":"Python date string to date object","code":"datetime.datetime.strptime('24052010', '%d%m%Y').date()","relevant":"P().pprint(list(range(3)))\nP().pprint('x' * 1000)?_split_?for p in pairs:\n    pass?_split_?import os\nos.environ['DJANGO_SETTINGS_MODULE'] = 'settings'?_split_?"}
{"nl":"Replace non-ASCII characters with a single space","code":"re.sub('[^\\\\x00-\\\\x7F]+', ' ', text)","relevant":"with_statement.getOptionalRelease()\nwith_statement.getMandatoryRelease()?_split_?print(wn.synset('main_course.n.01').lemma_names)?_split_?return i * i?_split_?"}
{"nl":"List of lists into numpy array","code":"numpy.array([[1, 2], [3, 4]])","relevant":"self.q = queue.Queue()?_split_?parent.remove(r)?_split_?def handle(self, *args, **options):\n    pass?_split_?"}
{"nl":"What does a for loop within a list do in Python?","code":"myList = [i for i in range(10)]","relevant":"g2 = ([s] * 3 for s in string.ascii_uppercase)\ng = (x + y for x, y in zip(g1, g2))?_split_?a = [[(0) for _ in range(ROWS)] for _ in range(COLUMNS)]?_split_?def baz():\n    print(x)\nprint(locals())\nbaz()\nfoo()?_split_?"}
{"nl":"using regular expression to split string in python","code":"[m[0] for m in re.compile('((.+?)\\\\2+)').findall('44442(2)2(2)44')]","relevant":"button.pack()\nself.root.mainloop()?_split_?e = tf.matmul(c, d, name='example')\nwith tf.Session() as sess:\n    test = sess.run(e)\nprint(e.name)\ntest = tf.get_default_graph().get_tensor_by_name('example:0')\nprint(test)?_split_?print('%02s: %s' % (x, y))?_split_?"}
{"nl":"using regular expression to split string in python","code":"[i[0] for i in re.findall('((\\\\d)(?:[()]*\\\\2*[()]*)*)', s)]","relevant":"button.pack()\nself.root.mainloop()?_split_?e = tf.matmul(c, d, name='example')\nwith tf.Session() as sess:\n    test = sess.run(e)\nprint(e.name)\ntest = tf.get_default_graph().get_tensor_by_name('example:0')\nprint(test)?_split_?print('%02s: %s' % (x, y))?_split_?"}
{"nl":"How to remove the space between subplots in matplotlib.pyplot?","code":"fig.subplots_adjust(wspace=0, hspace=0)","relevant":"data = {'field1': 'value1', 'field2': 'value2'}?_split_?define = '\\\\(\\\\?&(\\\\w+)\\\\)'\nwhile re.search(define, regex):\n    regex = re.sub(define, lambda m: defines[m.group(1)], regex)?_split_?for i in range(1, 10):\n    print(i, subsets(i))\nfor i in range(1, 20):\n    pass?_split_?"}
{"nl":"How to reverse tuples in Python?","code":"x[::-1]","relevant":"def from_id(cls, id_number, db_connection):\n    filters = [['id', 'is', id_number]]?_split_?data = [1, 2, 3]\nwith open('data.json', 'w') as jsonfile:\n    pass?_split_?return data\ntable = read_table('data.txt')\npots = sorted(table)\nalphabet = '+-?'\nfor num in range(2, len(table) + 1):\n    for group in itertools.combinations(pots, num):\n        patterns = zip(*[table[p] for p in group])\ncounts = collections.Counter(patterns)\nfor poss in itertools.product(alphabet, repeat=num):\n    print(', '.join(group) + ':', end=' ')\nprint(''.join(poss), counts[poss])?_split_?"}
{"nl":"Python JSON encoding","code":"json.dumps({'apple': 'cat', 'banana': 'dog', 'pear': 'fish'})","relevant":"path.append(k.id_or_name())?_split_?new_d = []\nfor x in d:\n    if x not in new_d:\n        pass?_split_?print('*** Logged in successfully')?_split_?"}
{"nl":"Writing List of Strings to Excel CSV File in Python","code":"csvwriter.writerow(row)","relevant":"sys.stdout.write(c)?_split_?total = cov.report()?_split_?Column('created_on', DateTime, default=datetime.datetime.now)\nColumn('last_updated', DateTime, onupdate=datetime.datetime.now)?_split_?"}
{"nl":"How to convert datetime to string in python in django","code":"{{(item.date | date): 'Y M d'}}","relevant":"def set_a(self, new_a):\n    self.a = new_a?_split_?'http:\/\/www.lkqpickyourpart.com\/DesktopModules\/pyp_vehicleInventory\/getVehicleInventory.aspx?store=224&page=0&filter=toyota&sp=&cl=&carbuyYardCode=1224&pageSize=1000&language=en-US'?_split_?RawPurchaseAmount?_split_?"}
{"nl":"Non-consuming regular expression split in Python","code":"re.split('(?<=[\\\\.\\\\?!]) ', text)","relevant":"num = -2 ** 63\nbin = struct.pack('q', num)?_split_?var = '\/some\/file\/path\/'?_split_?row = cursor.fetchmany(size=1)?_split_?"}
{"nl":"UTF in Python Regex","code":"re.compile('\\xe2\\x80\\x93')","relevant":"c = 0?_split_?date_range = pd.date_range(date, freq='60min', periods=24)?_split_?df.drop_duplicates()?_split_?"}
{"nl":"declare an array","code":"variable = []","relevant":"struct.pack('B', 1)?_split_?print(dom.find('Body'))?_split_?x\ny\nnp.median(x, axis=0)\nnp.ma.median(y, axis=0).filled(0)?_split_?"}
{"nl":"declare an array","code":"intarray = array('i')","relevant":"struct.pack('B', 1)?_split_?print(dom.find('Body'))?_split_?x\ny\nnp.median(x, axis=0)\nnp.ma.median(y, axis=0).filled(0)?_split_?"}
{"nl":"How to reverse the elements in a sublist?","code":"[sublist[::-1] for sublist in to_reverse[::-1]]","relevant":"from cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import ec\nbackend = default_backend()\nkey = ec.generate_private_key(ec.SECP256R1(), backend)\nserialized_key = key.private_bytes(serialization.Encoding.PEM,\n    serialization.PrivateFormat.TraditionalOpenSSL, serialization.\n    BestAvailableEncryption('my_great_password'))?_split_?instance.work.save()?_split_?import re\nregex = re.compile('th.s')\nl = ['this', 'is', 'just', 'a', 'test']\nmatches = [string for string in l if re.match(regex, string)]?_split_?"}
{"nl":"Replace all non-alphanumeric characters in a string","code":"re.sub('[^0-9a-zA-Z]+', '*', 'h^&ell`.,|o w]{+orld')","relevant":"wait = WebDriverWait(driver, 10)?_split_?set([2]) in a\na.remove(set([2]))?_split_?y_data = x_data.dot(w).reshape((-1, 1))\nX = tf.placeholder(tf.float32, shape=[None, d], name='X')?_split_?"}
{"nl":"Python: unescape special characters without splitting data","code":"\"\"\"\"\"\".join(['I ', '<', '3s U ', '&', ' you luvz me'])","relevant":"ren = Gtk.CellRendererText()?_split_?self.vmax = im.max()?_split_?time.tzset()?_split_?"}
{"nl":"How can I disable logging while running unit tests in Python Django?","code":"logging.disable(logging.CRITICAL)","relevant":"real_command = command?_split_?def my_remove(lst, what):\n    pass?_split_?mylist = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nnewlist = mylist[n:]\nprint(newlist)?_split_?"}
{"nl":"Adding url to mysql row in python","code":"cursor.execute('INSERT INTO index(url) VALUES(%s)', (url,))","relevant":"funcs = []?_split_?return open(filename, mode, 0)?_split_?button.clicked.connect(my_function)?_split_?"}
{"nl":"Convert column of date objects in Pandas DataFrame to strings","code":"df['DateStr'] = df['DateObj'].dt.strftime('%d%m%Y')","relevant":"index = find(np.diff(crossing))\nf0 = round(len(index) * RATE \/ (2 * np.prod(len(signal))))\nreturn f0\np = pyaudio.PyAudio()\nstream = p.open(format=FORMAT, channels=CHANNELS, rate=RATE, input=True,\n    output=True, frames_per_buffer=chunk)\nfor i in range(0, RATE \/ chunk * RECORD_SECONDS):\n    data = stream.read(chunk)\nFrequency = Pitch(data)\nprint('%f Frequency' % Frequency)?_split_?out += str[bit].lower()?_split_?from subprocess import Popen, PIPE, STDOUT?_split_?"}
{"nl":"python regex get first part of an email address","code":"s.split('@')[0]","relevant":"employee_id?_split_?import sys?_split_?break?_split_?"}
{"nl":"Python Pandas: drop rows of a timeserie based on time range","code":"df.query('index < @start_remove or index > @end_remove')","relevant":"unrank(list('ABCDEFGHJKLMNPQRSTUVWXYZ23456789'), 6, 128347238)['G', 'L',\n    'E', 'H', 'T', 'R']?_split_?def sub_sub_function(X):\n    pass?_split_?()()()?_split_?"}
{"nl":"Python Pandas: drop rows of a timeserie based on time range","code":"df.loc[(df.index < start_remove) | (df.index > end_remove)]","relevant":"unrank(list('ABCDEFGHJKLMNPQRSTUVWXYZ23456789'), 6, 128347238)['G', 'L',\n    'E', 'H', 'T', 'R']?_split_?def sub_sub_function(X):\n    pass?_split_?()()()?_split_?"}
{"nl":"How to count the Nan values in the column in Panda Data frame","code":"df.isnull().sum()","relevant":"import atexit\n\ndef exit_handler():\n    pass?_split_?def popRandom(self):\n    item = self.getRandom()\nself.discard(item)\nreturn item?_split_?file.close()?_split_?"}
{"nl":"Turn Pandas Multi-Index into column","code":"df.reset_index(inplace=True)","relevant":"import random\nrandom.choice([p for p in itertools.product(x, repeat=2)])\n6, 3?_split_?t = pandas.tslib.Timestamp.now()?_split_?dt = np.dtype([('a', 'i4'), ('b', 'i4'), ('c', 'i4'), ('d', 'f4'), ('e',\n    'i4'), ('f', 'i4', (256,))])\ndata = np.fromfile(file, dtype=dt)?_split_?"}
{"nl":"python getting a list of value from list of dict","code":"[x['value'] for x in list_of_dicts]","relevant":"def incremental_range(start, stop, step, inc):\n    value = start\nwhile value < stop:\n    yield value\nvalue += step\nstep += inc\nlist(incremental_range(0, 20, 1, 1))\n[0, 1, 3, 6, 10, 15]?_split_?def f():\n    global x\nx = 1\nf()\nprint(x)?_split_?fields = 'id', 'name', 'join_date'?_split_?"}
{"nl":"python getting a list of value from list of dict","code":"[d['value'] for d in l]","relevant":"def incremental_range(start, stop, step, inc):\n    value = start\nwhile value < stop:\n    yield value\nvalue += step\nstep += inc\nlist(incremental_range(0, 20, 1, 1))\n[0, 1, 3, 6, 10, 15]?_split_?def f():\n    global x\nx = 1\nf()\nprint(x)?_split_?fields = 'id', 'name', 'join_date'?_split_?"}
{"nl":"python getting a list of value from list of dict","code":"[d['value'] for d in l if 'value' in d]","relevant":"def incremental_range(start, stop, step, inc):\n    value = start\nwhile value < stop:\n    yield value\nvalue += step\nstep += inc\nlist(incremental_range(0, 20, 1, 1))\n[0, 1, 3, 6, 10, 15]?_split_?def f():\n    global x\nx = 1\nf()\nprint(x)?_split_?fields = 'id', 'name', 'join_date'?_split_?"}
{"nl":"Converting NumPy array into Python List structure?","code":"np.array([[1, 2, 3], [4, 5, 6]]).tolist()","relevant":"import datetime?_split_?from urllib.parse import urlencode\ndata = urlencode(dict(username='testuser', password=md5encode('testpassword')))?_split_?d.as_tuple().exponent\nd = decimal.Decimal('56.43256436')?_split_?"}
{"nl":"Converting string to tuple and adding to tuple","code":"ast.literal_eval('(1,2,3,4)')","relevant":"from django.conf import settings\nfrom django.conf.urls.static import static\nurlpatterns = patterns('') + static(settings.MEDIA_URL, document_root=\n    settings.MEDIA_ROOT)?_split_?import Folder1.facebook as pyfacebook?_split_?pygame.quit()?_split_?"}
{"nl":"How to keep a list of lists sorted as it is created","code":"dataList.sort(key=lambda x: x[1])","relevant":"results = serializers.SerializerMethodField()?_split_?auth.refresh_token()?_split_?exit?_split_?"}
{"nl":"Python: Uniqueness for list of lists","code":"list(map(list, set(map(lambda i: tuple(i), testdata))))","relevant":"players = collections.defaultdict(list)?_split_?pd.concat([s, s.apply(lambda x: pd.Series(x).value_counts()).fillna(0)], axis=1\n    )?_split_?database = result.path[1:]?_split_?"}
{"nl":"Python: Uniqueness for list of lists","code":"[list(i) for i in set(tuple(i) for i in testdata)]","relevant":"players = collections.defaultdict(list)?_split_?pd.concat([s, s.apply(lambda x: pd.Series(x).value_counts()).fillna(0)], axis=1\n    )?_split_?database = result.path[1:]?_split_?"}
{"nl":"In Django, how do I check if a user is in a certain group?","code":"return user.groups.filter(name='Member').exists()","relevant":"re.compile('[a-zA-Z\\xd1\\xf1]+', re.DEBUG)?_split_?master.grid_rowconfigure(0, weight=0)?_split_?mapping = {}?_split_?"}
{"nl":"In Django, how do I check if a user is in a certain group?","code":"return user.groups.filter(name__in=['group1', 'group2']).exists()","relevant":"re.compile('[a-zA-Z\\xd1\\xf1]+', re.DEBUG)?_split_?master.grid_rowconfigure(0, weight=0)?_split_?mapping = {}?_split_?"}
{"nl":"Dynamically changing log level in python without restarting the application","code":"logging.getLogger().setLevel(logging.DEBUG)","relevant":"numpy.array([network.activate(x) for x, _ in train])?_split_?class DebuggableTestCase(unittest.TestCase):\n\n    def __add_error_replacement(self, _, err):\n        value, traceback = err[1:]\nraise value.with_traceback(traceback)\n\ndef run(self, result=None):\n    if result and sys.gettrace() is not None:\n        pass?_split_?for x in range(1, 13):\n    pass?_split_?"}
{"nl":"How to transform a tuple to a string of values without comma and parentheses","code":"\"\"\"\"\"\".join(str(i) for i in (34.2424, -64.2344, 76.3534, 45.2344))","relevant":"parser.add_option('-p', '--pickled_data_path', dest='pickled_data_path',\n    type='string', help='Path to the file containing pickled data.')?_split_?out = vals.prod(1).reshape([gn] * n_dims)?_split_?idx = np.nonzero(a[1:] > a[:-1])[0] + 1?_split_?"}
{"nl":"What is the simplest way to swap char in a string with Python?","code":"\"\"\"\"\"\".join([s[x:x + 2][::-1] for x in range(0, len(s), 2)])","relevant":"def __getitem__(self, item):\n    ifnone = lambda a, b: b if a is None else a?_split_?log.info('An informational message.')\nlog.warning('A warning message.')?_split_?l = [1, 2, 3, 4, 5]?_split_?"}
{"nl":"Drawing a huge graph with networkX and matplotlib","code":"plt.savefig('graph.png', dpi=1000)","relevant":"req = urllib.request.Request('http:\/\/www.example.com\/')\nreq.add_header('Referer', 'http:\/\/www.python.org\/')\nresp = urllib.request.urlopen(req)?_split_?if self._running:\n    pass?_split_?dt.datetime.today().strftime('%m\/%d\/%Y')?_split_?"}
{"nl":"delete items from list of list: pythonic way","code":"my_list = [[x for x in sublist if x not in to_del] for sublist in my_list]","relevant":"from multiprocessing import Pool?_split_?d = ddict(list)\nfor number, lines in enumerate(zip(*files)):\n    for line in lines:\n        d[number].append(line)?_split_?class X(object):\n\n    def get_i(self):\n        return self._i\n\ndef set_i(self, value):\n    self._i = value\ni = property(get_i, set_i)?_split_?"}
{"nl":"Find an element in a list of tuples","code":"[item for item in a if 1 in item]","relevant":"if __name__ == '__main__':\n    main()?_split_?def example(a, b, *args, **kwargs):\n    pass?_split_?with open('input.csv', 'rb') as f_input:\n    for row in f_input:\n        cols = [col[::-1] for col in row[::-1][2:].split(' ') if len(col)]\nrows.append(cols[:4] + [' '.join(cols[4:][::-1])])\nframe = pd.DataFrame(rows, columns=frame_header)\nprint(frame)?_split_?"}
{"nl":"Find an element in a list of tuples","code":"[item for item in a if item[0] == 1]","relevant":"if __name__ == '__main__':\n    main()?_split_?def example(a, b, *args, **kwargs):\n    pass?_split_?with open('input.csv', 'rb') as f_input:\n    for row in f_input:\n        cols = [col[::-1] for col in row[::-1][2:].split(' ') if len(col)]\nrows.append(cols[:4] + [' '.join(cols[4:][::-1])])\nframe = pd.DataFrame(rows, columns=frame_header)\nprint(frame)?_split_?"}
{"nl":"How can I get the index value of a list comprehension?","code":"{p.id: {'id': p.id, 'position': ind} for ind, p in enumerate(p_list)}","relevant":"break?_split_?import os\nimport sys\nimport urllib.request, urllib.error, urllib.parse\n\ndef urlretrieve(urlfile, fpath):\n    chunk = 4096\nf = open(fpath, 'w')\nwhile 1:\n    data = urlfile.read(chunk)\nif not data:\n    print('done.')\nbreak\nf.write(data)\nprint('Read %s bytes' % len(data))?_split_?[30, 31, 32, 33, 34],?_split_?"}
{"nl":"how to uniqify a list of dict in python","code":"[dict(y) for y in set(tuple(x.items()) for x in d)]","relevant":"setattr(namespace, self.dest, values)?_split_?fig.add_subplot(ax1)?_split_?class MyList(list):\n    pass?_split_?"}
{"nl":"How do I load a file into the python console?","code":"exec(compile(open('file.py').read(), 'file.py', 'exec'))","relevant":"b.sort()?_split_?x = [1, 1, 1, 2, 2, 2, 1, 1, 1]\n[i for i in range(1, len(x)) if x[i] != x[i - 1]]?_split_?data = '\\x1b' + 47 * '\\x00'?_split_?"}
{"nl":"Get the number of rows in table using SQLAlchemy","code":"rows = session.query(Congress).count()","relevant":"import pandas as pd?_split_?s.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)?_split_?a = Foo()?_split_?"}
{"nl":"Execute Shell Script from python with variable","code":"subprocess.call(['test.sh', str(domid)])","relevant":"np.random.shuffle(mask)?_split_?print(document, 'does not exist')?_split_?if some_strng in value:\n    code_country.append([key, countries[key]])?_split_?"}
{"nl":"How to read a .xlsx file using the pandas Library in iPython?","code":"dfs = pd.read_excel(file_name, sheetname=None)","relevant":"result += i?_split_?print('onpick3 scatter:', ind, npy.take(x, ind), npy.take(y, ind))?_split_?x = {'x1': 1, 'x2': 2, 'x3': 3}\ny = {'y1': 1, 'y2': 2, 'y3': 3}\nkeysList = ['x2', 'x1', 'y1', 'y2']\nz = {}\nfor key, value in dict(list(x.items()) + list(y.items())).items():\n    if key in keysList:\n        z.update({key: value})\nprint(z)?_split_?"}
{"nl":"Reading hex to double-precision float python","code":"struct.unpack('d', binascii.unhexlify('4081637ef7d0424a'))","relevant":"values = [c.text.strip() for c in cells]?_split_?try:\n    app.run(server=server)\nexcept Exception as ex:\n    print(ex)?_split_?x = 4?_split_?"}
{"nl":"Indexing numpy array with another numpy array","code":"a[tuple(b)]","relevant":"self.on_change()?_split_?[-1, -1, 1, 1, 1]?_split_?b = x[:, 1:, :-1].swapaxes(0, 1)?_split_?"}
{"nl":"How to find all possible sequences of elements in a list?","code":"map(list, permutations([2, 3, 4]))","relevant":"while new and not wn.synsets(new, pos='v'):\n    new = new[:-1]\nprint((old, new))?_split_?msg += message_body?_split_?C = A * B?_split_?"}
{"nl":"Sort a list in python based on another sorted list","code":"sorted(unsorted_list, key=presorted_list.index)","relevant":"self._stream = BytesIO(self._body)?_split_?__import__('imp').find_module('eggs')?_split_?print('%s: %s is present in both aa and bb' % (key, value))?_split_?"}
{"nl":"How to get yesterday in python","code":"datetime.datetime.now() - datetime.timedelta(days=1)","relevant":"def tab_completer(text, state):\n    print('\\ntext:', text)?_split_?return '{} {}'.format(elapsed, record.getMessage())\nhandler = logging.StreamHandler()\nhandler.setFormatter(ElapsedFormatter())\nlogging.getLogger().addHandler(handler)\nlog = logging.getLogger('test')\nlog.error('Message 1')\ntime.sleep(5)\nlog.error('Message 2')?_split_?import boto3?_split_?"}
{"nl":"Creating a zero-filled pandas data frame","code":"d = pd.DataFrame(0, index=np.arange(len(data)), columns=feature_list)","relevant":"s_2 = 'Mohan Mehte'?_split_?dis.dis(unpack_or_index)?_split_?x = tf.placeholder(tf.float32, shape=[None, NUM_IMAGE_PIXELS])?_split_?"}
{"nl":"string find","code":"x.find('World')","relevant":"df?_split_?import mox\nm = mox.Mox()?_split_?import subprocess\nimport shlex\nimport os\nfd = os.open('passphrase.txt', os.O_RDONLY)\ncmd = 'gpg --passphrase-fd {fd} -c'.format(fd=fd)\nwith open('filename.txt', 'r') as stdin_fh:\n    with open('filename.gpg', 'w') as stdout_fh:\n        proc = subprocess.Popen(shlex.split(cmd), stdin=stdin_fh, stdout=\n            stdout_fh)\nproc.communicate()\nos.close(fd)?_split_?"}
{"nl":"string find","code":"x.find('Aloha')","relevant":"df?_split_?import mox\nm = mox.Mox()?_split_?import subprocess\nimport shlex\nimport os\nfd = os.open('passphrase.txt', os.O_RDONLY)\ncmd = 'gpg --passphrase-fd {fd} -c'.format(fd=fd)\nwith open('filename.txt', 'r') as stdin_fh:\n    with open('filename.gpg', 'w') as stdout_fh:\n        proc = subprocess.Popen(shlex.split(cmd), stdin=stdin_fh, stdout=\n            stdout_fh)\nproc.communicate()\nos.close(fd)?_split_?"}
{"nl":"string find","code":"'sdfasdf'.index('cc')","relevant":"df?_split_?import mox\nm = mox.Mox()?_split_?import subprocess\nimport shlex\nimport os\nfd = os.open('passphrase.txt', os.O_RDONLY)\ncmd = 'gpg --passphrase-fd {fd} -c'.format(fd=fd)\nwith open('filename.txt', 'r') as stdin_fh:\n    with open('filename.gpg', 'w') as stdout_fh:\n        proc = subprocess.Popen(shlex.split(cmd), stdin=stdin_fh, stdout=\n            stdout_fh)\nproc.communicate()\nos.close(fd)?_split_?"}
{"nl":"string find","code":"'sdfasdf'.index('df')","relevant":"df?_split_?import mox\nm = mox.Mox()?_split_?import subprocess\nimport shlex\nimport os\nfd = os.open('passphrase.txt', os.O_RDONLY)\ncmd = 'gpg --passphrase-fd {fd} -c'.format(fd=fd)\nwith open('filename.txt', 'r') as stdin_fh:\n    with open('filename.gpg', 'w') as stdout_fh:\n        proc = subprocess.Popen(shlex.split(cmd), stdin=stdin_fh, stdout=\n            stdout_fh)\nproc.communicate()\nos.close(fd)?_split_?"}
{"nl":"string find","code":"str.find('a')","relevant":"df?_split_?import mox\nm = mox.Mox()?_split_?import subprocess\nimport shlex\nimport os\nfd = os.open('passphrase.txt', os.O_RDONLY)\ncmd = 'gpg --passphrase-fd {fd} -c'.format(fd=fd)\nwith open('filename.txt', 'r') as stdin_fh:\n    with open('filename.gpg', 'w') as stdout_fh:\n        proc = subprocess.Popen(shlex.split(cmd), stdin=stdin_fh, stdout=\n            stdout_fh)\nproc.communicate()\nos.close(fd)?_split_?"}
{"nl":"string find","code":"str.find('g')","relevant":"df?_split_?import mox\nm = mox.Mox()?_split_?import subprocess\nimport shlex\nimport os\nfd = os.open('passphrase.txt', os.O_RDONLY)\ncmd = 'gpg --passphrase-fd {fd} -c'.format(fd=fd)\nwith open('filename.txt', 'r') as stdin_fh:\n    with open('filename.gpg', 'w') as stdout_fh:\n        proc = subprocess.Popen(shlex.split(cmd), stdin=stdin_fh, stdout=\n            stdout_fh)\nproc.communicate()\nos.close(fd)?_split_?"}
{"nl":"string find","code":"str.find('s', 11)","relevant":"df?_split_?import mox\nm = mox.Mox()?_split_?import subprocess\nimport shlex\nimport os\nfd = os.open('passphrase.txt', os.O_RDONLY)\ncmd = 'gpg --passphrase-fd {fd} -c'.format(fd=fd)\nwith open('filename.txt', 'r') as stdin_fh:\n    with open('filename.gpg', 'w') as stdout_fh:\n        proc = subprocess.Popen(shlex.split(cmd), stdin=stdin_fh, stdout=\n            stdout_fh)\nproc.communicate()\nos.close(fd)?_split_?"}
{"nl":"string find","code":"str.find('s', 15)","relevant":"df?_split_?import mox\nm = mox.Mox()?_split_?import subprocess\nimport shlex\nimport os\nfd = os.open('passphrase.txt', os.O_RDONLY)\ncmd = 'gpg --passphrase-fd {fd} -c'.format(fd=fd)\nwith open('filename.txt', 'r') as stdin_fh:\n    with open('filename.gpg', 'w') as stdout_fh:\n        proc = subprocess.Popen(shlex.split(cmd), stdin=stdin_fh, stdout=\n            stdout_fh)\nproc.communicate()\nos.close(fd)?_split_?"}
{"nl":"string find","code":"str.find('s', 16)","relevant":"df?_split_?import mox\nm = mox.Mox()?_split_?import subprocess\nimport shlex\nimport os\nfd = os.open('passphrase.txt', os.O_RDONLY)\ncmd = 'gpg --passphrase-fd {fd} -c'.format(fd=fd)\nwith open('filename.txt', 'r') as stdin_fh:\n    with open('filename.gpg', 'w') as stdout_fh:\n        proc = subprocess.Popen(shlex.split(cmd), stdin=stdin_fh, stdout=\n            stdout_fh)\nproc.communicate()\nos.close(fd)?_split_?"}
{"nl":"string find","code":"str.find('s', 11, 14)","relevant":"df?_split_?import mox\nm = mox.Mox()?_split_?import subprocess\nimport shlex\nimport os\nfd = os.open('passphrase.txt', os.O_RDONLY)\ncmd = 'gpg --passphrase-fd {fd} -c'.format(fd=fd)\nwith open('filename.txt', 'r') as stdin_fh:\n    with open('filename.gpg', 'w') as stdout_fh:\n        proc = subprocess.Popen(shlex.split(cmd), stdin=stdin_fh, stdout=\n            stdout_fh)\nproc.communicate()\nos.close(fd)?_split_?"}
{"nl":"Sort list of date strings","code":"sorted(d, key=lambda x: datetime.datetime.strptime(x, '%m-%Y'))","relevant":"mins = mins[:n]?_split_?class TagTests(TestCase):\n\n    def tag_test(self, template, context, output):\n        pass?_split_?def onKey(self, evt):\n    if evt.GetKeyCode() == wx.WXK_DOWN:\n        pass?_split_?"}
{"nl":"Regular expression in Python sentence extractor","code":"re.split('\\\\.\\\\s', text)","relevant":"for vibe in list(my_json['vibes'].values()):\n    pass?_split_?pickle.loads(pickle.dumps(C()))?_split_?def __init__(self):\n    print('entering __init__')?_split_?"}
{"nl":"Regular expression in Python sentence extractor","code":"re.split('\\\\.\\\\s', re.sub('\\\\.\\\\s*$', '', text))","relevant":"for vibe in list(my_json['vibes'].values()):\n    pass?_split_?pickle.loads(pickle.dumps(C()))?_split_?def __init__(self):\n    print('entering __init__')?_split_?"}
{"nl":"Python - How to cut a string in Python?","code":"\"\"\"foobar\"\"\"[:4]","relevant":"yourdata?_split_?fig = plt.figure()\nax1 = fig.add_subplot(111)?_split_?red_float.convertTo(red, CV_8U)?_split_?"}
{"nl":"Python - How to cut a string in Python?","code":"s.rfind('&')","relevant":"yourdata?_split_?fig = plt.figure()\nax1 = fig.add_subplot(111)?_split_?red_float.convertTo(red, CV_8U)?_split_?"}
{"nl":"Python - How to cut a string in Python?","code":"s[:s.rfind('&')]","relevant":"yourdata?_split_?fig = plt.figure()\nax1 = fig.add_subplot(111)?_split_?red_float.convertTo(red, CV_8U)?_split_?"}
{"nl":"Using a variable in xpath in Python Selenium","code":"driver.find_element_by_xpath(\"\/\/option[@value='\" + state + \"']\").click()","relevant":"resp = h.getresponse()\nprint((resp.status, resp.reason))\nprint(resp.headers)\nprint(resp.read())?_split_?from statsmodels.sandbox.regression.predstd import wls_prediction_std?_split_?print(mytuple[2])?_split_?"}
{"nl":"append to a file","code":"with open('test.txt', 'a') as myfile:\n    myfile.write('appended text')","relevant":"post_contents = {'someVar': file_contents}\nrequest = webapp2.Request.blank('\/', POST=post_contents)?_split_?ax2.yaxis.set_offset_position('right')?_split_?import urllib.request, urllib.error, urllib.parse\nalan2 = urllib.request.urlopen(\n    'http:\/\/ifarchive.plover.net\/if-archive\/games\/competition2001\/alan\/chasing\/chasing.acd'\n    ).read(4)\nalan3 = urllib.request.urlopen(\n    'http:\/\/mirror.ifarchive.org\/if-archive\/games\/competition2006\/alan\/enterthedark\/EnterTheDark.a3c'\n    ).read(4)\nalan2?_split_?"}
{"nl":"append to a file","code":"with open('foo', 'a') as f:\n    f.write('cool beans...')","relevant":"post_contents = {'someVar': file_contents}\nrequest = webapp2.Request.blank('\/', POST=post_contents)?_split_?ax2.yaxis.set_offset_position('right')?_split_?import urllib.request, urllib.error, urllib.parse\nalan2 = urllib.request.urlopen(\n    'http:\/\/ifarchive.plover.net\/if-archive\/games\/competition2001\/alan\/chasing\/chasing.acd'\n    ).read(4)\nalan3 = urllib.request.urlopen(\n    'http:\/\/mirror.ifarchive.org\/if-archive\/games\/competition2006\/alan\/enterthedark\/EnterTheDark.a3c'\n    ).read(4)\nalan2?_split_?"}
{"nl":"append to a file","code":"with open('test1', 'ab') as f:\n    pass","relevant":"post_contents = {'someVar': file_contents}\nrequest = webapp2.Request.blank('\/', POST=post_contents)?_split_?ax2.yaxis.set_offset_position('right')?_split_?import urllib.request, urllib.error, urllib.parse\nalan2 = urllib.request.urlopen(\n    'http:\/\/ifarchive.plover.net\/if-archive\/games\/competition2001\/alan\/chasing\/chasing.acd'\n    ).read(4)\nalan3 = urllib.request.urlopen(\n    'http:\/\/mirror.ifarchive.org\/if-archive\/games\/competition2006\/alan\/enterthedark\/EnterTheDark.a3c'\n    ).read(4)\nalan2?_split_?"}
{"nl":"append to a file","code":"open('test', 'a+b').write('koko')","relevant":"post_contents = {'someVar': file_contents}\nrequest = webapp2.Request.blank('\/', POST=post_contents)?_split_?ax2.yaxis.set_offset_position('right')?_split_?import urllib.request, urllib.error, urllib.parse\nalan2 = urllib.request.urlopen(\n    'http:\/\/ifarchive.plover.net\/if-archive\/games\/competition2001\/alan\/chasing\/chasing.acd'\n    ).read(4)\nalan3 = urllib.request.urlopen(\n    'http:\/\/mirror.ifarchive.org\/if-archive\/games\/competition2006\/alan\/enterthedark\/EnterTheDark.a3c'\n    ).read(4)\nalan2?_split_?"}
{"nl":"How can I split a string into tokens?","code":"print([i for i in re.split('([\\\\d.]+|\\\\W+)', 'x+13.5*10x-4e1') if i])","relevant":"a[::2] = [-1, -2, -3]\na?_split_?logging.info('Finished')?_split_?table_sql = CreateTable(Foo.table).compile(db_engine)\nself.assertTrue('CREATE TABLE foos' in str(table_sql))?_split_?"}
{"nl":"Python: Check if a string contains chinese character?","code":"re.findall('[\\u4e00-\\u9fff]+', ipath)","relevant":"query = session.query(TestUser).filter(TestUser.numbers.contains([some_int])\n    ).all()?_split_?print(-1.23456)?_split_?class MyJSONEncoder(JSONEncoder):\n\n    def default(self, obj):\n        if isinstance(obj, EqltByGene):\n            return {'gene_id': obj.gene_id, 'gene_symbol': obj.gene_symbol,\n                'p_value': obj.p_value}?_split_?"}
{"nl":"String splitting in Python","code":"s.split('s')","relevant":"for group in groups:\n    print(group.name)\nfor rule in group.rules:\n    pass?_split_?x = S1()\ngetdict(x)?_split_?letters = ['a', 'b', 'c']?_split_?"}
{"nl":"How to start a background process in Python?","code":"subprocess.Popen(['rm', '-r', 'some.file'])","relevant":"class ConvertingDateTimeField(models.DateTimeField):\n\n    def get_prep_value(self, value):\n        pass?_split_?3.539?_split_?wb = Workbook()?_split_?"}
{"nl":"Elegant way to transform a list of dict into a dict of dicts","code":"dict((d['name'], d) for d in listofdict)","relevant":"q.put('ok')?_split_?import sys?_split_?n = [x for x in n if x in string.whitespace or x not in string.printable]?_split_?"}
{"nl":"print date in a regular format","code":"datetime.datetime.now().strftime('%Y-%m-%d %H:%M')","relevant":"sequence1 = [1, 4, 8]?_split_?for k, v in list(structure.items()):\n    ret.extend(k + '\/' + f for f in flatten(v))?_split_?r = struct.pack('2I', 12, 33)?_split_?"}
{"nl":"print date in a regular format","code":"time.strftime('%Y-%m-%d %H:%M')","relevant":"sequence1 = [1, 4, 8]?_split_?for k, v in list(structure.items()):\n    ret.extend(k + '\/' + f for f in flatten(v))?_split_?r = struct.pack('2I', 12, 33)?_split_?"}
{"nl":"Finding consecutive consonants in a word","code":"re.findall('[bcdfghjklmnpqrstvwxyz]+', 'CONCERTATION', re.IGNORECASE)","relevant":"class Meta:\n    model = FlatPage?_split_?cv = cross_validation.KFold(len(training_set), n_folds=10, indices=True,\n    shuffle=False, random_state=None, k=None)\nfor traincv, testcv in cv:\n    classifier = nltk.NaiveBayesClassifier.train(training_set[traincv[0]:\n        traincv[len(traincv) - 1]])\nprint('accuracy:', nltk.classify.util.accuracy(classifier, training_set[\n    testcv[0]:testcv[len(testcv) - 1]]))?_split_?a = randint(0, 10)\nb = randint(0, 10)?_split_?"}
{"nl":"How do I get a list of indices of non zero elements in a list?","code":"[i for i, e in enumerate(a) if e != 0]","relevant":"['a', 'd']?_split_?s.find(\"Path to the 'AddonIcon.png'\")\ns.click(\"Path to the 'AddonIcon.png'\")?_split_?if rec.endswith('FIN'):\n    pass?_split_?"}
{"nl":"How to get integer values from a string in Python?","code":"map(int, re.findall('\\\\d+', string1))","relevant":"br.form['subject'] = 'Yellow'?_split_?with db_connection as cursor:\n    cursor.execute('insert into ...')?_split_?cb = plt.colorbar()?_split_?"}
{"nl":"How can I know python's path under windows?","code":"os.path.dirname(sys.executable)","relevant":"datetime = models.DateTimeField(default=datetime.now)\nnote = models.TextField()\n\n\nclass Meta:\n    ordering = '-datetime'\n\ndef __unicode__(self):\n    return str(self.name)?_split_?d = \"\"\"<span class='python'>\n  <a>google<\/a>\n  <a>chrome<\/a>\n<\/span>\"\"\"\nfrom lxml import etree\nd = etree.HTML(d)\nd.xpath('.\/\/span[@class=\"python\"]\/a[2]\/text()')?_split_?def main():\n    pass?_split_?"}
{"nl":"Moving x-axis to the top of a plot in matplotlib","code":"ax.xaxis.set_label_position('top')","relevant":"x = np.array([True, True, False, False])\ny = np.array([True, False, True, False])?_split_?print('I got a KeyError - reason \"%s\"' % str(e))?_split_?d = {(1): 2, (3): 4}?_split_?"}
{"nl":"Moving x-axis to the top of a plot in matplotlib","code":"ax.xaxis.tick_top()","relevant":"x = np.array([True, True, False, False])\ny = np.array([True, False, True, False])?_split_?print('I got a KeyError - reason \"%s\"' % str(e))?_split_?d = {(1): 2, (3): 4}?_split_?"}
{"nl":"Moving x-axis to the top of a plot in matplotlib","code":"ax.xaxis.set_ticks_position('top')","relevant":"x = np.array([True, True, False, False])\ny = np.array([True, False, True, False])?_split_?print('I got a KeyError - reason \"%s\"' % str(e))?_split_?d = {(1): 2, (3): 4}?_split_?"}
{"nl":"Parsing non-zero padded timestamps in Python","code":"datetime.strptime('2015\/01\/01 12:12am', '%Y\/%m\/%d %I:%M%p')","relevant":"img_as_np = np.asarray(img.getdata()).reshape(img.size[1], img.size[0], -1)?_split_?CHUNK = 1024?_split_?new_val.append(x[2])?_split_?"}
{"nl":"Open images","code":"img = Image.open('picture.jpg')\nimg.show()","relevant":"seen = set()?_split_?vals1, vals2 = zip(*[(dict1[k], v) for k, v in list(dict2.items()) if k in dict1])?_split_?def foo(bar):\n    return foo.my_map.get(bar, defaultType)()?_split_?"}
{"nl":"Open images","code":"img = Image.open('picture.jpg')\nImg.show","relevant":"seen = set()?_split_?vals1, vals2 = zip(*[(dict1[k], v) for k, v in list(dict2.items()) if k in dict1])?_split_?def foo(bar):\n    return foo.my_map.get(bar, defaultType)()?_split_?"}
{"nl":"How do I abort the execution of a Python script?","code":"sys.exit(0)","relevant":"df['date'] = pd.to_datetime(['21-11-2013', '22-11-2013'])\npd.DatetimeIndex(df.date) + pd.DateOffset(1)\npd.DatetimeIndex(df.date) + pd.offsets.Hour(1)?_split_?firstline = True?_split_?def __init__(self, dataSample):\n    variance = round(sum(dataSample) \/ len(dataSample))\nif variance == 0:\n    self._norm = 1.0\nelse:\n    pass?_split_?"}
{"nl":"How do I abort the execution of a Python script?","code":"sys.exit('aa! errors!')","relevant":"df['date'] = pd.to_datetime(['21-11-2013', '22-11-2013'])\npd.DatetimeIndex(df.date) + pd.DateOffset(1)\npd.DatetimeIndex(df.date) + pd.offsets.Hour(1)?_split_?firstline = True?_split_?def __init__(self, dataSample):\n    variance = round(sum(dataSample) \/ len(dataSample))\nif variance == 0:\n    self._norm = 1.0\nelse:\n    pass?_split_?"}
{"nl":"How do I abort the execution of a Python script?","code":"sys.exit()","relevant":"df['date'] = pd.to_datetime(['21-11-2013', '22-11-2013'])\npd.DatetimeIndex(df.date) + pd.DateOffset(1)\npd.DatetimeIndex(df.date) + pd.offsets.Hour(1)?_split_?firstline = True?_split_?def __init__(self, dataSample):\n    variance = round(sum(dataSample) \/ len(dataSample))\nif variance == 0:\n    self._norm = 1.0\nelse:\n    pass?_split_?"}
{"nl":"Find maximum with limited length in a list","code":"[max(abs(x) for x in arr[i:i + 4]) for i in range(0, len(arr), 4)]","relevant":"sys.exit(0)?_split_?Popen(['nice'], preexec_fn=lambda : os.nice(20)).communicate()?_split_?for row in data.values():\n    writer.writerow([row.get(field, '') for field in fieldnames])?_split_?"}
{"nl":"How to set the current working directory in Python?","code":"os.chdir('c:\\\\Users\\\\uname\\\\desktop\\\\python')","relevant":"diam_out = np.maximum.reduceat(dists, shift_idx)?_split_?cur.executemany('INSERT INTO %s VALUES(%s)' % (table_name, wildcards), data)?_split_?if ('class', 'content') in element_attributes:\n    pass?_split_?"}
{"nl":"How to set the current working directory in Python?","code":"os.chdir(path)","relevant":"diam_out = np.maximum.reduceat(dists, shift_idx)?_split_?cur.executemany('INSERT INTO %s VALUES(%s)' % (table_name, wildcards), data)?_split_?if ('class', 'content') in element_attributes:\n    pass?_split_?"}
{"nl":"How to remove all integer values from a list in python","code":"no_integers = [x for x in mylist if not isinstance(x, int)]","relevant":"print('Run time of %s is %4.2fs' % (func.__name__, end - start))?_split_?img2 = Image.open('SnowCam_main2.jpg')\nimg3 = Image.open('SnowCam_main3.jpg')?_split_?p = argparse.ArgumentParser(description='script.py')?_split_?"}
{"nl":"How do I match contents of an element in XPath (lxml)?","code":"tree.xpath(\".\/\/a[text()='Example']\")[0].tag","relevant":"@app.after_request\ndef add_header(r):\n    pass?_split_?yield ''.join(tokens[start:i])?_split_?words = member.filename.split('\/')?_split_?"}
{"nl":"convert dictionaries into string python","code":"\"\"\", \"\"\".join([(str(k) + ' ' + str(v)) for k, v in list(a.items())])","relevant":"msg['Subject'] = 'subject'?_split_?ax = fig.add_subplot(111, projection='3d')?_split_?def decorated(*args, **kwargs):\n    print('start2')?_split_?"}
{"nl":"Detecting non-ascii characters in unicode string","code":"print(set(re.sub('[\\x00-\\x7f]', '', '\\xa3\\u20ac\\xa3\\u20ac')))","relevant":"df['date'].dt.year?_split_?self.ui.PoseBtn_GridLayout.addItem(spacerItem1, 1, 0, 1, 1)\nself.button = QtGui.QPushButton('')?_split_?print('first =', first)?_split_?"}
{"nl":"Detecting non-ascii characters in unicode string","code":"print(re.sub('[\\x00-\\x7f]', '', '\\xa3100 is worth more than \\u20ac100'))","relevant":"df['date'].dt.year?_split_?self.ui.PoseBtn_GridLayout.addItem(spacerItem1, 1, 0, 1, 1)\nself.button = QtGui.QPushButton('')?_split_?print('first =', first)?_split_?"}
{"nl":"Convert a String representation of a Dictionary to a dictionary?","code":"ast.literal_eval(\"{'muffin' : 'lolz', 'foo' : 'kitty'}\")","relevant":"plt.draw()?_split_?unittest.main()?_split_?a = np.random.rand(size)?_split_?"}
{"nl":"Easiest way to remove unicode representations from a string in python 3?","code":"print(t.decode('unicode_escape'))","relevant":"y = np.random.randn(N)\nz = func([-3, -1, 2], [x, y]) + np.random.normal(size=N)?_split_?from dateutil import parser?_split_?data = (\n    \"\"\"eval(function(p,a,c,k,e,r){e=String;if('0'.replace(0,e)==0){while(c--)r[e(c)]=k[c];k=[function(e){return r[e]||e}];e=function(){return'^$'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\\\\\b'+e(c)+'\\\\\\\\b','g'),k[c]);return p}('document.body.innerHTML=\"<iframe width=\\\\'100%\\\\' scrolling=\\\\'no\\\\' height=\\\\'2500\\\\' frameborder=\\\\'0\\\\' src=\\\\'http:\/\/www.exmaple.com\\\\'>\";',[],1,''.split('|'),0,{}))\"\"\"\n    )\ndata = 'console.log' + data[4:]?_split_?"}
{"nl":"String encoding and decoding from possibly latin1 and utf8","code":"print(str.encode('cp1252').decode('utf-8').encode('cp1252').decode('utf-8'))","relevant":"def profile_update(inputs):\n    yield 'it worked'?_split_?modules = map(__import__, moduleNames)?_split_?res = reduceOutputListToPossibleMatches(outputList, detailsList)\nwith open('somefile', 'w') as f:\n    f.writelines(res)?_split_?"}
{"nl":"merge lists into a list of tuples","code":"zip(list_a, list_b)","relevant":"return True?_split_?dummy_url = '\/404error'?_split_?lst.sort(key=attrgetter('date'), reverse=True)\nlst?_split_?"}
{"nl":"merge lists into a list of tuples","code":"list(zip(a, b))","relevant":"return True?_split_?dummy_url = '\/404error'?_split_?lst.sort(key=attrgetter('date'), reverse=True)\nlst?_split_?"}
{"nl":"python pandas dataframe to dictionary","code":"df.set_index('id').to_dict()","relevant":"url = 'http:\/\/stackoverflow.com\/search?q=question'\nparams = {'lang': 'en', 'tag': 'python'}?_split_?i = 0\nwhile i < 5:\n    print(i)\nif condition:\n    continue\ni += 1?_split_?xmlhttp.setRequestHeader('Content-Type',\n    'application\/x-www-form-urlencoded; charset=UTF-8')?_split_?"}
{"nl":"python pandas dataframe to dictionary","code":"df.set_index('id')['value'].to_dict()","relevant":"url = 'http:\/\/stackoverflow.com\/search?q=question'\nparams = {'lang': 'en', 'tag': 'python'}?_split_?i = 0\nwhile i < 5:\n    print(i)\nif condition:\n    continue\ni += 1?_split_?xmlhttp.setRequestHeader('Content-Type',\n    'application\/x-www-form-urlencoded; charset=UTF-8')?_split_?"}
{"nl":"Can I sort text by its numeric value in Python?","code":"sorted(list(mydict.items()), key=lambda a: map(int, a[0].split('.')))","relevant":"import numpy.ma as ma?_split_?max_data1 = max(enumerate(data1), key=itemgetter(1))[1]?_split_?a = np.cos(theta \/ 2.0)?_split_?"}
{"nl":"How can I remove text within parentheses with a regex?","code":"re.sub('\\\\([^)]*\\\\)', '', filename)","relevant":"deferred.defer(count_colors)?_split_?with open('ixto.msg', 'rb') as f:\n    pass?_split_?reshaped2.show()?_split_?"}
{"nl":"How can I tell if a string only contains letter AND spaces","code":"\"\"\"a b\"\"\".replace(' ', '').isalpha()","relevant":"map(list, my_array)?_split_?p.xaxis.axis_label = 'Chats Made'?_split_?import re\n\ndef repetitions(s):\n    r = re.compile('(.+?)\\\\1+')\nfor match in r.finditer(s):\n    yield match.group(1), len(match.group(0)) \/ len(match.group(1))?_split_?"}
{"nl":"Add SUM of values of two LISTS into new LIST","code":"[(x + y) for x, y in zip(first, second)]","relevant":"from googleapiclient import discovery\nprojectID = 'projects\/<your_project_id>'?_split_?def func(p):\n    pass?_split_?\"\"\"Mozilla\/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko\/20100101 Firefox\/7.0.1\"\"\"?_split_?"}
{"nl":"How to sort a Python dictionary by value?","code":"sorted(list(a_dict.items()), key=lambda item: item[1][1])","relevant":"from django.views import debug?_split_?if hasattr(source, 'keys'):\n    pass?_split_?def remember(f):\n    pass?_split_?"}
{"nl":"How to exclude a character from a regex group?","code":"re.compile('[^a-zA-Z0-9-]+')","relevant":"import numpy as np?_split_?consumer_key = ''\nconsumer_secret = ''\naccess_key = ''\naccess_secret = ''\nauth = tweepy.OAuthHandler(consumer_key, consumer_secret)\nauth.set_access_token(access_key, access_secret)\napi = tweepy.API(auth)\n\n\nclass CustomStreamListener(tweepy.StreamListener):\n\n    def __init__(self, api):\n        self.api = api\nsuper(tweepy.StreamListener, self).__init__()\nself.db = pymongo.MongoClient().test\n\ndef on_data(self, tweet):\n    self.db.tweets.insert(json.loads(tweet))\n\ndef on_error(self, status_code):\n    return True\n\ndef on_timeout(self):\n    return True\nsapi = tweepy.streaming.Stream(auth, CustomStreamListener(api))\nsapi.filter(track=['Gandolfini'])?_split_?plt.figure()?_split_?"}
{"nl":"Get index of the top n values of a list in python","code":"sorted(list(range(len(a))), key=lambda i: a[i])[-2:]","relevant":"s = '123abc456someword 0001abde19999anotherword'?_split_?import pytz\npytz.timezone('Europe\/Helsinki').localize(naive)?_split_?var_names = ['x1', 'y1', 'a1', 'b1', 'x2', 'y2']?_split_?"}
{"nl":"Get index of the top n values of a list in python","code":"zip(*sorted(enumerate(a), key=operator.itemgetter(1)))[0][-2:]","relevant":"s = '123abc456someword 0001abde19999anotherword'?_split_?import pytz\npytz.timezone('Europe\/Helsinki').localize(naive)?_split_?var_names = ['x1', 'y1', 'a1', 'b1', 'x2', 'y2']?_split_?"}
{"nl":"Get index of the top n values of a list in python","code":"sorted(list(range(len(a))), key=lambda i: a[i], reverse=True)[:2]","relevant":"s = '123abc456someword 0001abde19999anotherword'?_split_?import pytz\npytz.timezone('Europe\/Helsinki').localize(naive)?_split_?var_names = ['x1', 'y1', 'a1', 'b1', 'x2', 'y2']?_split_?"}
{"nl":"How to get the index with the key in Python dictionary?","code":"list(x.keys()).index('c')","relevant":"print(row)?_split_?import numpy as np\nlist1 = [2, 7, 8, 5]\nlist2 = [18, 29, 44, 33]\nlist3 = [2.3, 4.6, 8.9, 7.7]\narr = np.array([list1, list2, list3])\narr = arr.T\nprint(arr)?_split_?first_num = int(next(d))?_split_?"}
{"nl":"How to print +1 in Python, as +1 (with plus sign) instead of 1?","code":"print('{0:+d}'.format(score))","relevant":"outfile.write(line)?_split_?def __init__(self):\n    self.cache = {}?_split_?for path in paths:\n    for dirpath, dirnames, filenames in os.walk(path):\n        for filename in filenames:\n            full_path = os.path.join(dirpath, filename)?_split_?"}
{"nl":"Remove adjacent duplicate elements from a list","code":"[k for k, g in itertools.groupby([1, 2, 2, 3, 2, 2, 4])]","relevant":"print('=====================================================================')\nprint(etree.tostring(root, pretty_print=True))\nprint('=====================================================================')\ndropns(root)\nprint(etree.tostring(root, pretty_print=True))\nprint('=====================================================================')?_split_?dataset = bq.Dataset(bigquery_dataset_name)?_split_?s = 'C0A80026'\nmap(ord, s.decode('hex'))?_split_?"}
{"nl":"Converting a String to List in Python","code":"\"\"\"0,1,2\"\"\".split(',')","relevant":"ans = input('Make A Choice')?_split_?form_pswd = driver.find_element_by_name('userpwd')?_split_?argv = 140737488344856?_split_?"}
{"nl":"Converting a String to List in Python","code":"[int(x) for x in '0,1,2'.split(',')]","relevant":"ans = input('Make A Choice')?_split_?form_pswd = driver.find_element_by_name('userpwd')?_split_?argv = 140737488344856?_split_?"}
{"nl":"Python: Convert list of key-value tuples into dictionary?","code":"dict([('A', 1), ('B', 2), ('C', 3)])","relevant":"emails.append(msg)?_split_?env[k].extend(v)?_split_?for item in somelist:\n    pass?_split_?"}
{"nl":"How to write a multidimensional array to a text file?","code":"np.savetxt('test.txt', x)","relevant":"print(' ', ','.join(temp))?_split_?plt.title('Affinity - Retail Details(Home category)')?_split_?flags = re.MULTILINE | re.DOTALL?_split_?"}
{"nl":"How to store os.system() output in a variable or a list in python","code":"direct_output = subprocess.check_output('ls', shell=True)","relevant":"kv = K.nbytes + V.nbytes\n\"\"\"{:15,d}\"\"\".format(kv)\n\"\"\"      2,400,000\"\"\"?_split_?class MyModel(models.Model):\n    prefix = models.CharField(max_length=3)\nslug = models.SlugField(max_length=255)\nname = models.CharField(max_length=255)\n\n\nclass Meta:\n    unique_together = 'prefix', 'slug'?_split_?if session.config.option.my_test_dump is not None:\n    pass?_split_?"}
{"nl":"Select everything but a list of columns from pandas dataframe","code":"df[df.columns - ['T1_V6']]","relevant":"with open('\/home\/joe\/file.txt') as f_in:\n    with gzip.open('\/home\/joe\/file.txt.gz', 'wb') as f_out:\n        f_out.writelines(f_in)?_split_?for line in f1:\n    f2.write(line.replace(';', ' '))\nf1.close()?_split_?hex2 = Hexagon('0302')\nif hex1.neighbors() == ['0200', '0101', '0301', '0102', '0302', '0202']:\n    print('Works for even columns.')\nelse:\n    print('Failed for even columns.')\nprint(hex1.neighbors())\nif hex2.neighbors() == ['0301', '0201', '0401', '0202', '0402', '0303']:\n    print('Works for odd columns.')\nelse:\n    print('Failed for odd columns.')\nprint(hex2.neighbors())\nif __name__ == '__main__':\n    main()?_split_?"}
{"nl":"How to count values in a certain range in a Numpy array?","code":"((25 < a) & (a < 100)).sum()","relevant":"if not found:\n    pass?_split_?letters = []?_split_?cursor.execute('INSERT INTO `User`(`UID`, `IP`) VALUES(%s,%s);', params)?_split_?"}
{"nl":"how to get day name in datetime in python","code":"date.today().strftime('%A')","relevant":"im = scipy.misc.imread(filename)?_split_?img = cv2.imread('image.png', 0)?_split_?a?_split_?"}
{"nl":"Python regular expression match whole word","code":"re.search('\\\\bis\\\\b', your_string)","relevant":"key, val = line.split('\\t')?_split_?def exists(env):\n    return env.Detect('swig')?_split_?for _ in range(2):\n    pass?_split_?"}
{"nl":"Python: How do I format a date in Jinja2?","code":"{{car.date_of_manufacture | datetime}}","relevant":"nun, val = prev[-3:-1]?_split_?def draw_menu(options, selected_index):\n    for counter, option in enumerate(options):\n        if counter == selected_index:\n            pass?_split_?logger = logging.getLogger(record.name)?_split_?"}
{"nl":"Python: How do I format a date in Jinja2?","code":"{{car.date_of_manufacture.strftime('%Y-%m-%d')}}","relevant":"nun, val = prev[-3:-1]?_split_?def draw_menu(options, selected_index):\n    for counter, option in enumerate(options):\n        if counter == selected_index:\n            pass?_split_?logger = logging.getLogger(record.name)?_split_?"}
{"nl":"Making a flat list out of list of lists","code":"[item for sublist in l for item in sublist]","relevant":"df?_split_?p = im.getpixel((x, y))?_split_?grid_x = flat_grid_idx % gridsize_x\ngrid_y = flat_grid_idx \/\/ gridsize_x?_split_?"}
{"nl":"Making a flat list out of list of lists","code":"list(itertools.chain(*list2d))","relevant":"df?_split_?p = im.getpixel((x, y))?_split_?grid_x = flat_grid_idx % gridsize_x\ngrid_y = flat_grid_idx \/\/ gridsize_x?_split_?"}
{"nl":"Making a flat list out of list of lists","code":"list(itertools.chain.from_iterable(list2d))","relevant":"df?_split_?p = im.getpixel((x, y))?_split_?grid_x = flat_grid_idx % gridsize_x\ngrid_y = flat_grid_idx \/\/ gridsize_x?_split_?"}
{"nl":"Convert int to ASCII and back in Python","code":"ord('a')","relevant":"form.content.data = 'please type content'?_split_?inputFile = open(filename)\ninputData = inputFile.read().splitlines()?_split_?c._function?_split_?"}
{"nl":"Python: use regular expression to remove the white space from all lines","code":"re.sub('(?m)^[^\\\\S\\\\n]+', '', '  a\\n b\\n c\\nd  e')","relevant":"self.wfile.write(self.headers.getheader('Authorization'))\nself.wfile.write('not authenticated')?_split_?s3.Bucket('Hello') in s3.buckets.all()\ns3.Bucket('some-docs') in s3.buckets.all()?_split_?result = array[:, (idx)]?_split_?"}
{"nl":"Python: use regular expression to remove the white space from all lines","code":"re.sub('(?m)^\\\\s+', '', 'a\\n b\\n c')","relevant":"self.wfile.write(self.headers.getheader('Authorization'))\nself.wfile.write('not authenticated')?_split_?s3.Bucket('Hello') in s3.buckets.all()\ns3.Bucket('some-docs') in s3.buckets.all()?_split_?result = array[:, (idx)]?_split_?"}
{"nl":"Python: Assign each element of a List to a separate Variable","code":"a, b, c = [1, 2, 3]","relevant":"for old in 'sittest walkest liest risest'.split():\n    pass?_split_?b2 = b * b * (a * a + c * c - b * b)?_split_?for k, v in list(c.items()):\n    stat2[k] += v?_split_?"}
{"nl":"Python split a list into subsets based on pattern","code":"[list(v) for k, v in itertools.groupby(mylist, key=lambda x: x[:5])]","relevant":"def probabilityOfResult(X, Y, direction=0):\n    x = len(X)\nif x != len(Y):\n    raise ValueError('variables not same len: ' + str(x) + ', and ' + str(\n        len(Y)))\nif x < 6:\n    raise ValueError('must have at least 6 samples, but have ' + str(x))\ncorr, prb_2_tail = stats.pearsonr(X, Y)\nif not direction:\n    return corr, prb_2_tail\nprb_1_tail = prb_2_tail \/ 2?_split_?resource += '?' + parsed.query?_split_?map(None, '1111')?_split_?"}
{"nl":"Regular expression substitution in Python","code":"line = re.sub('\\\\(+as .*?\\\\) ', '', line)","relevant":"return a?_split_?for i in cols:\n    for j in cols.drop(i):\n        print(('percent of', j, 'not null if', i, 'is not null:', (df[i].\n            notnull() & df[j].notnull()).sum() \/ df[i].notnull().sum()))?_split_?if len(items) == 1:\n    if isinstance(items[0], Nonterminal):\n        for prod in grammar.productions(lhs=items[0]):\n            frags.append(generate_sample(grammar, prod.rhs()))\nelse:\n    frags.append(items[0])?_split_?"}
{"nl":"How to skip the extra newline while printing lines read from a file?","code":"print(line.rstrip('\\n'))","relevant":"class Car(models.Model):\n\n    def delete(self, *args, **kwargs):\n        self.wheel.delete()?_split_?[list(t) for t in zip(*l)]?_split_?time.sleep(3)\nser.write('H')?_split_?"}
{"nl":"Get index values of Pandas DataFrame as list?","code":"df.index.values.tolist()","relevant":"import numpy as np?_split_?data = {'name': 'hello', 'data[]': ['hello', 'world']}?_split_?import select\nr, w, x = select.select([sys.stdin], [], [], 0)?_split_?"}
{"nl":"check if a list is empty","code":"if (not a):\n    pass","relevant":"nparr = np.fromstring(encoded_data.decode('base64'), np.uint8)\nimg = cv2.imdecode(nparr, cv2.IMREAD_COLOR)?_split_?for item in old_list:\n    new_list.append(item[1])?_split_?self.text.tag_configure('bigfont', font=('Helvetica', '24', 'bold'))?_split_?"}
{"nl":"check if a list is empty","code":"if (not seq):\n    pass","relevant":"nparr = np.fromstring(encoded_data.decode('base64'), np.uint8)\nimg = cv2.imdecode(nparr, cv2.IMREAD_COLOR)?_split_?for item in old_list:\n    new_list.append(item[1])?_split_?self.text.tag_configure('bigfont', font=('Helvetica', '24', 'bold'))?_split_?"}
{"nl":"check if a list is empty","code":"if (len(li) == 0):\n    pass","relevant":"nparr = np.fromstring(encoded_data.decode('base64'), np.uint8)\nimg = cv2.imdecode(nparr, cv2.IMREAD_COLOR)?_split_?for item in old_list:\n    new_list.append(item[1])?_split_?self.text.tag_configure('bigfont', font=('Helvetica', '24', 'bold'))?_split_?"}
{"nl":"Find the indices of elements greater than x","code":"[i for i, v in enumerate(a) if v > 4]","relevant":"img = cv2.imread('\/Users\/anmoluppal\/Downloads\/QYtuv.png')?_split_?sudo_prompt = p.communicate(sudo_password + '\\n')[1]?_split_?query = Q()?_split_?"}
{"nl":"sorting list of nested dictionaries in python","code":"sorted(yourdata, reverse=True)","relevant":"print(y)?_split_?p = Popen(['osascript', '-'] + args, stdin=PIPE, stdout=PIPE, stderr=PIPE)?_split_?outputStream.close()?_split_?"}
{"nl":"sorting list of nested dictionaries in python","code":"sorted(yourdata, key=lambda d: d.get('key', {}).get('subkey'), reverse=True)","relevant":"print(y)?_split_?p = Popen(['osascript', '-'] + args, stdin=PIPE, stdout=PIPE, stderr=PIPE)?_split_?outputStream.close()?_split_?"}
{"nl":"sorting list of nested dictionaries in python","code":"yourdata.sort(key=lambda e: e['key']['subkey'], reverse=True)","relevant":"print(y)?_split_?p = Popen(['osascript', '-'] + args, stdin=PIPE, stdout=PIPE, stderr=PIPE)?_split_?outputStream.close()?_split_?"}
{"nl":"How to remove decimal points in pandas","code":"df.round()","relevant":"self.end_headers()?_split_?int_list = [int(i) for i in line]?_split_?xsheet = xbook.add_worksheet('Test')?_split_?"}
{"nl":"How to extract data from matplotlib plot","code":"gca().get_lines()[n].get_xydata()","relevant":"data = np.random.normal(0, 1, (10, 10))?_split_?x = foo(1, 2)\nx(3)\ny = foo(100, 0)\ny(1)\nx(1)?_split_?strs = repr(s)\nstrs\neval(strs)?_split_?"}
{"nl":"How to get the N maximum values per row in a numpy ndarray?","code":"A[:, -2:]","relevant":"\"\"\"123456\"\"\"[2::-2]?_split_?def __enter__(a):\n    print('enter2')?_split_?plt.xlim([0, 3])\nplt.ylim([-4, 2])?_split_?"}
{"nl":"MultiValueDictKeyError in Django","code":"request.GET.get('username', '')","relevant":"loaded = json.loads(condition)?_split_?stdout, stderr = p.communicate()\nprint(stdout)?_split_?sock = socket.create_connection((self.host, self.port), self.timeout, self.\n    source_address)\nif self._tunnel_host:\n    self.sock = sock\nself._tunnel()\nself.sock = ssl.wrap_socket(sock, self.key_file, self.cert_file,\n    ssl_version=ssl.PROTOCOL_TLSv1)\nhttplib.HTTPSConnection.connect = connect\nopener = urllib.request.build_opener()\nf = opener.open('https:\/\/www.google.com\/')?_split_?"}
{"nl":"Any way to properly pretty-print ordered dictionaries in Python?","code":"pprint(dict(list(o.items())))","relevant":"import numpy as np\nfrom gensim.models import Word2Vec\nfrom gensim.models.word2vec import LineSentence?_split_?print('Hello World!')?_split_?f.__setitem__(Ellipsis, 100)?_split_?"}
{"nl":"Django can't find URL pattern","code":"url('^$', include('sms.urls')),","relevant":"a1, a2 = np.indices(ind.shape)\nprint(X[ind, a1, a2])\nprint(Y[ind, a1, a2])?_split_?print(line)?_split_?class AvatarProfileForm(ProfileForm):\n    profile_avatar = forms.ImageField()\n\n\nclass Meta(ProfileForm.Meta):\n    fields = ProfileForm.Meta.fields + ['profile_avatar']?_split_?"}
{"nl":"Django can't find URL pattern","code":"url('^', include('sms.urls')),","relevant":"a1, a2 = np.indices(ind.shape)\nprint(X[ind, a1, a2])\nprint(Y[ind, a1, a2])?_split_?print(line)?_split_?class AvatarProfileForm(ProfileForm):\n    profile_avatar = forms.ImageField()\n\n\nclass Meta(ProfileForm.Meta):\n    fields = ProfileForm.Meta.fields + ['profile_avatar']?_split_?"}
{"nl":"Pythonic way to get the largest item in a list","code":"max_item = max(a_list, key=operator.itemgetter(1))","relevant":"id(10 + 4j)\nid(10 + 4j)?_split_?fig, ax = plt.subplots()\nim = ax.contourf(xi, yi, zi)?_split_?graph.post(path='me\/feed', message='Your message here')?_split_?"}
{"nl":"Pythonic way to get the largest item in a list","code":"max(a_list, key=operator.itemgetter(1))","relevant":"id(10 + 4j)\nid(10 + 4j)?_split_?fig, ax = plt.subplots()\nim = ax.contourf(xi, yi, zi)?_split_?graph.post(path='me\/feed', message='Your message here')?_split_?"}
{"nl":"How to iterate over time periods in pandas","code":"s.resample('3M', how='sum')","relevant":"with codecs.open('test.xml', 'r', 'utf-8') as inp:\n    xml = minidom.parseString(inp.read().encode('utf-8'))\nwith codecs.open('out.xml', 'w', 'utf-8') as out:\n    xml.writexml(out)?_split_?def store(node):\n    pass?_split_?self.input.close()?_split_?"}
{"nl":"how to extract elements from a list in python?","code":"[a[i] for i in (1, 2, 5)]","relevant":"False, True\nTrue, False?_split_?a = [1, 2]\nb = [1, 2]?_split_?from datetime import date, timedelta\nimport calendar\nstart_date = date(1983, 12, 23)\ndays_in_month = calendar.monthrange(start_date.year, start_date.month)[1]\nstart_date + timedelta(days=days_in_month)?_split_?"}
{"nl":"Python: Filter lines from a text file which contain a particular word","code":"[line for line in open('textfile') if 'apple' in line]","relevant":"if __name__ == '__main__':\n    sys.path.append(os.getcwd())\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'main.settings')\nimport django?_split_?dw.writerow(dict((fn, fn) for fn in dr.fieldnames))?_split_?d = [('xxx', 'yyy') for i in range(8154741)]?_split_?"}
{"nl":"How to convert a Date string to a DateTime object?","code":"datetime.datetime.strptime(s, '%Y-%m-%dT%H:%M:%SZ')","relevant":"end\nfclose(fid)\nm = memmapfile(filename, 'Format', 'double', 'Writable', true)?_split_?x = numpy.arange(n)?_split_?pass?_split_?"}
{"nl":"Reading tab-delimited file with Pandas - works on Windows, but not on Mac","code":"pandas.read_csv(filename, sep='\\t', lineterminator='\\r')","relevant":"set_link_color_palette(['#B061FF', '#61ffff'])?_split_?from dateutil.parser import parse\nparse('2003-09-25')?_split_?import subprocess\nproc = subprocess.Popen(['myutility', '-i', s.encode('utf8')], stdout=\n    subprocess.PIPE, stdin=subprocess.PIPE, stderr=subprocess.STDOUT)\nstdout, stderr = proc.communicate()?_split_?"}
{"nl":"Replace first occurence of string","code":"'longlongTESTstringTEST'.replace('TEST', '?', 1)","relevant":"from textwrap import wrap\n\ndef getAbstract(text, lines=5, screenwidth=100):\n    width = len(' '.join([line for block in text.splitlines() for line in\n        wrap(block, width=screenwidth)][:lines]))\nreturn text[:width] + '...'?_split_?shell = Dispatch('WScript.Shell')?_split_?my_list = ['name1@1111', 'name2@2222', 'name3@3333']\ndict(i.split('@') for i in my_list)?_split_?"}
{"nl":"How can I zip file with a flattened directory structure using Zipfile in Python?","code":"archive.write(pdffile, os.path.basename(pdffile))","relevant":"a = np.array([0, 1, 0, 1, 1])\n(a[:, (None)] != np.arange(2)).astype(int)?_split_?body.text = 'STUFF EVERYWHERE!'?_split_?def cmp_func(a, b):\n    pass?_split_?"}
{"nl":"Elegant way to create a dictionary of pairs, from a list of tuples?","code":"dict(x[1:] for x in reversed(myListOfTuples))","relevant":"self.output_box.configure(state='disabled')\n\ndef somefunction():\n    self.output_box.configure(state='normal')?_split_?import itertools?_split_?for i in range(0, frames):\n    pass?_split_?"}
{"nl":"How to subtract two lists in python","code":"[(x1 - x2) for x1, x2 in zip(List1, List2)]","relevant":"import re\ns = 'u:sads asdas asdsad n:sadasda as:adds sdasd dasd a:sed eee'\nre.split('\\\\s(?=[a-z]:)', s)?_split_?cls.flag = False?_split_?a = np.arange(4)\ndf = pd.DataFrame(np.repeat([1, 2, 3, 4], 4).reshape(4, -1))?_split_?"}
{"nl":"How to tell if string starts with a number?","code":"string[0].isdigit()","relevant":"quality = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])?_split_?return 0?_split_?instance.save()\npost_save.connect(my_post_save_handler)?_split_?"}
{"nl":"How to tell if string starts with a number?","code":"strg.startswith(('0', '1', '2', '3', '4', '5', '6', '7', '8', '9'))","relevant":"quality = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])?_split_?return 0?_split_?instance.save()\npost_save.connect(my_post_save_handler)?_split_?"}
{"nl":"How can I find script's directory with Python?","code":"print(os.path.dirname(os.path.realpath(__file__)))","relevant":"newSingle.getHeader().setField(transacttime)?_split_?CE, BD, BE, BF, BC?_split_?for line in reader:\n    pass?_split_?"}
{"nl":"Finding the surrounding sentence of a char\/word in a string","code":"re.split('(?<=\\\\?|!|\\\\.)\\\\s{0,2}(?=[A-Z]|$)', text)","relevant":"sys.exit(a.exec_())?_split_?defl = cls.default?_split_?'\/path\/to\/Anaconda\/python', '-u'?_split_?"}
{"nl":"Plotting a list of (x, y) coordinates in python matplotlib","code":"plt.scatter(*zip(*li))","relevant":"print('%s: %s' % (k, v))?_split_?print('ERROR: {0} => {1} != {2}'.format(test, result, answer))?_split_?probs = np.fromiter(map(hashes.get, nested_loop_iter), dtype=float)?_split_?"}
{"nl":"Rearrange tuple of tuples in Python","code":"tuple(zip(*t))","relevant":"value_dict = {'on': True, 'off': False, 'switch': None}?_split_?temp = []\nfor i in zip(a, b):\n    for j in i:\n        temp.append(j)?_split_?data.append(el.text)?_split_?"}
{"nl":"Find Average of Every Three Columns in Pandas dataframe","code":"df.groupby(np.arange(len(df.columns)) \/\/ 3, axis=1).mean()","relevant":"if len(fields) != 5:\n    pass?_split_?if form.is_valid():\n    profile = form.save(commit=False)?_split_?'verts', 'rasterized', 'linestyle', 'transform', 'picker', 'capstyle'?_split_?"}
{"nl":"How do I convert a list of ascii values to a string in python?","code":"\"\"\"\"\"\".join(chr(i) for i in L)","relevant":"import numpy as np\nfig = plt.figure()?_split_?crop_img[i] = [0, 0, 0]?_split_?r1 = requests.post('http:\/\/www.yourapp.com\/login')?_split_?"}
{"nl":"Python 2.7 Counting number of dictionary items with given value","code":"sum(x == chosen_value for x in list(d.values()))","relevant":"def cleanup(chunk):\n    return '\\n'.join(st for st in chunk.split('\\n') if not (st and st[0] ==\n        '>'))?_split_?return m_menus.size()?_split_?import re\na = ['10people', '5cars']\n[re.match('^(\\\\d+)([a-zA-Z]+)$', x).groups() for x in a]?_split_?"}
{"nl":"Python 2.7 Counting number of dictionary items with given value","code":"sum(1 for x in list(d.values()) if some_condition(x))","relevant":"def cleanup(chunk):\n    return '\\n'.join(st for st in chunk.split('\\n') if not (st and st[0] ==\n        '>'))?_split_?return m_menus.size()?_split_?import re\na = ['10people', '5cars']\n[re.match('^(\\\\d+)([a-zA-Z]+)$', x).groups() for x in a]?_split_?"}
{"nl":"convert double to float in Python","code":"struct.unpack('f', struct.pack('f', 0.00582811585976))","relevant":"x, y = line.get_xydata()[0]?_split_?a = a.rename(columns={(0): 'SRT'})\na = a.T?_split_?data[name].append(value)?_split_?"}
{"nl":"Converting datetime.date to UTC timestamp in Python","code":"timestamp = (dt - datetime(1970, 1, 1)).total_seconds()","relevant":"md5Hash = md5.new\nsomedata = 'foobar'\nhashstring = md5Hash(somedata).hexdigest()?_split_?image = Image.open(fname).convert('L')?_split_?df[list('ABCD')] = df[list('ABCD')].astype(int)?_split_?"}
{"nl":"Custom sorting in pandas dataframe","code":"df.sort('m')","relevant":"Bar(income_df, notebook=True).show()?_split_?import matplotlib.pyplot as plt?_split_?driver.get('http:\/\/www.google.com')\ndriver.find_element_by_css_selector('input')?_split_?"}
{"nl":"How to sort with lambda in Python","code":"a = sorted(a, key=lambda x: x.modified, reverse=True)","relevant":"plt.axis('scaled')?_split_?class Meta:\n    model = Membership\nfields = 'id', 'name', 'join_date'?_split_?from itertools import groupby\nfor key, rows in groupby(csv.reader(open('foo.csv')), lambda row: row[0]):\n    with open('%s.txt' % key, 'w') as output:\n        for row in rows:\n            output.write(','.join(row) + '\\n')?_split_?"}
{"nl":"How can I print the Truth value of a variable?","code":"print(bool(a))","relevant":"\"\"\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\"\"\"?_split_?def crypto_aead_chacha20poly1305_encrypt(message, ad, nonce, key):\n    mlen = ctypes.c_ulonglong(len(message))\nadlen = ctypes.c_ulonglong(len(ad))\nc = ctypes.create_string_buffer(mlen.value + 16)\nclen = ctypes.c_ulonglong(0)\nsodium.crypto_aead_chacha20poly1305_encrypt(c, ctypes.byref(clen), message,\n    mlen, ad, adlen, None, nonce, key)?_split_?lamp_object.location = 5.0, 5.0, 5.0\nlamp_object.select = True\nscene.objects.active = lamp_object?_split_?"}
{"nl":"How can I change a specific row label in a Pandas dataframe?","code":"df = df.rename(index={last: 'a'})","relevant":"df.loc[[1, 4], 'Value'] = 'bad'\ndf.loc[[0, 3], 'Value'] = 'good'\ndf?_split_?def __str__(self):\n    \"\"\" Printable representation \"\"\"?_split_?print(('external_attr', info.external_attr))?_split_?"}
{"nl":"Scikit-learn: How to run KMeans on a one-dimensional array?","code":"km.fit(x.reshape(-1, 1))","relevant":"elem.clear()?_split_?if any(s in 'aqwerqwerqwer' for s in lst):\n    print(True)\nif any(s in 'qweqweqwe' for s in lst):\n    pass?_split_?raise Error('Cannot run funcC now')?_split_?"}
{"nl":"sorting a list in python","code":"sorted(words, key=lambda x: 'a' + x if x.startswith('s') else 'b' + x)","relevant":"return True?_split_?matches = re.match('^1?$|^(11+?)\\\\1+$', ones)\nif matches:\n    div1 = n if matches.group(1) is None else len(matches.group(1))?_split_?od[1] = 'one'?_split_?"}
{"nl":"login to a site using python and opening the login site in the browser","code":"webbrowser.open('http:\/\/somesite.com\/adminpanel\/index.php')","relevant":"N = 1.0 \/ 5\nll = [[(x * N) for x in y] for y in hh]?_split_?struct[0]?_split_?text = \"\"\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam ornare\ntempor lacus, quis pellentesque diam tempus vitae. Morbi justo mauris,\ncongue sit amet imperdiet ipsum dolor sit amet, consectetur adipiscing elit. Nullam ornare\ntempor lacus, quis pellentesque diam\"\"\"\ntokens = nltk.word_tokenize(text)?_split_?"}
{"nl":"Pythonic way to fetch all elements in a dictionary, falling between two keys?","code":"dict((k, v) for k, v in parent_dict.items() if 2 < k < 4)","relevant":"print(item[0], ', '.join(map(str, item[1:])))?_split_?multirange_loop([1, 2, 3])?_split_?from subprocess import Popen, PIPE\noutput = Popen(['command-to-run', 'some-argument'], stdout=PIPE)\nprint(output.stdout.read())?_split_?"}
{"nl":"Pythonic way to fetch all elements in a dictionary, falling between two keys?","code":"dict((k, v) for k, v in parent_dict.items() if k > 2 and k < 4)","relevant":"print(item[0], ', '.join(map(str, item[1:])))?_split_?multirange_loop([1, 2, 3])?_split_?from subprocess import Popen, PIPE\noutput = Popen(['command-to-run', 'some-argument'], stdout=PIPE)\nprint(output.stdout.read())?_split_?"}
{"nl":"python sorting two lists","code":"[list(x) for x in zip(*sorted(zip(list1, list2), key=lambda pair: pair[0]))]","relevant":"def func():\n    print('In my super meta #2')?_split_?face_img = face_img.resize((30, 40), Image.ANTIALIAS)?_split_?plt.show()?_split_?"}
{"nl":"number of values in a list greater than a certain number","code":"sum(((i > 5) for i in j))","relevant":"for url in urllist:\n    time.sleep(10)?_split_?print()?_split_?decrypted = self.encrypter.decrypt(encrypted)?_split_?"}
{"nl":"number of values in a list greater than a certain number","code":"len([1 for i in j if (i > 5)])","relevant":"for url in urllist:\n    time.sleep(10)?_split_?print()?_split_?decrypted = self.encrypter.decrypt(encrypted)?_split_?"}
{"nl":"number of values in a list greater than a certain number","code":"j = np.array(j)\nsum((j > i))","relevant":"for url in urllist:\n    time.sleep(10)?_split_?print()?_split_?decrypted = self.encrypter.decrypt(encrypted)?_split_?"}
{"nl":"Python: elegant way of creating a list of tuples?","code":"[(x + tuple(y)) for x, y in zip(zip(a, b), c)]","relevant":"stream.write(p + '\\n')?_split_?thread = threading.Thread(target=current_post.post)?_split_?name = 'georg fritz ferdinand hannibal van trapp'?_split_?"}
{"nl":"Changing file permission in python","code":"os.chmod(path, stat.S_IRUSR | stat.S_IRGRP | stat.S_IROTH)","relevant":"try:\n    k.index(s)\nexcept ValueError:\n    pass\nelse:\n    pass?_split_?string = '%(key)s hello world %(key)s hello world %(key)s' % {'key': s}?_split_?nonzero(t == 8)\nnonzero(t == 8)[0][0]?_split_?"}
{"nl":"Multiple files for one argument in argparse Python 2.7","code":"parser.add_argument('file', nargs='*')","relevant":"if __name__ == '__main__':\n    pass?_split_?import matplotlib.pyplot as plt?_split_?df = pd.DataFrame({'A': np.arange(500), 'B': np.arange(500.0)})?_split_?"}
{"nl":"Comparing values in two lists in Python","code":"z = [(i == j) for i, j in zip(x, y)]","relevant":"class B(FooBase):\n\n    def foo(self):\n        super(B, self).foo()\nprint('B.foo()')\n\n\nclass C(A, B):\n\n    def foo(self):\n        super(C, self).foo()?_split_?raise forms.ValidationError('You must confirm your password')?_split_?columns = zip(*rows)\nprint(columns[0])?_split_?"}
{"nl":"Comparing values in two lists in Python","code":"[(x[i] == y[i]) for i in range(len(x))]","relevant":"class B(FooBase):\n\n    def foo(self):\n        super(B, self).foo()\nprint('B.foo()')\n\n\nclass C(A, B):\n\n    def foo(self):\n        super(C, self).foo()?_split_?raise forms.ValidationError('You must confirm your password')?_split_?columns = zip(*rows)\nprint(columns[0])?_split_?"}
{"nl":"Python: Extract numbers from a string","code":"[int(s) for s in re.findall('\\\\b\\\\d+\\\\b', \"he33llo 42 I'm a 32 string 30\")]","relevant":"for i in range(1, now.day + 1):\n    pass?_split_?print(indention(test_string))?_split_?horizonPlot(xx, yy)?_split_?"}
{"nl":"Create an empty data frame with index from another data frame","code":"df2 = pd.DataFrame(index=df1.index)","relevant":"kw = {'a': True}?_split_?import subprocess\n\ndef connect_to_network(name):\n    process = subprocess.Popen('netsh wlan connect {0}'.format(name), shell\n        =True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)?_split_?def geometric_matrix_multiplication(matrix1, matrix2):\n    pass?_split_?"}
{"nl":"How do I convert a string 2 bytes long to an integer in python","code":"struct.unpack('h', pS[0:2])","relevant":"def old(im):\n    rows, cols = im.shape\ns = []\nfor x in range(1, rows):\n    for y in range(1, cols):\n        s.append(im[x - 1:x + 2, y - 1:y + 2])\nreturn s?_split_?doc = ET.fromstring(content)?_split_?2, 4, 6?_split_?"}
{"nl":"Printing lists onto tables in python","code":"print('\\n'.join('  '.join(map(str, row)) for row in t))","relevant":"clib.register_callback(o)?_split_?df2 = merge(df1, csv2, **kw2)?_split_?accumulationList.extend(doSomething(x))?_split_?"}
{"nl":"Sort Pandas Dataframe by Date","code":"df.sort_values(by='Date')","relevant":"pass?_split_?-(-a) ** (1.0 \/ 3.0)?_split_?s.write('2')?_split_?"}
{"nl":"How can I check if a checkbox is checked in Selenium Python Webdriver?","code":"driver.find_element_by_name('<check_box_name>').is_selected()","relevant":"var1 = [{'a': 1, 'b': 2}, {'c': 2, 'd': 5, 'h': 4}, {'c': 2, 'd': 5, 'e': 4}]\nvar2 = [{'a': 3, 'b': 2}, {'c': 1, 'd': 5, 'h': 4}, {'c': 5, 'd': 5, 'e': 4}]\nres = []\nfor i in range(len(var1)):\n    dic = {}?_split_?image = image.resize((250, 250), Image.ANTIALIAS)\nself.pw.pic = ImageTk.PhotoImage(image)?_split_?'Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings', 0?_split_?"}
{"nl":"How can I check if a checkbox is checked in Selenium Python Webdriver?","code":"driver.find_element_by_id('<check_box_id>').is_selected()","relevant":"var1 = [{'a': 1, 'b': 2}, {'c': 2, 'd': 5, 'h': 4}, {'c': 2, 'd': 5, 'e': 4}]\nvar2 = [{'a': 3, 'b': 2}, {'c': 1, 'd': 5, 'h': 4}, {'c': 5, 'd': 5, 'e': 4}]\nres = []\nfor i in range(len(var1)):\n    dic = {}?_split_?image = image.resize((250, 250), Image.ANTIALIAS)\nself.pw.pic = ImageTk.PhotoImage(image)?_split_?'Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings', 0?_split_?"}
{"nl":"Is it possible to use 'else' in a python list comprehension?","code":"[(a if a else 2) for a in [0, 1, 0, 3]]","relevant":"df.FREQ = pd.cut(df.FREQ, bins=bins, labels=labels)\ndf = df.groupby(['FREQ', 'EVALUATION_GRADE'])['EVALUATION_GRADE'].size()?_split_?foo.dtypes\nfoo.ix[0, 'a'] += 1?_split_?pass?_split_?"}
{"nl":"Parsing string containing Unicode character names","code":"'M\\\\N{AMPERSAND}M\\\\N{APOSTROPHE}s'.encode().decode('unicode-escape')","relevant":"for x in range(len(newY)):\n    pass?_split_?l1 = ['Long', 'Med']?_split_?def remove_listcomp(L, delitems):\n    return [x for x in L if x not in delitems]?_split_?"}
{"nl":"Parsing string containing Unicode character names","code":"'M\\\\N{AMPERSAND}M\\\\N{APOSTROPHE}s'.decode('unicode-escape')","relevant":"for x in range(len(newY)):\n    pass?_split_?l1 = ['Long', 'Med']?_split_?def remove_listcomp(L, delitems):\n    return [x for x in L if x not in delitems]?_split_?"}
{"nl":"Convert unicode codepoint to UTF8 hex in python","code":"chr(int('fd9b', 16)).encode('utf-8')","relevant":"openlist.put((heuristicf(neighbor), node(neighbor, current.g + 1, current)))?_split_?raise ValueError(name + ' must be positive')?_split_?def dispatch(self, request, *args, **kwargs):\n    pass?_split_?"}
{"nl":"How can I get Python to use upper case letters to print hex values?","code":"print('0x%X' % value)","relevant":"pos = f.tell()?_split_?factors = list(primefac.primefac(n))?_split_?tree = [[['C1', 'C2', 'C3'], ['C4', 'C5']], [['C6', 'C7', 'C8'], ['C9']]]?_split_?"}
{"nl":"How to remove empty string in a list?","code":"cleaned = [x for x in your_list if x]","relevant":"keyword = 'public'\nexpr = Keyword(keyword).ignore(javaStyleComment | dblQuotedString)?_split_?dic[g][y] = df[(df[Gender] == g) & (df[Year] == y)]?_split_?import zipimport\nimport site?_split_?"}
{"nl":"Python: Want to use a string as a slice specifier","code":"slice(*[(int(i.strip()) if i else None) for i in string_slice.split(':')])","relevant":"return '\\n'.join([' '.join(p) for p in pairs if p[1] != 'Simth'])\ndf['Full Name'] = df.apply(combine_names, axis=1)?_split_?os.system('clear')?_split_?DATA = 'QUWESEADFQDFSAEDFS'?_split_?"}
{"nl":"Beautiful Soup Using Regex to Find Tags?","code":"soup.find_all(['a', 'div'])","relevant":"def __getattr__(self, attr):\n    return getattr(self._instance, attr)?_split_?df\ndf[['A']]\ndf[[0]]\ndf.loc[:, (['A'])]\ndf.iloc[:, ([0])]?_split_?out = cv2.VideoWriter('out_video.avi', fourcc, 24, (704, 240))\nc = cv2.VideoCapture('in_video.avi')\nwhile 1:\n    _, f = c.read()\nif f is None:\n    break\nf2 = f.copy()\nout.write(f2)\nout.release()\ncv2.destroyAllWindows()\nc.release()?_split_?"}
{"nl":"Get function name as a string in python","code":"print(func.__name__)","relevant":"ssh.exec_command()?_split_?if times is None:\n    return it.starmap(func, it.repeat(args))\nreturn it.starmap(func, it.repeat(args, times))?_split_?data_json = json.dumps(data)\npayload = {'json_payload': data_json, 'apikey': 'YOUR_API_KEY_HERE'}\nr = requests.get('http:\/\/myserver\/emoncms2\/api\/post', data=payload)?_split_?"}
{"nl":"How to convert dictionary into string","code":"\"\"\"\"\"\".join('{}{}'.format(key, val) for key, val in sorted(adict.items()))","relevant":"def flatten_headers(headers):\n    pass?_split_?[(int(i) if int(i) == i else i) for i in li]?_split_?pylab.ylim(-1.5, 2.0)\npylab.show()?_split_?"}
{"nl":"How to convert dictionary into string","code":"\"\"\"\"\"\".join('{}{}'.format(key, val) for key, val in list(adict.items()))","relevant":"def flatten_headers(headers):\n    pass?_split_?[(int(i) if int(i) == i else i) for i in li]?_split_?pylab.ylim(-1.5, 2.0)\npylab.show()?_split_?"}
{"nl":"copy a list","code":"new_list = old_list[:]","relevant":"output.write(resource.read())\noutput.close()?_split_?def __init__(self, *args, **kwargs):\n    pass?_split_?from toolz.dicttoolz import merge?_split_?"}
{"nl":"copy a list","code":"new_list = list(old_list)","relevant":"output.write(resource.read())\noutput.close()?_split_?def __init__(self, *args, **kwargs):\n    pass?_split_?from toolz.dicttoolz import merge?_split_?"}
{"nl":"copy a list","code":"new_list = copy.copy(old_list)","relevant":"output.write(resource.read())\noutput.close()?_split_?def __init__(self, *args, **kwargs):\n    pass?_split_?from toolz.dicttoolz import merge?_split_?"}
{"nl":"copy a list","code":"new_list = copy.deepcopy(old_list)","relevant":"output.write(resource.read())\noutput.close()?_split_?def __init__(self, *args, **kwargs):\n    pass?_split_?from toolz.dicttoolz import merge?_split_?"}
{"nl":"copy a list","code":"[i for i in old_list]","relevant":"output.write(resource.read())\noutput.close()?_split_?def __init__(self, *args, **kwargs):\n    pass?_split_?from toolz.dicttoolz import merge?_split_?"}
{"nl":"Remove or adapt border of frame of legend using matplotlib","code":"plt.legend(frameon=False)","relevant":"a = list(range(-7, 259))?_split_?thread1.start()?_split_?other = [u for u in other if u.key() != user.key()]\nif other:\n    pass?_split_?"}
{"nl":"How to work with surrogate pairs in Python?","code":"\"\"\"\\\\ud83d\\\\ude4f\"\"\".encode('utf-16', 'surrogatepass').decode('utf-16')","relevant":"for i in range(0, N):\n    samples[i] = np.random.exponential()?_split_?layout = bokeh.layouts.gridplot([[p], [color_select]])\nbokeh.io.output_file('output.html')\nbokeh.io.show(layout)?_split_?df?_split_?"}
{"nl":"Calling a function of a module from a string with the function's name in Python","code":"globals()['myfunction']()","relevant":"return PyInt_FromLong(x)?_split_?print(20000000000.0)\n20000000000.0\nprint(2 * 10 ** 10)\n20000000000?_split_?def recvall(sock, size):\n    msg = ''?_split_?"}
{"nl":"Checking if a website is up","code":"urllib.request.urlopen('http:\/\/www.stackoverflow.com').getcode()","relevant":"import test?_split_?df['categories'] = (df.groups != df.groups.shift()).cumsum()\nf = {'start': ['first'], 'end': ['last'], 'groups': ['first']}?_split_?sql = 'INSERT INTO ep_soft(ip_address, soft_data) VALUES (%s, %s)'?_split_?"}
{"nl":"Checking if a website is up","code":"conn = httplib.HTTPConnection('www.python.org')\nconn.request('HEAD', '\/')\nr1 = conn.getresponse()\nprint(r1.status, r1.reason)","relevant":"import test?_split_?df['categories'] = (df.groups != df.groups.shift()).cumsum()\nf = {'start': ['first'], 'end': ['last'], 'groups': ['first']}?_split_?sql = 'INSERT INTO ep_soft(ip_address, soft_data) VALUES (%s, %s)'?_split_?"}
{"nl":"Checking if a website is up","code":"r = requests.head(url)\nreturn (r.status_code == 200)","relevant":"import test?_split_?df['categories'] = (df.groups != df.groups.shift()).cumsum()\nf = {'start': ['first'], 'end': ['last'], 'groups': ['first']}?_split_?sql = 'INSERT INTO ep_soft(ip_address, soft_data) VALUES (%s, %s)'?_split_?"}
{"nl":"Checking if a website is up","code":"print(urllib.request.urlopen('http:\/\/www.stackoverflow.com').getcode())","relevant":"import test?_split_?df['categories'] = (df.groups != df.groups.shift()).cumsum()\nf = {'start': ['first'], 'end': ['last'], 'groups': ['first']}?_split_?sql = 'INSERT INTO ep_soft(ip_address, soft_data) VALUES (%s, %s)'?_split_?"}
{"nl":"Selenium open pop up window [Python]","code":"driver.find_element_by_css_selector(\"a[href^='javascript']\").click()","relevant":"import re?_split_?np.einsum('ij,jk->k', a, b)?_split_?def printFoo():\n    print(bar.returnBar())?_split_?"}
{"nl":"How to store data frame using PANDAS, Python","code":"df.to_pickle(file_name)","relevant":"for line in data:\n    l.extend(map(int, r.findall(line)))?_split_?import ast\ntree = ast.parse('import a; from b import c')\ntree.body\ntree.body[0].names[0].name?_split_?target_date_time_ms = 200000\nbase_datetime = datetime.datetime(1970, 1, 1)\ndelta = datetime.timedelta(0, 0, 0, target_date_time_ms)?_split_?"}
{"nl":"Pandas: Mean of columns with the same names","code":"df.groupby(by=df.columns, axis=1).mean()","relevant":"import itertools\n\ndef isa_group_separator(line):\n    return line == '\\n'\nwith open('data_file') as f:\n    for key, group in itertools.groupby(f, isa_group_separator):\n        if not key:\n            data = {}\nfor item in group:\n    field, value = item.split(':')\nvalue = value.strip()\ndata[field] = value\nprint('{FamilyN} {Name} {Age}'.format(**data))?_split_?def decode_single(bytes):\n    pass?_split_?singles.append(p)?_split_?"}
{"nl":"How to perform double sort inside an array?","code":"bar.sort(key=lambda x: (x.attrb1, x.attrb2), reverse=True)","relevant":"limit += 1?_split_?x = h5file.createCArray(root, 'x', tb.Float64Atom(), shape=(ndim, ndim))\nx[:100, :100] = np.random.random(size=(100, 100))?_split_?scanner.parse_config('enable')\nimg = Image.open('br.png').convert('L')?_split_?"}
{"nl":"How to get alpha value of a PNG image with PIL?","code":"alpha = img.split()[-1]","relevant":"print(Q.dot(Q.T))?_split_?Wizard.WaitNot('visible')?_split_?for file in children['items']:\n    pass?_split_?"}
{"nl":"How to get the length of words in a sentence?","code":"[len(x) for x in s.split()]","relevant":"authors = re.search('Author\\\\(s\\\\)\\\\s*:\\\\s*(.*?)^[^\\\\s]', text, re.DOTALL |\n    re.MULTILINE).group(1)?_split_?es = Elasticsearch()\ntext = 'ra'\nsuggest_dictionary = {'my-entity-suggest': {'text': text, 'completion': {\n    'field': 'suggest'}}}\nquery_dictionary = {'suggest': suggest_dictionary}\nres = es.search(index='auto_sugg', doc_type='entity', body=query_dictionary)\nprint(res)?_split_?s?_split_?"}
{"nl":"Find a specific tag with BeautifulSoup","code":"soup.findAll('div', style='width=300px;')","relevant":"import matplotlib.pyplot as plt\nax = plt.gca()\nax.plot(x, y, label='$\\\\sin (x)$')\nax.legend()?_split_?print('Hey %(crowd)s! Would you like some %(fruits)?' % {'crowd': 'World',\n    'fruit': 'Pear'})?_split_?for point1, point2, point3 in combinations(points, 3):\n    pass?_split_?"}
{"nl":"Using a Python dict for a SQL INSERT statement","code":"cursor.execute(sql, list(myDict.values()))","relevant":"if e.errno == errno.ENOENT:\n    pass?_split_?client = DropboxClient(access_token)\nfor root, dirs, files in os.walk(local_directory):\n    for filename in files:\n        local_path = os.path.join(root, filename)\nrelative_path = os.path.relpath(local_path, local_directory)\ndropbox_path = os.path.join(dropbox_destination, relative_path)\nwith open(local_path, 'rb') as f:\n    client.put_file(dropbox_path, f)?_split_?if '> ' in line:\n    pass?_split_?"}
{"nl":"Preserving Column Order - Python Pandas and Column Concat","code":"df.to_csv('Result.csv', index=False, sep=' ')","relevant":"if not 'LD_LIBRARY_PATH' in os.environ:\n    os.environ['LD_LIBRARY_PATH'] = ':' + oracle_libs\nelif not oracle_libs in os.environ.get('LD_LIBRARY_PATH'):\n    os.environ['LD_LIBRARY_PATH'] += ':' + oracle_libs?_split_?titles = ['foo', 'bar', 'buz']?_split_?s = 'abc\\ndef\\nxyz'\nprint(s)\nprint('\\n    '.join(s.split('\\n')))?_split_?"}
{"nl":"Python: Extract variables out of namespace","code":"globals().update(vars(args))","relevant":"sorted([(i, j) for j in range(10) for i in range(10) if j > i])?_split_?self.ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\nself.ssh.connect(host, username=user, password=psw, port=22)?_split_?def create_model():\n    pass?_split_?"}
{"nl":"Regular expression to return all characters between two special characters","code":"re.findall('\\\\[(.*?)\\\\]', mystring)","relevant":"def fix(line):\n    \"\"\"\n    returns the corrected line, with all apostrophes prefixed by an escape character\n    >>> fix(\"DOUG\\\\'S\")\n    \"DOUG\\\\\\\\'S\"\n    >>> fix(\"DOUG'S\") == r\"DOUG\\\\'S\"\n    True\n    >>> fix(\"DOUG'S\")\n    \"DOUG\\\\\\\\'S\"\n    \"\"\"?_split_?db = SQLAlchemy()\n\ndef create_app():\n    app = Flask(__name__)?_split_?l.sort(cmp=lcmp)?_split_?"}
{"nl":"Python, print all floats to 2 decimal places in output","code":"print('%.2f kg = %.2f lb = %.2f gal = %.2f l' % (var1, var2, var3, var4))","relevant":"temp = np.cumsum(X, axis=0)\nXcum = np.empty((T - H + 1, k))\nXcum[0] = temp[H - 1]\nXcum[1:] = temp[H:] - temp[:-H]?_split_?np.hstack((arr.reshape(x * y, z), indices))?_split_?idx = np.argsort(dst)[:f]\nreturn np.vstack((dst[idx], rows[idx], cols[idx])).T?_split_?"}
{"nl":"The best way to filter a dictionary in Python","code":"d = dict((k, v) for k, v in d.items() if v > 0)","relevant":"_enum = Suppress('enum')?_split_?import requests?_split_??_split_?"}
{"nl":"The best way to filter a dictionary in Python","code":"d = {k: v for k, v in list(d.items()) if v > 0}","relevant":"_enum = Suppress('enum')?_split_?import requests?_split_??_split_?"}
{"nl":"In Pandas how do I convert a string of date strings to datetime objects and put them in a DataFrame?","code":"pd.to_datetime(pd.Series(date_stngs))","relevant":"lis = ['1', '2', 'A,B,C,D', '7', '8']?_split_?x = np.linspace(0, 2, 1000)?_split_?import ast\nresult = ast.literal_eval(\"{'a': 1, 'b': 2}\")\nassert type(result) is dict?_split_?"}
{"nl":"Print the complete string of a pandas dataframe","code":"df.iloc[2, 0]","relevant":"from itertools import combinations?_split_?super(threading.Thread, self).__init__()?_split_?result = defaultdict(int)\nfor myDict in dictList:\n    for k in myDict:\n        pass?_split_?"}
{"nl":"How to change the font size on a matplotlib plot","code":"matplotlib.rcParams.update({'font.size': 22})","relevant":"if match:\n    pass?_split_?def foo(self):\n    pass\n\n\nclass Foo:\n    pass\nFoo.bar = foo?_split_?{a: 1, b: 2}?_split_?"}
{"nl":"Convert Python dict into a dataframe","code":"pd.DataFrame(list(d.items()), columns=['Date', 'DateValue'])","relevant":"pos = f.tell()?_split_?m = p.match('aa')?_split_?ax.plot(list1, list2)\nfig.savefig('fig1.png', dpi=300)?_split_?"}
{"nl":"Pandas: Elementwise multiplication of two dataframes","code":"pd.DataFrame(df.values * df2.values, columns=df.columns, index=df.index)","relevant":"img.load()?_split_?re.sub('(^|\\\\s)(\\\\S)', repl_func, s)?_split_?d[k1] = {k2.strip(): list(map(str.strip, v.split(',')))}?_split_?"}
{"nl":"How to extract a floating number from a string","code":"re.findall('\\\\d+\\\\.\\\\d+', 'Current Level: 13.4 db.')","relevant":"cmap = colors.ListedColormap(['white', 'red'])\nbounds = [0, 5, 10]?_split_?x = np.arange(0, 3, 0.25)\ny = np.sin(x)\ntxt = \"\"\"\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit,\n    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\n    nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n    reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n    pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n    culpa qui officia deserunt mollit anim id est laborum.\"\"\"\nfig = plt.figure()?_split_?result = pickle.load(pickle_handle)?_split_?"}
{"nl":"How to extract a floating number from a string","code":"re.findall('[-+]?\\\\d*\\\\.\\\\d+|\\\\d+', 'Current Level: -13.2 db or 14.2 or 3')","relevant":"cmap = colors.ListedColormap(['white', 'red'])\nbounds = [0, 5, 10]?_split_?x = np.arange(0, 3, 0.25)\ny = np.sin(x)\ntxt = \"\"\"\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit,\n    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\n    nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n    reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n    pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n    culpa qui officia deserunt mollit anim id est laborum.\"\"\"\nfig = plt.figure()?_split_?result = pickle.load(pickle_handle)?_split_?"}
{"nl":"Convert List to a list of tuples python","code":"zip(it, it, it)","relevant":"if collection is None:\n    err_msg = 'Mongo could not return the collecton - ' + collection_name?_split_?return 0?_split_?return arg.join(value)?_split_?"}
{"nl":"How to lowercase a python dataframe string column if it has missing values?","code":"df['x'].str.lower()","relevant":"x = np.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2,\n    2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4,\n    4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9,\n    10, 10, 11, 12, 13, 14, 14, 15, 19, 19, 21, 23, 25, 27, 28, 30, 31, 36,\n    41, 45, 48, 52, 55, 60, 68, 75, 86, 118, 159, 207, 354])\nmu, sigma = stats.norm.fit(np.log(x))\nmu, sigma\nshape, loc, scale = stats.lognorm.fit(x, floc=0)\nnp.log(scale), shape?_split_?class MainWidget(QtGui.QWidget):\n    pass?_split_?lgd.set_visible(False)\ndraw()?_split_?"}
{"nl":"python append to array in json object","code":"jsobj['a']['b']['e'].append({'f': var6, 'g': var7, 'h': var8})","relevant":"[('D', 'option5'), ('D', 'option1'), ('D', 'option2')]\n[('E', 'option1'), ('E', 'option2'), ('E', 'option3')]?_split_?print(msg.CC)?_split_?return self.ewma_trainer.apply([self.mean, self.variance])?_split_?"}
{"nl":"Most Pythonic way to concatenate strings","code":"\"\"\"\"\"\".join(lst)","relevant":"A[:, (second), (third)].shape?_split_?8?_split_?from collections import defaultdict?_split_?"}
{"nl":"Python: Sum values in a dictionary based on condition","code":"sum(v for v in list(d.values()) if v > 0)","relevant":"widget = MyWidget()?_split_?print(enum.ident, ','.join(enum.names))?_split_?stuff.doCommonStuff()?_split_?"}
{"nl":"Flask application traceback doesn't show up in server log","code":"app.run(debug=True)","relevant":"first_non_nan = nans[nans == False].index[0]?_split_?s = str(x)?_split_?print([c for c in cumsum(['a', 'b', 'c'])])?_split_?"}
{"nl":"How to drop a list of rows from Pandas dataframe?","code":"df.drop(df.index[[1, 3]], inplace=True)","relevant":"from itertools import islice?_split_?sys.modules[modname] = self?_split_?import logging\nif not app.debug:\n    stream_handler = logging.StreamHandler()\nstream_handler.setLevel(logging.INFO)\napp.logger.addHandler(stream_handler)?_split_?"}
{"nl":"pandas DataFrame: replace nan values with average of columns","code":"df.apply(lambda x: x.fillna(x.mean()), axis=0)","relevant":"if ordinal > 59:\n    ordinal -= 1?_split_?ACTOR_CACHE_KEY_PREFIX = 'actor_'?_split_?install('mypackagename')?_split_?"}
{"nl":"How to extract from a list of objects a list of specific attribute?","code":"[o.my_attr for o in my_list]","relevant":"return result?_split_?import matplotlib\nmatplotlib.rcParams['xtick.major.pad'] = 8\nmatplotlib.rcParams['ytick.major.pad'] = 8?_split_?from cryptography.fernet import Fernet?_split_?"}
{"nl":"python get time stamp on file in mm\/dd\/yyyy format","code":"time.strftime('%m\/%d\/%Y', time.gmtime(os.path.getmtime(file)))","relevant":"sys.exit(\"\"\"\nOnly root can run this script\n\"\"\")?_split_?a = tf.Variable(init_a)?_split_?word_pairs = zip(alligned1.split(), alligned2.split())\nfor k, v in itertools.groupby(word_pairs, key=lambda pair: pair[0] == pair[1]):\n    if k:\n        words = [pair[0] for pair in v]\nresults.append(' '.join(words))\nprint(results)?_split_?"}
{"nl":"Python: Check if one dictionary is a subset of another larger dictionary","code":"all(item in list(superset.items()) for item in list(subset.items()))","relevant":"mu, sigma?_split_?datetime.datetime.now(pytz.utc).isoformat()?_split_?def one():\n    pass?_split_?"}
{"nl":"Python: for loop in index assignment","code":"[str(wi) for wi in wordids]","relevant":"Mailbox.pass_('my_password')?_split_?return 0?_split_?print(visitor_print_prefix(expression))?_split_?"}
{"nl":"Indexing a pandas dataframe by integer","code":"df2 = df.reset_index()","relevant":"print(win_percentage)?_split_?url('^.*', MainView.as_view())?_split_?return self.f.seek(offset, whence)?_split_?"}
{"nl":"Convert datetime object to a String of date only in Python","code":"dt.strftime('%m\/%d\/%Y')","relevant":"pprint_off()?_split_?break?_split_?def get_redirect_url(self):\n    if 'id' in self.request.GET:\n        return reverse('target_view', args=(self.request.GET['id'],))?_split_?"}
{"nl":"Python Add Comma Into Number String","code":"print('Total cost is: ${:,.2f}'.format(TotalAmount))","relevant":"img = numpy.zeros([5, 5, 3])?_split_?re.sub('[^\\\\d\\\\.]', '', '$1,000,000.01')?_split_?tbl.get_columns(**{p['path'].split('\/')[-1]: p['value'] for p in patch_data})?_split_?"}
{"nl":"Sum of Every Two Columns in Pandas dataframe","code":"df.groupby(np.arange(len(df.columns)) \/\/ 2 + 1, axis=1).sum().add_prefix('s')","relevant":"print(len(user_timeline))\nfor tweet in user_timeline:\n    tweets.append(tweet['text'])?_split_?df = pd.read_clipboard()\ndf.dropna(axis=0, subset=[['city', 'longitude', 'latitude']], thresh=2)?_split_?ls = ['batting average', '306', 'ERA', '1710']\nls[1] = int(ls[1])?_split_?"}
{"nl":"creating list of random numbers in python","code":"randomList = [random.random() for _ in range(10)]","relevant":"for x in soup.find_all('helloWorld'):\n    pass?_split_?idx = random.choice(indices)?_split_?f, axarr = plt.subplots(1, 3)?_split_?"}
{"nl":"beautifulsoup can't find href in file using regular expression","code":"print(soup.find('a', href=re.compile('.*follow\\\\?page.*')))","relevant":"return self.list[key]?_split_?d = datetime.datetime.strptime('01-01-1904', '%m-%d-%Y')?_split_?windll.inpout32.Out32(portaddress, triggerCode)\ncore.wait(0.05)\nwindll.inpout32.Out32(portaddress, 0)?_split_?"}
{"nl":"In Python, why won't something print without a newline?","code":"sys.stdout.flush()","relevant":"response.xpath('\/\/div[@class=\"d-grid-main\"]')?_split_?import itertools\nlist(itertools.chain(*a))?_split_?print(data[data['tag'].isin(tags)])?_split_?"}
{"nl":"How to get a random value in python dictionary","code":"country, capital = random.choice(list(d.items()))","relevant":"from django.conf import settings?_split_?print(c)?_split_?print(cls.__dict__['instance'])\nprint('still ok')?_split_?"}
{"nl":"Is there a function in python to split a word into a list?","code":"list('Word to Split')","relevant":"s = '2010_05_1'\ntheday = datetime.date(*map(int, s.split('_')))\nprevday = theday - datetime.timedelta(days=1)\nprevday.strftime('%Y_%m_%d')?_split_?channela = sounda.play()?_split_?m1.update('hello, ')?_split_?"}
{"nl":"Regex: How to match words without consecutive vowels?","code":"[w for w in open('file.txt') if not re.search('[aeiou]{2}', w)]","relevant":"plt.imshow(zi, interpolation='nearest')?_split_?xi[xi < xmin] = xmin?_split_?x = map(list, list(results))?_split_?"}
{"nl":"Using a RegEx to match IP addresses in Python","code":"pat = re.compile('^\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}$')","relevant":"df['in'].groupby((df['in'] != df['in'].shift()).cumsum()).cumsum()?_split_?def __private(self):\n    pass?_split_?def _func(x):\n    x.dist = geomath.distance(geo_point.location, x.location)\nreturn x.dist\nresults = sorted(query.fetch(FETCHED), key=_func)?_split_?"}
{"nl":"How to execute a file within the python interpreter?","code":"exec(compile(open('filename.py').read(), 'filename.py', 'exec'))","relevant":"BZ_IN[~mask] = None?_split_?connection = opener.open(request)?_split_?return ret?_split_?"}
{"nl":"Returning distinct rows in SQLAlchemy with SQLite","code":"session.query(Tag).distinct(Tag.name).group_by(Tag.name).count()","relevant":"primes = [2]?_split_?regex = '\\\\b' + re.escape(myString) + '\\\\b'\nindices = [i for i, x in enumerate(myList) if re.search(regex, x)]?_split_?beta3 = pm.Laplace('beta3', mu=0, b=b)\ny_hat = beta1 * x1 + beta2 * x2 + beta3 * x3\ny_obs = pm.Normal('y_obs', mu=y_hat, tau=1.0, observed=y)\ntrace = pm.psample(draws=20000, step=pm.Slice(), threads=3)?_split_?"}
{"nl":"Remove NULL columns in a dataframe Pandas?","code":"df = df.dropna(axis=1, how='all')","relevant":"import itertools, string\nmap(''.join, itertools.product(string.ascii_lowercase, repeat=3))\nmap(''.join, itertools.product(string.ascii_letters, repeat=3))\nmap(''.join, itertools.product(string.ascii_letters + string.digits, repeat=3))?_split_?assert test_list[-8] == 5?_split_?return redirect(url_for('new_hotness'))?_split_?"}
{"nl":"Python counting elements of a list within a list","code":"all(x.count(1) == 3 for x in L)","relevant":"answers = dns.resolver.query('mail.google.com', 'CNAME')\nprint(' query qname:', answers.qname, ' num ans.', len(answers))\nfor rdata in answers:\n    pass?_split_?new_data = ndi.map_coordinates(data, idx)?_split_?p.register(f, select.POLLPRI | select.POLLERR)\nresult = p.poll(10)?_split_?"}
{"nl":"Comparing elements between elements in two lists of tuples","code":"[x[0] for x in l1 if any(x[0] == y[0] for y in l2)]","relevant":"for x, y in zip(alist, blist):\n    ans = (x - y) ** 2?_split_?session.storbinary('STOR kitten.jpg', file)?_split_?print(myset)?_split_?"}
{"nl":"how to clear\/delete the Textbox in tkinter python on Ubuntu","code":"tex.delete('1.0', END)","relevant":"ws.send(json.dumps([json.dumps({'msg': 'connect', 'version': '1', 'support':\n    ['1', 'pre2', 'pre1']})]))\nresult = ws.recv()?_split_?c = c.replace('\\r', ' ')?_split_?m['From'] = 'me'\nm['To'] = 'you'\nm['X-Priority'] = '2'\nm['Subject'] = 'Urgent!'\nm.set_payload('Nothing.')?_split_?"}
{"nl":"Python convert long to date","code":"datetime.datetime.fromtimestamp(myNumber).strftime('%Y-%m-%d %H:%M:%S')","relevant":"class UploadHandler(blobstore_handlers.BlobstoreUploadHandler):\n    pass?_split_?print('Updating scene...')?_split_?events.sort()?_split_?"}
{"nl":"How can I start a Python thread FROM C++?","code":"system('python myscript.py')","relevant":"import A\nB = A.B?_split_?hack - local - variables?_split_?@csrf_exempt\ndef my_view(request):\n    return HttpResponse('Hello world')?_split_?"}
{"nl":"sorting a list with objects of a class as its items","code":"your_list.sort(key=operator.attrgetter('anniversary_score'))","relevant":"s = (\n    'U.S. Adviser\\xe2\\x80\\x99s Blunt Memo on Iraq: Time \\xe2\\x80\\x98to Go Home\\xe2\\x80\\x99'\n    )?_split_?suffix = self.suffix()?_split_?return HttpResponse(json, mimetype='application\/json')?_split_?"}
{"nl":"sorting a list with objects of a class as its items","code":"your_list.sort(key=lambda x: x.anniversary_score)","relevant":"s = (\n    'U.S. Adviser\\xe2\\x80\\x99s Blunt Memo on Iraq: Time \\xe2\\x80\\x98to Go Home\\xe2\\x80\\x99'\n    )?_split_?suffix = self.suffix()?_split_?return HttpResponse(json, mimetype='application\/json')?_split_?"}
{"nl":"How can I convert a tensor into a numpy array in TensorFlow?","code":"print(type(tf.Session().run(tf.constant([1, 2, 3]))))","relevant":"print(f.bar())?_split_?args = [iter(iterable)] * n?_split_?import argparse?_split_?"}
{"nl":"in Python, How to join a list of tuples into one list?","code":"list(itertools.chain(*a))","relevant":"a = df.values\na.sort(axis=1)\na = a[:, ::-1]\na\npd.DataFrame(a, df.index, df.columns)?_split_?import datetime\ndatetime.datetime.strptime('24052010', '%d%m%Y').date()?_split_?a = list(range(5))\nb = islice(count(), 0, 5)\na\nb\nfor item in a:\n    print(item)\nfor item in a:\n    print(item)\nfor item in b:\n    print(item)\nfor item in b:\n    pass?_split_?"}
{"nl":"How do I pythonically set a value in a dictionary if it is None?","code":"count.setdefault('a', 0)","relevant":"[(array([1, 3, 5, 7, 9]), array([0, 2, 4, 6, 8])), (array([0, 2, 4, 6, 8]),\n    array([1, 3, 5, 7, 9]))]?_split_?self.dataChanged.emit(QtCore.QModelIndex(), QtCore.QModelIndex())?_split_?ax = fig.add_subplot(111, projection='3d')?_split_?"}
{"nl":"Python Pandas : group by in group by and average?","code":"df.groupby(['cluster']).mean()","relevant":"if p.primes_dict[i]:\n    pass?_split_?print('sum of 1st items = %d' % sum([float(v[0]) for v in list(dictData.values())]))?_split_?return 5?_split_?"}
{"nl":"from list of integers, get number closest to a given value","code":"min(myList, key=lambda x: abs(x - myNumber))","relevant":"aest = (3 - s + math.sqrt((s - 3) ** 2 + 24 * s)) \/ (12 * s)?_split_?def setUpZope(self, app, configurationContext):\n    pass?_split_?return hessian\nx = np.random.randn(100, 100, 100)?_split_?"}
{"nl":"Find array item in a string","code":"any(x in string for x in search)","relevant":"def get_results(self, obj):\n    results = Result.objects.filter(id__in=obj.result_set)?_split_?import codecs\nwith codecs.open(file, 'r', 'utf-8-sig') as f:\n    a, b, c = map(int, f.readline().split(','))?_split_?with open('textfile1') as textfile1:\n    with open('textfile2') as textfile2:\n        for x, y in zip(textfile1, textfile2):\n            x = x.strip()?_split_?"}
{"nl":"Find string with regular expression in python","code":"print(pattern.search(url).group(1))","relevant":"doc.Close()\nwith open(txtpath, encoding='utf-16') as f:\n    process_the_file(f)?_split_?[(ord(x.lower()) - 96) for x in string.letters]?_split_?a = re.compile('^(\\\\w+)((?:\\\\[\\\\w+\\\\])*)').findall(text)\nprint(a)?_split_?"}
{"nl":"How do I convert all strings (like \"Fault\") and into a unique float?","code":"(s.factorize()[0] + 1).astype('float')","relevant":"m = x >= 0?_split_?print(data.dtype.names)?_split_?self.end = end\n\ndef __iter__(self):\n    return self\n\ndef __next__(self):\n    if self.start == self.end:\n        raise StopIteration()\nr = self.seq[self.start]\nself.start += 1\nreturn r?_split_?"}
{"nl":"Subtract values in one list from corresponding values in another list - Python","code":"C = [(a - b) for a, b in zip(A, B)]","relevant":"array = numpy.array(((2, 2), (2, -2)))?_split_?img = Image.new('RGB', (200, 200), 'white')?_split_?from tkinter import filedialog?_split_?"}
{"nl":"How to derive the week start for a given (iso) weeknumber \/ year in python","code":"datetime.datetime.strptime('2011, 4, 0', '%Y, %U, %w')","relevant":"['badc']?_split_?foo_instance = Foo()?_split_?def f3():\n    \"\"\"f3!\"\"\"\npass\n\ndef f2():\n    \"\"\"f2!\"\"\"\npass\nfuncs = [elt[1] for elt in inspect.getmembers(sys.modules[__name__],\n    inspect.isfunction)]\nordered_funcs = sorted(funcs, key=lambda f: f.__code__.co_firstlineno)\nfor f in ordered_funcs:\n    pass?_split_?"}
{"nl":"Python: How do I convert an array of strings to an array of numbers?","code":"map(int, ['1', '-1', '1'])","relevant":"class ContextTest(object):\n\n    def __enter__(self):\n        print('Enter')\n\ndef __exit__(self, type, value, traceback):\n    print('Exit')\n\ndef test():\n    with ContextTest() as foo:\n        pass?_split_?def func2(s):\n    pass?_split_?return getattr(self.myobj, attr)?_split_?"}
{"nl":"How to create datetime object from \"16SEP2012\" in python","code":"datetime.datetime.strptime('16Sep2012', '%d%b%Y')","relevant":"for i, point in enumerate(points):\n    pass?_split_?def natural_sorted(iterable, reverse=False):\n    \"\"\"Return a list sorted the way that humans expect.\"\"\"?_split_?dict_data = {'Death': '', 'Death_Time': '', 'Sex': '', 'Symptoms': ''}?_split_?"}
{"nl":"How do I use a dictionary to update fields in Django models?","code":"Book.objects.filter(pk=pk).update(**d)","relevant":"def a(len1, til, hgt=len1, col=0):\n    system('mode con cols=' + len1, 'lines=' + hgt)\nsystem('title', til)\nsystem('color', col)\na(64, 'hi', 25, '0b')?_split_?for item in list(all_dicts.values()):\n    pass?_split_?dotted_array = [(1, 2, '.'), (4, 5, '.')]?_split_?"}
{"nl":"How do I use a dictionary to update fields in Django models?","code":"Book.objects.create(**d)","relevant":"def a(len1, til, hgt=len1, col=0):\n    system('mode con cols=' + len1, 'lines=' + hgt)\nsystem('title', til)\nsystem('color', col)\na(64, 'hi', 25, '0b')?_split_?for item in list(all_dicts.values()):\n    pass?_split_?dotted_array = [(1, 2, '.'), (4, 5, '.')]?_split_?"}
{"nl":"Precision in python","code":"print('{0:.2f}'.format(your_number))","relevant":"ax.add_collection(p)\nplt.show()?_split_?1\n3\n4?_split_?item.son = sons?_split_?"}
{"nl":"Python: How to generate a 12-digit random number?","code":"random.randint(100000000000, 999999999999)","relevant":"cv2.randn(im, 0, 99)?_split_?idx = np.argmax(means)?_split_?queryset = Book.objects.annotate(authors=Count('author'))?_split_?"}
{"nl":"Python: How to generate a 12-digit random number?","code":"int(''.join(str(random.randint(0, 9)) for _ in range(12)))","relevant":"cv2.randn(im, 0, 99)?_split_?idx = np.argmax(means)?_split_?queryset = Book.objects.annotate(authors=Count('author'))?_split_?"}
{"nl":"Python: How to generate a 12-digit random number?","code":"\"\"\"\"\"\".join(str(random.randint(0, 9)) for _ in range(12))","relevant":"cv2.randn(im, 0, 99)?_split_?idx = np.argmax(means)?_split_?queryset = Book.objects.annotate(authors=Count('author'))?_split_?"}
{"nl":"Python: How to generate a 12-digit random number?","code":"'%0.12d' % random.randint(0, 999999999999)","relevant":"cv2.randn(im, 0, 99)?_split_?idx = np.argmax(means)?_split_?queryset = Book.objects.annotate(authors=Count('author'))?_split_?"}
{"nl":"How to remove specific elements in a numpy array","code":"numpy.delete(a, index)","relevant":"slist = [a for a in map(pipe_through_funcs, slist) if a != None]?_split_?def get_feature(name):\n    return _features[name]()?_split_?def is_bijection(seq1, seq2):\n    pass?_split_?"}
{"nl":"Sort a list based on dictionary values in python?","code":"sorted(trial_list, key=lambda x: trial_dict[x])","relevant":"self.variables[attr].pop()?_split_?print(list(x for x in splitter(str, split_points) if x != ''))?_split_?fig, ax1 = plt.subplots()\nax1.plot(ts.index, ts, 'b-')?_split_?"}
{"nl":"read a single character from the user","code":"sys.stdin.read(1)","relevant":"xx, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14\n15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, xx, xx, xx, xx, 63\nxx, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, xx, xx, xx, xx, xx?_split_?pass?_split_?b = B()\nb.a = 10?_split_?"}
{"nl":"How to get a list of matchable characters from a regex class","code":"print(re.findall(pattern, x))","relevant":"if method != 'GET' and method != 'POST':\n    outfile.write('Status: 400\\r\\n')\nreturn?_split_?list_file_path = os.path.join(root, 'my-directory-list.txt')?_split_?with open('file.txt', 'r') as fin:\n    data = fin.read().splitlines(True)\nwith open('file.txt', 'w') as fout:\n    pass?_split_?"}
{"nl":"how to get the context of a search in BeautifulSoup?","code":"k = soup.find(text=re.compile('My keywords')).parent.text","relevant":"def consumer(self):\n    while True:\n        pass?_split_?list(range(3, 6))\nargs = [3, 6]\nlist(range(*args))?_split_?import sys?_split_?"}
{"nl":"Convert a row in pandas into list","code":"df.apply(lambda x: x.tolist(), axis=1)","relevant":"errfunc3 = lambda p, x, y: (three_gaussians(x, *p) - y) ** 2?_split_?'\/home\/keith\/devel\/onpythonpath', '\/usr\/lib\/python2.7'?_split_?g = ['abc', 'defg', 'lolololol']?_split_?"}
{"nl":"Convert a 1D array to a 2D array in numpy","code":"B = np.reshape(A, (-1, 2))","relevant":"def __get__(self, instance, owner):\n    return getattr(instance, self.name)?_split_?for row in csv.reader(file):\n    if row[ct] == kidname:\n        break?_split_?MODULE_RE = '^.*.py$'\nfor filename in os.listdir(os.path.dirname(__file__)):\n    if not re.match(MODULE_RE, filename) or filename == '__init__.py':\n        continue?_split_?"}
{"nl":"Flask - How to make an app externally visible through a router?","code":"app.run(host='192.168.0.58', port=9000, debug=False)","relevant":"b = defaultdict(a, key='some_value')?_split_?sqlContext.sql('SELECT * FROM df WHERE v IN {0}'.format(('foo', 'bar'))).count(\n    )?_split_?out[i] = inp[i] * inp[i]?_split_?"}
{"nl":"Stdout encoding in python","code":"print('\\xc5\\xc4\\xd6'.encode('UTF8'))","relevant":"a = numpy.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], numpy.int16)?_split_?all[:-1000] = []?_split_?integer \/= 1000\nprint(ascii_num[::-1])?_split_?"}
{"nl":"Best way to get the nth element of each tuple from a list of tuples in Python","code":"[x[0] for x in G]","relevant":"self.__do_layout()?_split_?for item in line:\n    if item in small_list_set:\n        pass?_split_?ax.contour(x, y, z, levels, cmap=cmap, norm=norm, antialiased=True)?_split_?"}
{"nl":"Regular expression matching all but a string","code":"re.findall('-(?!aa-|bb-)([^-]+)', string)","relevant":"fobj = open('..\/filename', 'w')?_split_?def __call__(self, arg):\n    self.arg += arg?_split_?for rail in fence:\n    pass?_split_?"}
{"nl":"Regular expression matching all but a string","code":"re.findall('-(?!aa|bb)([^-]+)', string)","relevant":"fobj = open('..\/filename', 'w')?_split_?def __call__(self, arg):\n    self.arg += arg?_split_?for rail in fence:\n    pass?_split_?"}
{"nl":"Removing entries from a dictionary based on values","code":"{k: v for k, v in list(hand.items()) if v}","relevant":"math.atan2(0.0, 0.0) == math.atan2(-0.0, 0.0)\nmath.atan2(0.0, -0.0) == math.atan2(-0.0, -0.0)?_split_?resp = opener.open(url)\nresp.read()?_split_?B.T[r, c] = B.T[c - r, c]?_split_?"}
{"nl":"Removing entries from a dictionary based on values","code":"dict((k, v) for k, v in hand.items() if v)","relevant":"math.atan2(0.0, 0.0) == math.atan2(-0.0, 0.0)\nmath.atan2(0.0, -0.0) == math.atan2(-0.0, -0.0)?_split_?resp = opener.open(url)\nresp.read()?_split_?B.T[r, c] = B.T[c - r, c]?_split_?"}
{"nl":"Python sorting - A list of objects","code":"sorted(L, key=operator.itemgetter('resultType'))","relevant":"d[nan2] = 2?_split_?df_yes = df[df['zip'].isin(keep)]\ndf_no = df[~df['zip'].isin(keep)]\ndf_yes?_split_?bets = 2 ** np.cumsum(toss2)?_split_?"}
{"nl":"Python sorting - A list of objects","code":"s.sort(key=operator.attrgetter('resultType'))","relevant":"d[nan2] = 2?_split_?df_yes = df[df['zip'].isin(keep)]\ndf_no = df[~df['zip'].isin(keep)]\ndf_yes?_split_?bets = 2 ** np.cumsum(toss2)?_split_?"}
{"nl":"Python sorting - A list of objects","code":"somelist.sort(key=lambda x: x.resultType)","relevant":"d[nan2] = 2?_split_?df_yes = df[df['zip'].isin(keep)]\ndf_no = df[~df['zip'].isin(keep)]\ndf_yes?_split_?bets = 2 ** np.cumsum(toss2)?_split_?"}
{"nl":"pandas joining multiple dataframes on columns","code":"df1.merge(df2, on='name').merge(df3, on='name')","relevant":"for x in a:\n    pass?_split_?reverse_dict['value1']?_split_?def nerpt(lst):\n    ti = np.triu_indices(len(lst), 1)\na = np.array(lst)\nreturn (a[ti[0]] == a[ti[1]]).any()\ndf1[~df1.Col1.str.split('-').apply(nerpt)]?_split_?"}
{"nl":"random Decimal in python","code":"decimal.Decimal(random.randrange(10000)) \/ 100","relevant":"for i in range(0, vectorized.shape[0]):\n    row = vectorized.getrow(i)?_split_?fig = plt.figure()?_split_?plt.show()?_split_?"}
{"nl":"list all files of a directory","code":"onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]","relevant":"[x for x in players['SEA'] if x.year == '2001']?_split_?domain = 'google.com'?_split_?\"\"\"eAIUXziwB8QbBexkiIDR3A==\"\"\".decode('base64')?_split_?"}
{"nl":"list all files of a directory","code":"f = []\nfor (dirpath, dirnames, filenames) in walk(mypath):\n    f.extend(filenames)\n    break","relevant":"[x for x in players['SEA'] if x.year == '2001']?_split_?domain = 'google.com'?_split_?\"\"\"eAIUXziwB8QbBexkiIDR3A==\"\"\".decode('base64')?_split_?"}
{"nl":"list all files of a directory","code":"print(glob.glob('\/home\/adam\/*.txt'))","relevant":"[x for x in players['SEA'] if x.year == '2001']?_split_?domain = 'google.com'?_split_?\"\"\"eAIUXziwB8QbBexkiIDR3A==\"\"\".decode('base64')?_split_?"}
{"nl":"list all files of a directory","code":"os.listdir('somedirectory')","relevant":"[x for x in players['SEA'] if x.year == '2001']?_split_?domain = 'google.com'?_split_?\"\"\"eAIUXziwB8QbBexkiIDR3A==\"\"\".decode('base64')?_split_?"}
{"nl":"psycopg2: insert multiple rows with one query","code":"cur.executemany('INSERT INTO table VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)', tup)","relevant":"a = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 5, 5]\nd = {x: a.count(x) for x in a}\nd\na, b = list(d.keys()), list(d.values())\na\nb?_split_?from win32com.client import Dispatch\nxl = Dispatch('Excel.Application')\nwb = xl.Workbooks.Open('C:\\\\Documents and Settings\\\\GradeBook.xls')?_split_?head[:, (0)] = 42.0?_split_?"}
{"nl":"get key by value in dictionary with same value in python?","code":"print([key for key in d if d[key] == 1])","relevant":"df = pd.concat([df, pd.DataFrame(np.tile(np.nan, [len(df), 50]))], axis=1)?_split_?allowed_domains = ['exitrealty.com']\nstart_urls = [URL]?_split_?from collections import OrderedDict?_split_?"}
{"nl":"get key by value in dictionary with same value in python?","code":"print([key for key, value in d.items() if value == 1])","relevant":"df = pd.concat([df, pd.DataFrame(np.tile(np.nan, [len(df), 50]))], axis=1)?_split_?allowed_domains = ['exitrealty.com']\nstart_urls = [URL]?_split_?from collections import OrderedDict?_split_?"}
{"nl":"get key by value in dictionary with same value in python?","code":"print([key for key, value in list(d.items()) if value == 1])","relevant":"df = pd.concat([df, pd.DataFrame(np.tile(np.nan, [len(df), 50]))], axis=1)?_split_?allowed_domains = ['exitrealty.com']\nstart_urls = [URL]?_split_?from collections import OrderedDict?_split_?"}
{"nl":"What is the best way to create a string array in python?","code":"strs = ['' for x in range(size)]","relevant":"q_out.put((i, f(x)))?_split_?def page1_data(self, response):\n    hxs = HtmlXPathSelector(response)\ni = TestItem()\ni['name'] = 'name'\ni['age'] = 'age'\nurl_profile_page = 'url to the profile page'\nyield Request(url_profile_page, meta={'item': i}, callback=self.profile_page)\n\ndef profile_page(self, response):\n    hxs = HtmlXPathSelector(response)\nold_item = response.request.meta['item']\nyield old_item?_split_?x += x?_split_?"}
{"nl":"generate pdf from markdown file","code":"with open(input_filename, 'r') as f:\n    html_text = markdown(f.read(), output_format='html4')\npdfkit.from_string(html_text, output_filename)","relevant":"doc = lh.parse(urllib.request.urlopen(url))\nblurb = doc.xpath(\n    '\/\/td[child::*[text()=\"Additional  Info\"]]\/following-sibling::td\/text()')\nblurb = [text for text in blurb if text != '\\xa0']\nprint('\\n'.join(blurb))?_split_?my_str = '3\\\\u00B0 \\\\u00b1 0.2\\\\u00B0 2\\\\u03B8'\nmy_bytes = bytes(my_str, 'utf-8')?_split_?otest = list(utest)?_split_?"}
{"nl":"Remove duplicate dict in list in Python","code":"[dict(t) for t in set([tuple(d.items()) for d in l])]","relevant":"from distutils.core import setup\ninstall_requires = ['requests==2.3.0']?_split_?l1 = f1.readline()?_split_?print('Found \"{}\"'.format(word))?_split_?"}
{"nl":"How to set the timezone in Django?","code":"TIME_ZONE = 'Europe\/Istanbul'","relevant":"def copyf(data, key, allowed):\n    return [x for x in data if key in x and x[key] in allowed]\ndictlist = [{'first': 'James', 'last': 'Joule'}, {'first': 'James', 'last':\n    'Watt'}, {'first': 'Christian', 'last': 'Doppler'}]\ncopyf(dictlist, 'first', ('Christian',))\ncopyf(dictlist, 'last', ('Christian',))?_split_?import numpy as np?_split_?super(Main, self).__init__(parent)?_split_?"}
{"nl":"Appending to list in Python dictionary","code":"dates_dict.setdefault(key, []).append(date)","relevant":"def verboseprint(*args):\n    for arg in args:\n        pass?_split_?\"\"\"foo and foo, or foobar and not foo.\"\"\".split(' ')?_split_?from urllib.parse import urlencode\nvalues = {'one': 'one', 'two': 'two', 'three': 'three', 'four': 'four',\n    'five': 'five', 'six': 'six', 'seven': 'seven'}?_split_?"}
{"nl":"How to do this GROUP BY query in Django's ORM with annotate and aggregate","code":"Article.objects.values('pub_date').annotate(article_count=Count('title'))","relevant":"def myfun(l, x):\n    result = []\ncurrentIdx = 0\nfor isZero, group in itertools.groupby(i == x for i in l):\n    groupLen = len(list(group))\nif isZero:\n    result.append((currentIdx, groupLen))\ncurrentIdx += groupLen\nreturn result\nl = [1, 0, -2, 0, 0, 4, 5, 0]\nprint(myfun(l, 0))?_split_?from distutils.version import StrictVersion\nprint(StrictVersion('1.2.2') > StrictVersion('1.2.1'))?_split_?end_time = 120?_split_?"}
{"nl":"How to clear Tkinter Canvas?","code":"canvas.delete('all')","relevant":"m['From'] = 'me'\nm['To'] = 'you'\nm['X-Priority'] = '2'\nm['Subject'] = 'Urgent!'\nm.set_payload('Nothing.')?_split_?a = sorted([1, 5, 3, 8, 2, 4, 7, 6], reverse=True)?_split_?max_groups = 1\nfor x in group_sizes:\n    max_groups *= int(x)?_split_?"}
{"nl":"How to add a specific number of characters to the end of string in Pandas?","code":"s = pd.Series(['A', 'B', 'A1R', 'B2', 'AABB4'])","relevant":"def sometable_id(cls):\n    return Column(Integer, ForeignKey('sometable.id'))\n\n@declared_attr\ndef __table_args__(cls):\n    return UniqueConstraint('sometable_id', 'ttime'), {}?_split_?def root():\n    \"\"\" returns the absolute path of the repository root \"\"\"\ntry:\n    base = check_output('git rev-parse --show-toplevel', shell=True)\nexcept CalledProcessError:\n    raise IOError('Current working directory is not a git repository')\nreturn base.decode('utf-8').strip()?_split_?wb = load_workbook('file.xlsx', data_only=True)?_split_?"}
{"nl":"How do I translate a ISO 8601 datetime string into a Python datetime object?","code":"datetime.datetime.strptime('2007-03-04T21:08:12', '%Y-%m-%dT%H:%M:%S')","relevant":"b = a + 1?_split_?print(words.freq('and'))?_split_?db.session.add(post)?_split_?"}
{"nl":"How to sort a list according to another list?","code":"a.sort(key=lambda x: b.index(x[0]))","relevant":"mod = inspect.getmodule(frm[0])\nprint('[%s] %s' % (mod.__name__, msg))?_split_?np.log(sample_df).diff()?_split_?return sha.hexdigest()\n\ndef hash_dir(dir_path):\n    hashes = []\nfor path, dirs, files in os.walk(dir_path):\n    for file in sorted(files):\n        hashes.append(sha1OfFile(os.path.join(path, file)))\nfor dir in sorted(dirs):\n    hashes.append(hash_dir(os.path.join(path, dir)))\nbreak\nreturn str(hash(''.join(hashes)))?_split_?"}
{"nl":"How to sort a list according to another list?","code":"a.sort(key=lambda x_y: b.index(x_y[0]))","relevant":"mod = inspect.getmodule(frm[0])\nprint('[%s] %s' % (mod.__name__, msg))?_split_?np.log(sample_df).diff()?_split_?return sha.hexdigest()\n\ndef hash_dir(dir_path):\n    hashes = []\nfor path, dirs, files in os.walk(dir_path):\n    for file in sorted(files):\n        hashes.append(sha1OfFile(os.path.join(path, file)))\nfor dir in sorted(dirs):\n    hashes.append(hash_dir(os.path.join(path, dir)))\nbreak\nreturn str(hash(''.join(hashes)))?_split_?"}
{"nl":"Matplotlib - How to plot a high resolution graph?","code":"plt.savefig('filename.png')","relevant":"data = df[df['Gender'] == 1].max()\nprint(data)?_split_?a = input('> ')?_split_?def log_error(task_id):\n    pass?_split_?"}
{"nl":"Matplotlib - How to plot a high resolution graph?","code":"plt.savefig('filename.png', dpi=300)","relevant":"data = df[df['Gender'] == 1].max()\nprint(data)?_split_?a = input('> ')?_split_?def log_error(task_id):\n    pass?_split_?"}
{"nl":"How to get output of exe in python script?","code":"p1.communicate()[0]","relevant":"import random?_split_?def myfun(foo=mk_default()):\n    print('myfun has been called.')\nprint('about to test functions')\nmyfun('testing')\nmyfun('testing again')?_split_?while True:\n    pass?_split_?"}
{"nl":"How to get output of exe in python script?","code":"output = subprocess.Popen(['mycmd', 'myarg'], stdout=PIPE).communicate()[0]","relevant":"import random?_split_?def myfun(foo=mk_default()):\n    print('myfun has been called.')\nprint('about to test functions')\nmyfun('testing')\nmyfun('testing again')?_split_?while True:\n    pass?_split_?"}
{"nl":"Using BeautifulSoup to search html for string","code":"soup.body.findAll(text='Python')","relevant":"from sqlalchemy.sql.expression import desc, asc\nsession.query(Shots).filter_by(event_id=event_id).order_by(asc(Shots.user_id))?_split_?pass?_split_?new_list.append(item + 10)?_split_?"}
{"nl":"Using BeautifulSoup to search html for string","code":"soup.body.findAll(text='Python Jobs')","relevant":"from sqlalchemy.sql.expression import desc, asc\nsession.query(Shots).filter_by(event_id=event_id).order_by(asc(Shots.user_id))?_split_?pass?_split_?new_list.append(item + 10)?_split_?"}
{"nl":"Python: sorting items in a dictionary by a part of a key?","code":"sorted(list(d.items()), key=lambda name_num: (name_num[0].rsplit(None, 1)[0], name_num[1]))","relevant":"if regex.group(3):\n    pass?_split_?a, b = tee(iterable)?_split_?s.map(methodcaller('strftime', '%d-%m-%Y'))?_split_?"}
{"nl":"Find non-common elements in lists","code":"set([1, 2, 3]) ^ set([3, 4, 5])","relevant":"[(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)]\n[(1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]\n[(1, 2, 3, 4)]?_split_?self.setLayout(self.layout)?_split_?if opt['outputbias']:\n    pass?_split_?"}
{"nl":"retrieving list items from request.POST in django\/python","code":"request.POST.getlist('pass_id')","relevant":"plt.savefig('mixture.pdf')?_split_?300.0?_split_?if re.match('^[a-z0-9_]{1,8}@[a-z0-9_]{1,8}\\\\.com$', address, re.IGNORECASE):\n    pass?_split_?"}
{"nl":"How do I remove dicts from a list with duplicate fields in python?","code":"list(dict((x['id'], x) for x in L).values())","relevant":"B[:, (col)] = np.prod(A[:, (mask)], 1)?_split_?continue?_split_?yield k, dict2[k]?_split_?"}
{"nl":"Merge Columns within a DataFrame that have the Same Name","code":"df.groupby(df.columns, axis=1).sum()","relevant":"pass?_split_?try:\n    return int(zahl)\nexcept ValueError:\n    pass?_split_?num_rows = Application.ActiveDocument.Tables(2).Rows.Count?_split_?"}
{"nl":"python dict comprehension with two ranges","code":"dict(zip(list(range(1, 5)), list(range(7, 11))))","relevant":"nondupes = [(original & all_uniques) for original in allsets]?_split_?s.bind(('eth0', 0))?_split_?example = defaultdict(lambda : None)?_split_?"}
{"nl":"How to turn a boolean array into index array in numpy","code":"numpy.where(mask)","relevant":"return unpacked[10] + float(unpacked[11]) \/ 2 ** 32 - NTP_DELTA?_split_?\"\"\"RENAME TABLE {0}_backup TO {0}\"\"\".format(table_name)?_split_?print(max(max(x) if isinstance(x, list) else x for x in my_list))?_split_?"}
{"nl":"case insensitive string comparison","code":"if (string1.lower() == string2.lower()):\n    print('The strings are the same (case insensitive)')\nelse:\n    print('The strings are not the same (case insensitive)')","relevant":"print(type(parsed))?_split_?plt.ion()?_split_?driver = selenium.webdriver.Firefox()\ndriver.get('http:\/\/www.google.com')\ncookies = pickle.load(open('cookies.pkl', 'rb'))\nfor cookie in cookies:\n    driver.add_cookie(cookie)?_split_?"}
{"nl":"case insensitive string comparison","code":"if (string1.lower() == string2.lower()):\n    pass","relevant":"print(type(parsed))?_split_?plt.ion()?_split_?driver = selenium.webdriver.Firefox()\ndriver.get('http:\/\/www.google.com')\ncookies = pickle.load(open('cookies.pkl', 'rb'))\nfor cookie in cookies:\n    driver.add_cookie(cookie)?_split_?"}
{"nl":"case insensitive string comparison","code":"(string1.lower() == string2.lower())","relevant":"print(type(parsed))?_split_?plt.ion()?_split_?driver = selenium.webdriver.Firefox()\ndriver.get('http:\/\/www.google.com')\ncookies = pickle.load(open('cookies.pkl', 'rb'))\nfor cookie in cookies:\n    driver.add_cookie(cookie)?_split_?"}
{"nl":"case insensitive string comparison","code":"(first.lower() == second.lower())","relevant":"print(type(parsed))?_split_?plt.ion()?_split_?driver = selenium.webdriver.Firefox()\ndriver.get('http:\/\/www.google.com')\ncookies = pickle.load(open('cookies.pkl', 'rb'))\nfor cookie in cookies:\n    driver.add_cookie(cookie)?_split_?"}
{"nl":"case insensitive string comparison","code":"(first.upper() == second.upper())","relevant":"print(type(parsed))?_split_?plt.ion()?_split_?driver = selenium.webdriver.Firefox()\ndriver.get('http:\/\/www.google.com')\ncookies = pickle.load(open('cookies.pkl', 'rb'))\nfor cookie in cookies:\n    driver.add_cookie(cookie)?_split_?"}
{"nl":"Taking the results of a bash command and using it in python","code":"os.system(\"awk '{print $10, $11}' test.txt > test2.txt\")","relevant":"def load_dialect_impl(self, dialect):\n    if dialect.name == 'postgresql':\n        return dialect.type_descriptor(UUID())?_split_?print('Test')?_split_?t = pd.Timestamp('2013-12-25 00:00:00')\nt.date()\nt.date() == datetime.date(2013, 12, 25)?_split_?"}
{"nl":"How to remove multiple indexes from a list at the same time?","code":"del my_list[2:6]","relevant":"parts = nodes[:l_i], nodes[l_i + 1:m_i], nodes[m_i + 1:r_i], nodes[r_i + 1:]?_split_?ytext = y + (ax.get_ylim()[1] - ax.get_ylim()[0]) \/ 20?_split_?plt.imshow(labeled)?_split_?"}
{"nl":"How to convert a string to its Base-10 representation?","code":"int(s.encode('hex'), 16)","relevant":"num \/= 1024.0?_split_?return regex.sub('', s)?_split_?for filename in filenames:\n    pass?_split_?"}
{"nl":"Python regular expression with codons","code":"re.findall('TAA(?:[ATGC]{3})+?TAA', seq)","relevant":"if grokster:\n    return grokster.grok()?_split_?100000200, 100000300?_split_?df['col2'] = df['col']?_split_?"}
{"nl":"Sorting a set of values","code":"sorted(s, key=float)","relevant":"centroids[m] += row[m] \/ len_best?_split_?np.einsum('ij,kj->jik', X, X)?_split_?import numpy as np?_split_?"}
{"nl":"convert an int to a hex string","code":"hex(65)","relevant":"for sample in image_samples:\n    classifications.append(classifier(sample))\nlabel = fuse_classifications(classifications)?_split_?from jinja2 import Template, DebugUndefined\ntemplate = Template('{{ var1 }}-{{ var2 }}', undefined=DebugUndefined)\nrendered1 = template.render(var1=5)\nprint(rendered1)\nrendered2 = Template(rendered1).render(var2=6)\nprint(rendered2)?_split_?def xstr(x):\n    hex = '%x' % x\nreturn unhexlify('0' * (len(hex) % 2) + hex)[::-1]\n\ndef xlong(s):\n    pass?_split_?"}
{"nl":"Simple way to append a pandas series with same index","code":"a.append(b).reset_index(drop=True)","relevant":"class A(object):\n    pass?_split_?r = re.compile('[ab].c')\nl = list(filter(r.search, (''.join(s) for s in p)))\nprint(list(l))?_split_?np.argpartition(a, idx)[idx]?_split_?"}
{"nl":"Simple way to append a pandas series with same index","code":"pd.concat([a, b], ignore_index=True)","relevant":"class A(object):\n    pass?_split_?r = re.compile('[ab].c')\nl = list(filter(r.search, (''.join(s) for s in p)))\nprint(list(l))?_split_?np.argpartition(a, idx)[idx]?_split_?"}
{"nl":"In Python, is there a concise way to use a list comprehension with multiple iterators?","code":"[(i, j) for i in range(1, 3) for j in range(1, 5)]","relevant":"ds = '2012-03-01T10:00:00Z'\ndate = parser.parse(ds)?_split_?function(a, m)?_split_?shop1()?_split_?"}
{"nl":"sorting values of python dict using sorted builtin function","code":"sorted(iter(mydict.items()), key=itemgetter(1), reverse=True)","relevant":"from django.test.client import RequestFactory\n\n\nclass SimpleTest(unittest.TestCase):\n\n    def setUp(self):\n        self.factory = RequestFactory()\n\ndef test_details(self):\n    request = self.factory.get('\/customer\/details')\nresponse = my_view(request)\nself.assertEqual(response.status_code, 200)?_split_?return logging.Formatter.format(self, record)\nchformatter = MyFormatter('%(levelname)s %(message)s')\nch.setFormatter(chformatter)?_split_?s = 'This, I think,., \\xda\\xa9\\xd8\\xa8\\xd8\\xa7\\xd8\\xa8 MAKES , some sense '\npattern = '([\\\\.,\\\\s]+)'\nsplitted = [i.strip() for i in re.split(pattern, s) if i.strip()]?_split_?"}
{"nl":"How can I select 'last business day of the month' in Pandas?","code":"pd.date_range('1\/1\/2014', periods=12, freq='BM')","relevant":"m.user_defined_func()?_split_?m.group(1)?_split_?items = [' '.join(el[0] or el[1] for el in g) for k, g in groupby(re.\n    findall(\"('.*?')|(\\\\S+)\", text), lambda L: L[1] == 'and') if not k]?_split_?"}
{"nl":"How do I disable the security certificate check in Python requests","code":"requests.get('https:\/\/kennethreitz.com', verify=False)","relevant":"myobject = locals()['MyClass%s' % k]()?_split_?self.assertEqual('foo', self.resource)?_split_?def setUp(self):\n    pass?_split_?"}
{"nl":"dropping a row in pandas with dates indexes, python","code":"df.ix[:-1]","relevant":"print('check')?_split_?picks = [v for v, d in zip(vls, dst) for _ in range(d)]?_split_?global scale?_split_?"}
{"nl":"string contains substring","code":"if ('blah' not in somestring):\n    pass","relevant":"b = int(sys.argv[1])\nprint('I am no converting', file=sys.stderr)?_split_?from datetime import date?_split_?i = 3?_split_?"}
{"nl":"string contains substring","code":"if (needle in haystack):\n    pass","relevant":"b = int(sys.argv[1])\nprint('I am no converting', file=sys.stderr)?_split_?from datetime import date?_split_?i = 3?_split_?"}
{"nl":"string contains substring","code":"string.find('substring')","relevant":"b = int(sys.argv[1])\nprint('I am no converting', file=sys.stderr)?_split_?from datetime import date?_split_?i = 3?_split_?"}
{"nl":"string contains substring method","code":"if (s.find('is') == (-1)):\n    print(\"No 'is' here!\")\nelse:\n    print(\"Found 'is' in the string.\")","relevant":"b = int(sys.argv[1])\nprint('I am no converting', file=sys.stderr)?_split_?from datetime import date?_split_?i = 3?_split_?"}
{"nl":"Extract first and last row of a dataframe in pandas","code":"pd.concat([df.head(1), df.tail(1)])","relevant":"s = 'xyzcarbusabccar'\nre.findall('car|bus|[a-z]', s)?_split_?graph.post('me\/feed', message='Hello World!')?_split_?class WidgetTestCase(unittest.TestCase, metaclass=ScenarioMeta):\n    pass\n\n\nclass widget_width(ScenerioTest):\n    scenarios = [dict(widget_in=Widget('One Way'), expected_tuple=(50, 50)),\n        dict(widget_in=Widget('Another Way'), expected_tuple=(100, 150))]\n\ndef __test__(self, widget_in, expected_tuple):\n    self.assertEqual(widget_in.size, expected_tuple)?_split_?"}
{"nl":"Django - Filter queryset by CharField value length","code":"MyModel.objects.extra(where=['CHAR_LENGTH(text) > 254'])","relevant":"model.fit(X_train, y_train)?_split_?d1 = array([0.23180963, 0.35643282])?_split_?sample.some_func(si)?_split_?"}
{"nl":"Django - Filter queryset by CharField value length","code":"MyModel.objects.filter(text__regex='^.{254}.*')","relevant":"model.fit(X_train, y_train)?_split_?d1 = array([0.23180963, 0.35643282])?_split_?sample.some_func(si)?_split_?"}
{"nl":"Best way to count the number of rows with missing values in a pandas DataFrame","code":"sum(df.apply(lambda x: sum(x.isnull().values), axis=1) > 0)","relevant":"train = data_utils.TensorDataset(features, targets)\ntrain_loader = data_utils.DataLoader(train, batch_size=50, shuffle=True)?_split_?df.to_csv('pandasfile.csv', float_format='%g')?_split_?def nesting():\n    pass?_split_?"}
{"nl":"Sorting while preserving order in python","code":"sorted(enumerate(a), key=lambda x: x[1])","relevant":"data = pandas.DataFrame({'pid': [1, 1, 1, 2, 2, 3, 3, 3], 'tag': [23, 45, \n    62, 24, 45, 34, 25, 62]})\nbytag = data.groupby('tag').aggregate(np.count_nonzero)\ntags = bytag[bytag.pid >= 2].index\nprint(data[data['tag'].isin(tags)])?_split_?engine.execute('CREATE DATABASE dbname')\nengine.execute('USE dbname')?_split_?out = []\nfor row in data:\n    pass?_split_?"}
{"nl":"How to set the font size of a Canvas' text item?","code":"canvas.create_text(x, y, font=('Purisa', 12), text=k)","relevant":"deques = [collections.deque() for i in range(n)]?_split_?req.add_header('Authorization', auth)?_split_?def nearest_key(self, key):\n    if not isinstance(key, tuple):\n        key = key,\nnk = min((k for k in self), key=lambda k: NearestDict.__dist(key, k))\nreturn nk\n\ndef __missing__(self, key):\n    if not isinstance(key, tuple):\n        key = key,\nif len(key) != self.ndims:\n    raise KeyError('key must be %d dimensions' % self.ndims)\nreturn self[self.nearest_key(key)]?_split_?"}
{"nl":"Python: How to use a list comprehension here?","code":"[y['baz'] for x in foos for y in x['bar']]","relevant":"return HttpResponseRedirect(passwords_url)?_split_?from sympy import Symbol\nx, y = Symbol('x y')\nf = x + y?_split_?import module_x\nsys.path.append('\/usr\/local\/python\/lib')\nimport foo?_split_?"}
{"nl":"pandas read csv with extra commas in column","code":"df = pd.read_csv('comma.csv', quotechar=\"'\")","relevant":"register('useful_filter', 'very useful indeed', '', 'MF', 'GPL', '2013',\n    '<Image>\/Filters\/Photo\/Useful Filter', 'RGB*', [], [], MyUsefulFilter)?_split_?width = default_font.measure(text)\nheight = default_font.metrics('linespace')?_split_?import os\nextensions = set(['.mp3', '.avi'])?_split_?"}
{"nl":"avoiding regex in pandas str.replace","code":"df['a'] = df['a'].str.replace('in.', ' in. ')","relevant":"ioloop.IOLoop.instance().start()?_split_?data = pd.read_csv('data.csv', index_col='rowid', parse_dates=['Date_of_Death']\n    )\nprint('Deaths by date')\nprint(data.groupby('Date_of_Death').size())\nprint('\\nDeaths by Area')\nprint(data.groupby('Area').size())\nprint(\"\"\"\nPer date and Area\"\"\")\nprint(data.groupby(['Date_of_Death', 'Area']).size())?_split_?print(serialize(data))?_split_?"}
{"nl":"Finding the index of elements based on a condition using python list comprehension","code":"[i for i in range(len(a)) if a[i] > 2]","relevant":"app.view_functions['static'] = login_required(app.send_static_file)?_split_?super().__init__(root)?_split_?while 1:\n    _, f = c.read()\nif f is None:\n    break\nf2 = f.copy()\nout.write(f2)\nout.release()\ncv2.destroyAllWindows()\nc.release()?_split_?"}
{"nl":"check if a variable exists","code":"('myVar' in locals())","relevant":"head = a[0]\ntail = itertools.islice(a, 1, None)?_split_?self.ax.axis([-10, 10, -10, 10])?_split_?import yfq\nyfq.get_price('GOOG+INTL')?_split_?"}
{"nl":"check if a variable exists","code":"('myVar' in globals())","relevant":"head = a[0]\ntail = itertools.islice(a, 1, None)?_split_?self.ax.axis([-10, 10, -10, 10])?_split_?import yfq\nyfq.get_price('GOOG+INTL')?_split_?"}
{"nl":"check if a variable exists","code":"hasattr(obj, 'attr_name')","relevant":"head = a[0]\ntail = itertools.islice(a, 1, None)?_split_?self.ax.axis([-10, 10, -10, 10])?_split_?import yfq\nyfq.get_price('GOOG+INTL')?_split_?"}
{"nl":"check if a variable exists","code":"if ('myVar' in locals()):\n    pass","relevant":"head = a[0]\ntail = itertools.islice(a, 1, None)?_split_?self.ax.axis([-10, 10, -10, 10])?_split_?import yfq\nyfq.get_price('GOOG+INTL')?_split_?"}
{"nl":"check if a variable exists","code":"if ('myVar' in globals()):\n    pass","relevant":"head = a[0]\ntail = itertools.islice(a, 1, None)?_split_?self.ax.axis([-10, 10, -10, 10])?_split_?import yfq\nyfq.get_price('GOOG+INTL')?_split_?"}
{"nl":"Python lambda function","code":"lambda x, y: x + y","relevant":"self.label = tk.Label(root, text='  ', font=(None, 200))?_split_?excel.Visible = True\nws = excel.Workbooks.Add().Worksheets(1)\nws.QueryTables.Add(constring, ws.Range['A1'], SQL).Refresh()?_split_?mean_image = cum_sum \/ n\nstd_image = np.sqrt(cum_sum_of_squares \/ n - mean_image ** 2)?_split_?"}
{"nl":"What's the shortest way to count the number of items in a generator\/iterator?","code":"sum(1 for i in it)","relevant":"outlist.extend((i, other[0]) for i in ids - known)?_split_?import ctypes\nnumber = lv & 4294967295?_split_?from django.db import models?_split_?"}
{"nl":"how to get tuples from lists using list comprehension in python","code":"[(x, lst2[i]) for i, x in enumerate(lst)]","relevant":"df['C_sign'] = np.sign(df.C)\ndf.groupby('A').C_sign.value_counts()?_split_?return object.__getattribute__(self, name)?_split_?e3.insert(0, '3')?_split_?"}
{"nl":"how to get tuples from lists using list comprehension in python","code":"[(i, j) for i, j in zip(lst, lst2)]","relevant":"df['C_sign'] = np.sign(df.C)\ndf.groupby('A').C_sign.value_counts()?_split_?return object.__getattribute__(self, name)?_split_?e3.insert(0, '3')?_split_?"}
{"nl":"how to get tuples from lists using list comprehension in python","code":"[(lst[i], lst2[i]) for i in range(len(lst))]","relevant":"df['C_sign'] = np.sign(df.C)\ndf.groupby('A').C_sign.value_counts()?_split_?return object.__getattribute__(self, name)?_split_?e3.insert(0, '3')?_split_?"}
{"nl":"How do I convert a hex triplet to an RGB tuple and back?","code":"struct.unpack('BBB', rgbstr.decode('hex'))","relevant":"app = QtGui.QApplication([])\napp.setStyleSheet(\n    'QMainWindow{background-color: darkgray;border: 1px solid black;}')?_split_?if pattern[0] == '-' and ndash > 0:\n    for subpattern in possibilities(pattern[1:], ndash - 1):\n        pass?_split_?t = Tkinter.Text(w)?_split_?"}
{"nl":"Check if something is not in a list","code":"(3 not in [2, 3, 4])","relevant":"super(MyModelForm, self).__init__(*args, **kwargs)\nif hide_condition:\n    self.fields['fieldname'].widget = HiddenInput()?_split_?pos_help = [formatter.format_option(opt) for opt in self.positional]?_split_?t = threading.Thread(name='timer', target=my_service)?_split_?"}
{"nl":"Check if something is not in a list","code":"((2, 3) not in [(2, 3), (5, 6), (9, 1)])","relevant":"super(MyModelForm, self).__init__(*args, **kwargs)\nif hide_condition:\n    self.fields['fieldname'].widget = HiddenInput()?_split_?pos_help = [formatter.format_option(opt) for opt in self.positional]?_split_?t = threading.Thread(name='timer', target=my_service)?_split_?"}
{"nl":"Check if something is not in a list","code":"((2, 3) not in [(2, 7), (7, 3), 'hi'])","relevant":"super(MyModelForm, self).__init__(*args, **kwargs)\nif hide_condition:\n    self.fields['fieldname'].widget = HiddenInput()?_split_?pos_help = [formatter.format_option(opt) for opt in self.positional]?_split_?t = threading.Thread(name='timer', target=my_service)?_split_?"}
{"nl":"Check if something is not in a list","code":"(3 not in [4, 5, 6])","relevant":"super(MyModelForm, self).__init__(*args, **kwargs)\nif hide_condition:\n    self.fields['fieldname'].widget = HiddenInput()?_split_?pos_help = [formatter.format_option(opt) for opt in self.positional]?_split_?t = threading.Thread(name='timer', target=my_service)?_split_?"}
{"nl":"Create new list by taking first item from first list, and last item from second list","code":"[value for pair in zip(a, b[::-1]) for value in pair]","relevant":"text = HtmlTool.retspace.sub('\\n', text)?_split_?fmt = lambda x: x?_split_?result[k] = i - rank_a.get(k)?_split_?"}
{"nl":"Remove one column for a numpy array","code":"b = np.delete(a, -1, 1)","relevant":"scipy.inf * 0?_split_?print(add_time(datetime(year=2015, month=12, day=25), relativedelta(months=+1)))\nprint(add_time(datetime(year=2016, month=1, day=29), relativedelta(years=+4,\n    months=+1)))?_split_?heuristics = lambda value: datetime.strptime(value, '%Y-%m-%d'), int, float?_split_?"}
{"nl":"Python mySQL Update, Working but not updating table","code":"dbb.commit()","relevant":"attrs[PDFDocumentAuthorAttribute] = 'A. Author and B. Author'?_split_?print('the two lists are not the same')?_split_?'', 'a', 'b'\n'foo', 0.720538259472741, -0.848304940318957\n'bar', -0.64266667412325, -0.442441171401282\n'baz', -0.419181615269841, -0.658545964124229\n'qux', 0.881124313748992, 0.36383198969179\n'bar2', -1.35613767310069, -0.124014006180608?_split_?"}
{"nl":"How do I join two dataframes based on values in selected columns?","code":"pd.merge(a, b, on=['A', 'B'], how='outer')","relevant":"pdDF = pd.DataFrame([('foo', 1), ('bar', 2)], columns=('k', 'v'))\nprint(pdDF)?_split_?self.baz = 'hi'?_split_?return logging.Formatter.format(self, record)\nchformatter = MyFormatter('%(levelname)s %(message)s')?_split_?"}
{"nl":"How to change QPushButton text and background color","code":"setStyleSheet('QPushButton {background-color: #A3C1DA; color: red;}')","relevant":"measurement_range_array = np.array(measurement_range)\nflat_grid_idx = pow(measurement_range_array - d, 2).sum(1).argmin()?_split_?return Decimal.from_float(other)?_split_?class Connection(connection.SSHConnection):\n\n    def serviceStarted(self):\n        Channel = forwarding.SSHListenClientForwardingChannel\nFactory = forwarding.SSHListenForwardingFactory\nfactory = Factory(self, (REMOTEHOST, REMOTEPORT), Channel)\ns = reactor.listenTCP(LOCALPORT, factory)?_split_?"}
{"nl":"Finding the average of a list","code":"sum(l) \/ float(len(l))","relevant":"distances[i] = np.sum(np.square(features[i] - features), axis=1)?_split_?c.flags.owndata?_split_?def formattedprice(self):\n    pass?_split_?"}
{"nl":"Python: Finding a (string) key in a dictionary that contains a substring","code":"[(k, v) for k, v in D.items() if 'Light' in k]","relevant":"print(distutils.sysconfig.get_config_vars())?_split_?process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\nwhile True:\n    pass?_split_?logging.basicConfig(level=logging.INFO)?_split_?"}
{"nl":"How do I use a MD5 hash (or other binary data) as a key name?","code":"k = hashlib.md5('thecakeisalie').hexdigest()","relevant":"key = lambda l: l[0]?_split_?EMAIL_HOST = 'localhost'\nEMAIL_PORT = 25?_split_?if abs(answer + 1 - n) < abs(answer - 1 - n):\n    return answer + 1?_split_?"}
{"nl":"How to get only the last part of a path in Python?","code":"os.path.basename(os.path.normpath('\/folderA\/folderB\/folderC\/folderD\/'))","relevant":"from functools import reduce\ni = reduce(lambda x, y: (x << 8) + ord(y), v, 0)?_split_?xnew = np.linspace(x.min(), x.max(), num=41, endpoint=False)\nynew = f(xnew)?_split_?cfile = os.path.join(MEDIA_ROOT, 'temp\/src\/cfile.c')?_split_?"}
{"nl":"Sorting datetime objects while ignoring the year?","code":"birthdays.sort(key=lambda d: (d.month, d.day))","relevant":"[item for t in tuples for item in t]?_split_?gr = P.OneOrMore(P.Group(key_equal + val))\nprint(gr.parseString('ids = 12, 13, 14 fields = name, title'))?_split_?string = (\n    '\\udcd0\\udca0\\udcd0\\udcbe\\udcd1\\udc81\\udcd0\\udcbd\\udcd0\\udcb5\\udcd1\\udc84\\udcd1\\udc82\\udcd1\\udc8c'\n    )?_split_?"}
{"nl":"How do I extract table data in pairs using BeautifulSoup?","code":"[[td.findNext(text=True) for td in tr.findAll('td')] for tr in rows]","relevant":"import parser\nformula = 'sin(x)*x**2'?_split_?a.append(k)?_split_?[1, 2, 3, 4, 5]?_split_?"}
{"nl":"python: rstrip one exact string, respecting order","code":"\"\"\"Boat.txt.txt\"\"\".replace('.txt', '')","relevant":"pizza = models.ForeignKey('Pizza')?_split_?imgstr = StringIO()\nimg.save(imgstr, 'PNG')?_split_?def __bar(self):\n    pass?_split_?"}
{"nl":"Python Pandas: How to get the row names from index of a dataframe?","code":"list(df.index)","relevant":"new_string = ''.join(re.findall('\\\\d+', s))?_split_?def __init__(self, x, y):\n    self._x = x?_split_?yield index, L[index]?_split_?"}
{"nl":"Python Pandas: How to get the row names from index of a dataframe?","code":"df.index","relevant":"new_string = ''.join(re.findall('\\\\d+', s))?_split_?def __init__(self, x, y):\n    self._x = x?_split_?yield index, L[index]?_split_?"}
{"nl":"List of all unique characters in a string?","code":"\"\"\"\"\"\".join(list(OrderedDict.fromkeys('aaabcabccd').keys()))","relevant":"for s1_tuple in itertools.combinations(topics, r):\n    pass?_split_?while 1:\n    pass?_split_?min(min(l_one), min(l_two))?_split_?"}
{"nl":"List of all unique characters in a string?","code":"list(set('aaabcabccd'))","relevant":"for s1_tuple in itertools.combinations(topics, r):\n    pass?_split_?while 1:\n    pass?_split_?min(min(l_one), min(l_two))?_split_?"}
{"nl":"List of all unique characters in a string?","code":"\"\"\"\"\"\".join(set('aaabcabccd'))","relevant":"for s1_tuple in itertools.combinations(topics, r):\n    pass?_split_?while 1:\n    pass?_split_?min(min(l_one), min(l_two))?_split_?"}
{"nl":"Find rows with non zero values in a subset of columns in pandas dataframe","code":"df.loc[(df.loc[:, (df.dtypes != object)] != 0).any(1)]","relevant":"def deep_annotate(item):\n    if isinstance(item, list):\n        return 1, [deep_annotate(i) for i in item]?_split_?iter = NpyIter_New(X, NPY_ITER_READONLY, NPY_KEEPORDER, NPY_NO_CASTING, dtype)?_split_?s.splitlines()\n\"\"\"\n\"\"\"?_split_?"}
{"nl":"upload file with Python Mechanize","code":"br.form.add_file(open(filename), 'text\/plain', filename)","relevant":"source = pd.DataFrame({'A': ['foo', 'bar'], 'B': [1, 2], 'C': [(1, 2), (3, 4)]}\n    )?_split_?return self.__class__.PARAM?_split_?payload = {'longUrl': url}\nheaders = {'content-type': 'application\/json'}?_split_?"}
{"nl":"Multiple 'in' operators in Python?","code":"all(word in d for word in ['somekey', 'someotherkey', 'somekeyggg'])","relevant":"def combine_dicts(a, b, op=operator.add):\n    return dict(list(a.items()) + list(b.items()) + [(k, op(a[k], b[k])) for k in set(b\n        ) & set(a)])?_split_?super(bidict, self).__init__(key, value)?_split_?for root, dirs, files in temp:\n    pass?_split_?"}
{"nl":"How to hide output of subprocess in Python 2.7","code":"subprocess.check_output(['espeak', text], stderr=subprocess.STDOUT)","relevant":"a\nnp.where(np.isnan(a), ma.array(a, mask=np.isnan(a)).mean(axis=1), a)?_split_?print(connection.closed)?_split_?return col if col is not None else replacement?_split_?"}
{"nl":"How to replace NaNs by preceding values in pandas DataFrame?","code":"df.fillna(method='ffill', inplace=True)","relevant":"new_path.append(elem)?_split_?def some_fun():\n    global GLOB_VAR\nGLOB_VAR = 'Some other string'?_split_?for row in parse_csv('names_2.csv'):\n    for found, score, matchrow in process.extract(row, data, limit=1):\n        if score >= 60:\n            print('%d%% partial match: \"%s\" with \"%s\" ' % (score, row, found))\nDigi_Results = [row, score, found]\nwriter.writerow(Digi_Results)?_split_?"}
{"nl":"How to create range of numbers in Python like in MATLAB","code":"print(np.linspace(1, 3, num=4, endpoint=False))","relevant":"Data = NP.random.randint(-5, 5, 1000).reshape(500, 2)?_split_?total_price = 0\nfor item in l:\n    pass?_split_?print(json.dumps(tree, indent=4))?_split_?"}
{"nl":"How to create range of numbers in Python like in MATLAB","code":"print(np.linspace(1, 3, num=5))","relevant":"Data = NP.random.randint(-5, 5, 1000).reshape(500, 2)?_split_?total_price = 0\nfor item in l:\n    pass?_split_?print(json.dumps(tree, indent=4))?_split_?"}
{"nl":"Symlinks on windows?","code":"kdll.CreateSymbolicLinkW('D:\\\\testdirLink', 'D:\\\\testdir', 1)","relevant":"x = np.arange(2 * np.pi, step=0.01)?_split_?d1.update(d2)?_split_?dt = datetime.datetime.now()?_split_?"}
{"nl":"Python: slicing a multi-dimensional array","code":"slice = [arr[i][0:2] for i in range(0, 2)]","relevant":"?_split_?c1.close()?_split_?functions = [functionA, functionB]\nfor _ in range(100):\n    function = random.choice(functions)?_split_?"}
{"nl":"Upload files to Google cloud storage from appengine app","code":"upload_url = blobstore.create_upload_url('\/upload', gs_bucket_name='my_bucket')","relevant":"[buildout]\nextends = base_seployment.cfg?_split_?self.inverse.setdefault(value, []).append(key)?_split_?import subprocess\n\ndef is_runnning(app):\n    count = int(subprocess.check_output(['osascript', '-e',\n        'tell application \"System Events\"', '-e', \n        'count (every process whose name is \"' + app + '\")', '-e',\n        'end tell']).strip())\nreturn count > 0?_split_?"}
{"nl":"Change directory to the directory of a Python script","code":"os.chdir(os.path.dirname(__file__))","relevant":"imlist = [filename for filename in allfiles if filename[-4:] in ['.png',\n    '.PNG']]\nw, h = Image.open(imlist[0]).size\nN = len(imlist)\narr = numpy.zeros((h, w, 3), numpy.float)\nfor im in imlist:\n    imarr = numpy.array(Image.open(im), dtype=numpy.float)\narr = arr + imarr \/ N\narr = numpy.array(numpy.round(arr), dtype=numpy.uint8)\nout = Image.fromarray(arr, mode='RGB')\nout.save('Average.png')\nout.show()?_split_?x = np.arange(0, n * len(A), n)\nxx = np.arange((len(A) - 1) * n + 1)?_split_?if __name__ == '__main__':\n    for found_str in process(sys.stdin):\n        pass?_split_?"}
{"nl":"Call a function with argument list in python","code":"func(*args)","relevant":"log.put()\nself.redirect('http:\/\/www.appurl.com')?_split_?from collections import defaultdict?_split_?func(bar='quux', foo=42)?_split_?"}
{"nl":"Pandas DataFrame, how do i split a column into two","code":"df['AB'].str.split(' ', 1, expand=True)","relevant":"for item in items:\n    lookup[key(item)].append(item)\nlookup = {}\nfor item in items:\n    lookup.setdefault(key(item), []).append(item)?_split_?def get_items(coo, num_items=2, num_iter=10):\n    pass?_split_?kwargs = {'foo': 'bar', 'spam': 'ham'}?_split_?"}
{"nl":"Pandas DataFrame, how do i split a column into two","code":"df['A'], df['B'] = df['AB'].str.split(' ', 1).str","relevant":"for item in items:\n    lookup[key(item)].append(item)\nlookup = {}\nfor item in items:\n    lookup.setdefault(key(item), []).append(item)?_split_?def get_items(coo, num_items=2, num_iter=10):\n    pass?_split_?kwargs = {'foo': 'bar', 'spam': 'ham'}?_split_?"}
{"nl":"Sorting Python list based on the length of the string","code":"print(sorted(xs, key=len))","relevant":"fig = plt.figure()\nax = fig.add_subplot(111)\nax.imshow(data, interpolation='nearest')\nax.set_aspect(5)\nplt.show()?_split_?require('nn')\nn = nn.SpatialConvolution(1, 16, 12, 12)?_split_?a = [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1]?_split_?"}
{"nl":"Sorting Python list based on the length of the string","code":"xs.sort(lambda x, y: cmp(len(x), len(y)))","relevant":"fig = plt.figure()\nax = fig.add_subplot(111)\nax.imshow(data, interpolation='nearest')\nax.set_aspect(5)\nplt.show()?_split_?require('nn')\nn = nn.SpatialConvolution(1, 16, 12, 12)?_split_?a = [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1]?_split_?"}
{"nl":"Sorting Python list based on the length of the string","code":"xs.sort(key=lambda s: len(s))","relevant":"fig = plt.figure()\nax = fig.add_subplot(111)\nax.imshow(data, interpolation='nearest')\nax.set_aspect(5)\nplt.show()?_split_?require('nn')\nn = nn.SpatialConvolution(1, 16, 12, 12)?_split_?a = [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1]?_split_?"}
{"nl":"how to plot arbitrary markers on a pandas data series?","code":"ts.plot(marker='.')","relevant":"import os\nb = os.path.getsize('\/path\/isa_005.mp3')\nb?_split_?class ProfileForm(forms.ModelForm):\n\n\n    class Meta:\n        model = User\nfields = ['username', 'country', 'website', 'biography']?_split_?with zipfile.ZipFile(tDir + mainapk[0]) as z:\n    with z.open(icon[1]) as zf:\n        pass?_split_?"}
{"nl":"get all combination of n binary value","code":"lst = list(itertools.product([0, 1], repeat=n))","relevant":"resources = builder.paginate(int(request.args['page'])).items?_split_?d['database'] = 'master'?_split_?import csv\nimport urllib.request, urllib.parse, urllib.error\nurl = (\n    \"\"\"http:\/\/ichart.finance.yahoo.com\/table.csv?s=IBM&a=00&b=1&c=2011&d=11&e=31&f=2011&g=d&ignore=.csv\"\"\"\n    )\nreader = csv.reader(urllib.request.urlopen(url), delimiter=',')\ncleaned = sorted([([r[0]] + map(float, r[1:])) for r in list(reader)[1:]])\nfor i, row in enumerate(cleaned):\n    pass?_split_?"}
{"nl":"get all combination of n binary value","code":"lst = map(list, itertools.product([0, 1], repeat=n))","relevant":"resources = builder.paginate(int(request.args['page'])).items?_split_?d['database'] = 'master'?_split_?import csv\nimport urllib.request, urllib.parse, urllib.error\nurl = (\n    \"\"\"http:\/\/ichart.finance.yahoo.com\/table.csv?s=IBM&a=00&b=1&c=2011&d=11&e=31&f=2011&g=d&ignore=.csv\"\"\"\n    )\nreader = csv.reader(urllib.request.urlopen(url), delimiter=',')\ncleaned = sorted([([r[0]] + map(float, r[1:])) for r in list(reader)[1:]])\nfor i, row in enumerate(cleaned):\n    pass?_split_?"}
{"nl":"get all combination of n binary value","code":"bin = [0, 1]\n[(x, y, z) for x in bin for y in bin for z in bin]","relevant":"resources = builder.paginate(int(request.args['page'])).items?_split_?d['database'] = 'master'?_split_?import csv\nimport urllib.request, urllib.parse, urllib.error\nurl = (\n    \"\"\"http:\/\/ichart.finance.yahoo.com\/table.csv?s=IBM&a=00&b=1&c=2011&d=11&e=31&f=2011&g=d&ignore=.csv\"\"\"\n    )\nreader = csv.reader(urllib.request.urlopen(url), delimiter=',')\ncleaned = sorted([([r[0]] + map(float, r[1:])) for r in list(reader)[1:]])\nfor i, row in enumerate(cleaned):\n    pass?_split_?"}
{"nl":"get all combination of n binary value","code":"lst = list(itertools.product([0, 1], repeat=3))","relevant":"resources = builder.paginate(int(request.args['page'])).items?_split_?d['database'] = 'master'?_split_?import csv\nimport urllib.request, urllib.parse, urllib.error\nurl = (\n    \"\"\"http:\/\/ichart.finance.yahoo.com\/table.csv?s=IBM&a=00&b=1&c=2011&d=11&e=31&f=2011&g=d&ignore=.csv\"\"\"\n    )\nreader = csv.reader(urllib.request.urlopen(url), delimiter=',')\ncleaned = sorted([([r[0]] + map(float, r[1:])) for r in list(reader)[1:]])\nfor i, row in enumerate(cleaned):\n    pass?_split_?"}
{"nl":"Append string to the start of each value in a said column of a pandas dataframe (elegantly)","code":"df['col'] = 'str' + df['col'].astype(str)","relevant":"best1 = min(best1, timeit.timeit('i % 65536', setup=setup, number=10000))?_split_?with open('data.txt', 'wb') as f:\n    pass?_split_?print('{s:{c}<{n}}{num:2.4}'.format(s='Precision', n=15, c='', num=precision))?_split_?"}
{"nl":"How to get a variable name as a string in Python?","code":"dict((name, eval(name)) for name in ['some', 'list', 'of', 'vars'])","relevant":"import pdb\na = 'aaa'\npdb.set_trace()\nb = 'bbb'\nc = 'ccc'\nfinal = a + b + c\nprint(final)?_split_?def slow_check(hashed, item):\n    matches = on_disk.search((hashed,))\nfor record in matches:\n    if item == record.value:\n        return True\nreturn False\nfor large_item in many_items:\n    hashed = hash(large_item)\nif hashed not in fast_check or not slow_check(hashed, large_item):\n    on_disk.append((hashed, large_item))\nfast_check.add(hashed)\nprocess(large_item)?_split_?from sklearn.datasets import make_classification\nfrom sklearn.naive_bayes import GaussianNB?_split_?"}
{"nl":"How to add a colorbar for a hist2d plot","code":"plt.colorbar(im, ax=ax)","relevant":"names = 'Vincent Vega Jules Winnfield'?_split_?any(([1, 2] == x).all() for x in a)?_split_?def __init__(self, rows, cols):\n    pass?_split_?"}
{"nl":"How to get every element in a list of list of lists?","code":"[a for c in Cards for b in c for a in b]","relevant":"import os\nimport sys\nroot_path = os.path.abspath(os.path.split(__file__)[0])\nsys.path.insert(0, os.path.join(root_path, 'project_name'))\nsys.path.insert(0, root_path)?_split_?stock('GS', currency('USD'))?_split_?return hex(struct.unpack('<Q', struct.pack('<d', f))[0])?_split_?"}
{"nl":"Sorting dictionary keys in python","code":"sorted(d, key=d.get)","relevant":"f = open('foo.file', 'wb')\nf.seek(-len(os.linesep), os.SEEK_END)?_split_?curl.setopt(curl.USERPWD, '%s:%s' % ('youruser', 'yourpassword'))\ncurl.setopt(curl.WRITEFUNCTION, response_buffer.write)?_split_?a = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\na_out = skipped_view(a, 4)?_split_?"}
{"nl":"How to count the number of occurences of `None` in a list?","code":"print(len([x for x in lst if x is not None]))","relevant":"for i, x in enumerate(lst):\n    pass?_split_?class BlobField(models.Field):\n    description = 'Blob'\n\ndef db_type(self, connection):\n    return 'blob'?_split_?a = defaultdict(lambda : 1)\na['foo'] += 1?_split_?"}
{"nl":"Accessing dictionary by key in Django template","code":"{{json.key1}}","relevant":"a\nab?_split_?import topp\nimport topp.sub1?_split_?ax = p.plot(kind='barh', xerr=e, width=0.85)\nfor r in ax.patches:\n    if r.get_x() < 0:\n        ax.text(0.25, r.get_y() + r.get_height() \/ 5.0, '{:>7.1f}%'.format(\n            r.get_x() * 100), bbox={'facecolor': 'red', 'alpha': 0.5, 'pad':\n            1}, fontsize=10, family='monospace', zorder=10)\nelse:\n    ax.text(-1.5, r.get_y() + r.get_height() \/ 5.0, '{:>6.1f}%'.format(r.\n        get_width() * 100), bbox={'facecolor': 'green', 'alpha': 0.5, 'pad':\n        1}, fontsize=10, family='monospace', zorder=10)\nplt.tight_layout()?_split_?"}
{"nl":"Get unique values from a list in python","code":"mynewlist = list(myset)","relevant":"from scrapy.selector import XmlXPathSelector\nimport lxml.etree as etree\nrequest = Request(link, callback=self.parse_resp)\nyield request\n\ndef parse_resp(self, response):\n    json = response.body\njson_dict = json.loads(json)\nxml = dicttoxml.dicttoxml(json_dict)\nxml = etree.fromstring(xml)\nxml = XmlXPathSelector(text=xml)\ndata = xml.select(\".\/\/*[@id='count']\/text()\").extract()\nreturn data?_split_?(2)[a, b]?_split_?G = nx.Graph(G)?_split_?"}
{"nl":"Get unique values from a list in python","code":"set(['a', 'b', 'c', 'd'])","relevant":"from scrapy.selector import XmlXPathSelector\nimport lxml.etree as etree\nrequest = Request(link, callback=self.parse_resp)\nyield request\n\ndef parse_resp(self, response):\n    json = response.body\njson_dict = json.loads(json)\nxml = dicttoxml.dicttoxml(json_dict)\nxml = etree.fromstring(xml)\nxml = XmlXPathSelector(text=xml)\ndata = xml.select(\".\/\/*[@id='count']\/text()\").extract()\nreturn data?_split_?(2)[a, b]?_split_?G = nx.Graph(G)?_split_?"}
{"nl":"Python: A4 size for a plot","code":"figure(figsize=(11.69, 8.27))","relevant":"with open(newfile, 'a') as ntxt:\n    ntxt.write(rline)\ntree = ET.parse(newfile)\nroot = tree.getroot()?_split_?from google.appengine.api import app_identity?_split_?figure(1, figsize=(6, 6))\nax = axes([0.1, 0.1, 0.8, 0.8])?_split_?"}
{"nl":"How to get everything after last slash in a URL?","code":"url.rsplit('\/', 1)","relevant":"exec('import vfs_tests as v')?_split_?bits = 32\nhex((1 << bits) + x)?_split_?@functools.wraps(f)\ndef wrapped(*args, **kwargs):\n    access_result = _eval_access(logged_in, roles)?_split_?"}
{"nl":"How to get everything after last slash in a URL?","code":"url.rsplit('\/', 1)[-1]","relevant":"exec('import vfs_tests as v')?_split_?bits = 32\nhex((1 << bits) + x)?_split_?@functools.wraps(f)\ndef wrapped(*args, **kwargs):\n    access_result = _eval_access(logged_in, roles)?_split_?"}
{"nl":"how to read a file in other directory in python","code":"x_file = open(os.path.join(direct, '5_1.txt'), 'r')","relevant":"text_count = 2 * (len(x) \/ len(text)) if text_count is None else text_count?_split_?class PipelineCleanerStorage(PipelineStorage):\n\n    def post_process(self, paths, dry_run=False, **options):\n        pass?_split_?m = [([0] * n_classes) for i in range(n_classes)]?_split_?"}
{"nl":"How to create a list with the characters of a string?","code":"list('5+6')","relevant":"pprint(data)?_split_?print(word, item)?_split_?glTranslatef(100, 100)?_split_?"}
{"nl":"Flattening a list of NumPy arrays?","code":"np.concatenate(input_list).ravel().tolist()","relevant":"from bitarray import bitarray?_split_?b = np.array([0, 1, 0, 1, 0, 1])\nc = a | b?_split_?'1\/9\/2013', '1\/10\/2013', '1\/11\/2013', '1\/14\/2013', '1\/15\/2013'?_split_?"}
{"nl":"Converting a dict into a list","code":"print([y for x in list(dict.items()) for y in x])","relevant":"import sys?_split_?f.write(hex(i))?_split_?with open('test.txt') as t_in:\n    pass?_split_?"}
{"nl":"Converting a dict into a list","code":"[y for x in list(dict.items()) for y in x]","relevant":"import sys?_split_?f.write(hex(i))?_split_?with open('test.txt') as t_in:\n    pass?_split_?"}
{"nl":"How to pull a random record using Django's ORM?","code":"MyModel.objects.order_by('?').first()","relevant":"a[0].append([1, 2, 3, 4])\na[0].append([1, 2, 3])?_split_?os.mkdir(dir)?_split_?self.rules[attr] = value?_split_?"}
{"nl":"change current working directory in python","code":"os.chdir('chapter3')","relevant":"screen.getch()?_split_?p.terminate()?_split_?print(NewList[0]._data)?_split_?"}
{"nl":"change current working directory in python","code":"os.chdir('C:\\\\Users\\\\username\\\\Desktop\\\\headfirstpython\\\\chapter3')","relevant":"screen.getch()?_split_?p.terminate()?_split_?print(NewList[0]._data)?_split_?"}
{"nl":"change current working directory in python","code":"os.chdir('.\\\\chapter3')","relevant":"screen.getch()?_split_?p.terminate()?_split_?print(NewList[0]._data)?_split_?"}
{"nl":"How to create single Python dict from a list of dicts by summing values with common keys?","code":"dict((key, sum(d[key] for d in dictList)) for key in dictList[0])","relevant":"a = input('Type something: ')\nb = input('Type something else: ')\nprint('You typed', repr(a), 'and', repr(b))?_split_?'b', 'a', 'c'?_split_?value = ''?_split_?"}
{"nl":"How to sort pandas data frame using values from several columns?","code":"df.sort(['c1', 'c2'], ascending=[True, True])","relevant":"import xml.dom.minidom as minidom?_split_?x = [1, 2, 3]\ny = [0, 0, 0]\nz = [0, 0, 0]\ndx = [0.5, 0.5, 0.5]?_split_?from django.shortcuts import redirect?_split_?"}
{"nl":"Converting string series to float list","code":"floats = [float(x) for x in s.split()]","relevant":"for item in l:\n    value_set = str(item[0:])?_split_?import A\nM.bar\nimport B\nM.bar?_split_?with sqlite3.connect('whatever.sqlite') as con:\n    sql = 'SELECT * FROM table_name'\ndf = pd.read_sql_query(sql, con)\nprint(df.shape)?_split_?"}
{"nl":"Converting string series to float list","code":"floats = map(float, s.split())","relevant":"for item in l:\n    value_set = str(item[0:])?_split_?import A\nM.bar\nimport B\nM.bar?_split_?with sqlite3.connect('whatever.sqlite') as con:\n    sql = 'SELECT * FROM table_name'\ndf = pd.read_sql_query(sql, con)\nprint(df.shape)?_split_?"}
{"nl":"How to set \"step\" on axis X in my figure in matplotlib python 2.6.6?","code":"plt.xticks([1, 2, 3, 4, 5])","relevant":"def tfact(n, acc=1):\n    pass?_split_?dict(zip(keys, itemgetter(*keys)(d)))?_split_?r = list(csv.reader(file_obj))\nprint(r[0])?_split_?"}
{"nl":"read from stdin","code":"for line in fileinput.input():\n    pass","relevant":"for i in range(Np):\n    pass?_split_?dud_ = dud[:]\npc_dud_ = pc_dud[:]\nwhile dud_:\n    d1, d2 = min(itertools.product(dud, pc_dud), key=lambda d1, d2: abs(int\n        (d1) - int(d2)))\ndud_.remove(d1)\npc_dud_.remove(d2)\nprint(d1, d2)?_split_?n += 1?_split_?"}
{"nl":"read from stdin","code":"for line in sys.stdin:\n    pass","relevant":"for i in range(Np):\n    pass?_split_?dud_ = dud[:]\npc_dud_ = pc_dud[:]\nwhile dud_:\n    d1, d2 = min(itertools.product(dud, pc_dud), key=lambda d1, d2: abs(int\n        (d1) - int(d2)))\ndud_.remove(d1)\npc_dud_.remove(d2)\nprint(d1, d2)?_split_?n += 1?_split_?"}
{"nl":"How to check if a value exists in a dictionary (python)","code":"'one' in list(d.values())","relevant":"class Dumper(json.JSONEncoder):\n    __slots__ = ()?_split_?def s_to_bitlist(s):\n    pass?_split_?class UserDetailSerializer(serializers.HyperlinkedModelSerializer):\n    pass?_split_?"}
{"nl":"How to check if a value exists in a dictionary (python)","code":"'one' in iter(d.values())","relevant":"class Dumper(json.JSONEncoder):\n    __slots__ = ()?_split_?def s_to_bitlist(s):\n    pass?_split_?class UserDetailSerializer(serializers.HyperlinkedModelSerializer):\n    pass?_split_?"}
{"nl":"Calling a parent class constructor from a child class in python","code":"super(Instructor, self).__init__(name, year)","relevant":"def __new__(cls, **args):\n    pass?_split_?numpy.concatenate([a, b])?_split_?val = URLValidator(verify_exists=False)\ntry:\n    val('http:\/\/www.google.com')\nexcept ValidationError as e:\n    print(e)?_split_?"}
{"nl":"how to create a dictionary using two lists in python?","code":"dict(zip(x, y))","relevant":"dcol < -c(rep(1, 400), rep(2, 400), rep(3, 400))\nggknot < -data.frame(x, y, z, dcol)?_split_?df2.columns = df2.columns.droplevel(0)?_split_?2011 - 11 - 7?_split_?"}
{"nl":"Sorting a list of dicts by dict values","code":"sorted(a, key=lambda i: list(i.values())[0], reverse=True)","relevant":"root.sides = [10, [1, 2]]\nprint(root.sides)\ntype(root.sides[1])?_split_?d['c', 'd'] = 3?_split_?return spider?_split_?"}
{"nl":"Sorting a list of dicts by dict values","code":"sorted(a, key=dict.values, reverse=True)","relevant":"root.sides = [10, [1, 2]]\nprint(root.sides)\ntype(root.sides[1])?_split_?d['c', 'd'] = 3?_split_?return spider?_split_?"}
{"nl":"pandas: how to do multiple groupby-apply operations","code":"df.groupby(level=0).agg(['sum', 'count', 'std'])","relevant":"def detect_pixellated(fp):\n    img = misc.imread(fp)\nwidth, height = np.shape(img)[0:2]\nthreshold = 20\nfor x in range(width):\n    for y in range(height):\n        neighbors = get_neighbors(x, y, img)?_split_?requests.packages.urllib3.util.ssl_.DEFAULT_CIPHERS = (\n    \"\"\"DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+HIGH:DH+HIGH:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+HIGH:RSA+3DES:!aNULL:!eNULL:!MD5\"\"\"\n    )?_split_?return list(choice(json_obj[k]).values())[0]?_split_?"}
{"nl":"How to add multiple values to a dictionary key in python?","code":"a.setdefault('somekey', []).append('bob')","relevant":"settings.configure()?_split_?a?_split_?plt.bar(indices, [10, 3, 6, 10], width=width)?_split_?"}
{"nl":"Python - sum values in dictionary","code":"sum(item['gold'] for item in example_list)","relevant":"screenshot = PhotoImage(file='output.png')?_split_?\"\"\"abc\\\\dev\\\\t\"\"\"?_split_?print(optimization.curve_fit(func, xdata, ydata, x0, sigma))?_split_?"}
{"nl":"Python - sum values in dictionary","code":"sum([item['gold'] for item in example_list])","relevant":"screenshot = PhotoImage(file='output.png')?_split_?\"\"\"abc\\\\dev\\\\t\"\"\"?_split_?print(optimization.curve_fit(func, xdata, ydata, x0, sigma))?_split_?"}
{"nl":"Python - sum values in dictionary","code":"sum(item['gold'] for item in myLIst)","relevant":"screenshot = PhotoImage(file='output.png')?_split_?\"\"\"abc\\\\dev\\\\t\"\"\"?_split_?print(optimization.curve_fit(func, xdata, ydata, x0, sigma))?_split_?"}
{"nl":"writing string to a file on a new line everytime?","code":"f.write('text to write\\n')","relevant":"df.columns?_split_?from collections import Counter?_split_?return {'data': 'your data here', 'other_information': 'more_stuff'}\napi.add_resource(Data, '\/data')\nif __name__ == '__main__':\n    app.run(debug=True)?_split_?"}
{"nl":"writing string to a file on a new line everytime?","code":"file.write('My String\\n')","relevant":"df.columns?_split_?from collections import Counter?_split_?return {'data': 'your data here', 'other_information': 'more_stuff'}\napi.add_resource(Data, '\/data')\nif __name__ == '__main__':\n    app.run(debug=True)?_split_?"}
{"nl":"Finding consecutive segments in a pandas data frame","code":"df.reset_index().groupby('A')['index'].apply(np.array)","relevant":"self._val = 0?_split_?import re\naddress = 'test@gmail.com'\nif re.match('^[a-z0-9_]{1,8}@[a-z0-9_]{1,8}\\\\.com$', address, re.IGNORECASE):\n    print('valid')\nelse:\n    print('invalid')?_split_?if x == 'c':\n    break?_split_?"}
{"nl":"Python - how to refer to relative paths of resources when working with code repository","code":"fn = os.path.join(os.path.dirname(__file__), 'my_file')","relevant":"filename = os.path.join(ldir, fname)?_split_?ser = serial.Serial(port, 9600)\nvalue = 0\nwhile 1:\n    value = ser.read()?_split_?class TestSequence(unittest.TestCase):\n    pass\nif __name__ == '__main__':\n    for i in range(1, 11):\n        pass?_split_?"}
{"nl":"How to retrieve an element from a set without removing it?","code":"e = next(iter(s))","relevant":"df = pd.DataFrame({'date': np.random.choice(pd.date_range(start_date,\n    periods=365 * 5, freq='D'), 50)})?_split_?res = []?_split_?bound_method = getattr(obj, attr)?_split_?"}
{"nl":"How to execute a command prompt command from python","code":"os.system('dir c:\\\\')","relevant":"logger.addHandler(handler)\nlogger.setLevel(logging.DEBUG)?_split_?ax2 = ax.twinx()?_split_?a?_split_?"}
{"nl":"How to auto-scroll a gtk.scrolledwindow?","code":"self.treeview.connect('size-allocate', self.treeview_changed)","relevant":"patterns = ['\/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*']?_split_?spl[-1] = int(spl[-1])\nspl?_split_?a[-1] * (a[-1] + a[0]) \/ 2 - sum(a)?_split_?"}
{"nl":"Python: Find in list","code":"3 in [1, 2, 3]","relevant":"html = \"\"\"\n  <table class=\"details\" border=\"0\" cellpadding=\"5\" cellspacing=\"2\" width=\"95%\">\n    <tr valign=\"top\">\n      <th>Tests<\/th>\n      <th>Failures<\/th>\n      <th>Success Rate<\/th>\n      <th>Average Time<\/th>\n      <th>Min Time<\/th>\n      <th>Max Time<\/th>\n   <\/tr>\n   <tr valign=\"top\" class=\"Failure\">\n     <td>103<\/td>\n     <td>24<\/td>\n     <td>76.70%<\/td>\n     <td>71 ms<\/td>\n     <td>0 ms<\/td>\n     <td>829 ms<\/td>\n  <\/tr>\n<\/table>\"\"\"\nsoup = BeautifulSoup(html)\ntable = soup.find('table', attrs={'class': 'details'})\nheadings = [th.get_text() for th in table.find('tr').find_all('th')]\ndatasets = []\nfor row in table.find_all('tr')[1:]:\n    dataset = zip(headings, (td.get_text() for td in row.find_all('td')))\ndatasets.append(dataset)\nprint(datasets)?_split_?for item in remove_from:\n    counts[item] += 1\nif counts[item] <= how_many:\n    yield item?_split_?text = 'Today is 11\/27\/2012. PyCon starts 3\/13\/2013.'\ntext_re = re.sub('(\\\\d+)\/(\\\\d+)\/(\\\\d+)', '\\\\3-\\\\1-\\\\2', text2)\nprint(text_re)?_split_?"}
{"nl":"Convert date format python","code":"datetime.datetime.strptime('10\/05\/2012', '%d\/%m\/%Y').strftime('%Y-%m-%d')","relevant":"with open('self.pik', 'r') as f:\n    pass?_split_?df2.columns = ['letter', 'num']\ndf2?_split_?import sys\nimport codecs\nsys.stdout = codecs.getwriter('utf-8')(sys.stdout)?_split_?"}
{"nl":"python : how to convert string literal to raw string literal?","code":"s = s.replace('\\\\', '\\\\\\\\')","relevant":"f = StringIO('<!ELEMENT b EMPTY>')\ndtd = etree.DTD(f)\ndtd = etree.DTD(external_id='-\/\/OASIS\/\/DTD DocBook XML V4.2\/\/EN')?_split_?class Song:\n    pass?_split_?sums.append(lastsum)?_split_?"}
{"nl":"Get output of python script from within python script","code":"print(proc.communicate()[0])","relevant":"if hasattr(engine, 'console_control_handler'):\n    engine.console_control_handler.subscribe()\nengine.start()\nengine.block()?_split_?for i in range(1, N):\n    pass?_split_?results = []?_split_?"}
{"nl":"Getting pandas dataframe from list of nested dictionaries","code":"pd.concat([pd.DataFrame(l) for l in my_list], axis=1).T","relevant":"import ctypes\nfrom ctypes.util import find_library\nlapack = ctypes.cdll.LoadLibrary(find_library('lapack'))?_split_?json.dumps({'x': decimal.Decimal('5.5')}, default=decimal_default)?_split_?import numpy as np\ndf = pd.DataFrame({'id': [1, 1, 2, 2, 1, 2, 1, 1], 'x': [10, 20, 100, 200,\n    np.nan, np.nan, 300, np.nan]})\ndf['x'] = df.groupby(['id'])['x'].transform(lambda grp: grp.fillna(method=\n    'ffill'))?_split_?"}
{"nl":"Delete Column in Pandas based on Condition","code":"df.loc[:, ((df != 0).any(axis=0))]","relevant":"vol += list(volume.values())?_split_?from a import *\nif name == 'Michael' and age == 15:\n    pass?_split_?os.dup2(cat.stdin.fileno(), sys.stderr.fileno())?_split_?"}
{"nl":"How to sort multidimensional array by column?","code":"sorted(a, key=lambda x: x[1])","relevant":"thread.start()\nthread.join()\n\ndef run_in_thread(xl_id):\n    pythoncom.CoInitialize()\nxl = win32com.client.Dispatch(pythoncom.CoGetInterfaceAndReleaseStream(\n    xl_id, pythoncom.IID_IDispatch))\ntime.sleep(5)\nif __name__ == '__main__':\n    start()?_split_?commandname = 'cat'\nf = tempfile.NamedTemporaryFile(delete=False)\nf.write('oh hello there')\nf.close()\nres = commands.getoutput('%s %s' % (commandname, f.name))\nprint(res)\nos.unlink(f.name)?_split_?import binascii?_split_?"}
{"nl":"string to list conversion in python","code":"[x.strip() for x in s.split(',')]","relevant":"y, x, _ = hist(data, 100, alpha=0.3, label='data')\nx = (x[1:] + x[:-1]) \/ 2?_split_?from nltk.corpus import state_union\ntrain_text = state_union.raw('2005-GWBush.txt').split('\\n')\ntrain_text[11]?_split_?spread = rand(50) * 100?_split_?"}
{"nl":"Get list item by attribute in Python","code":"items = [item for item in container if item.attribute == value]","relevant":"{{(object.article.rating_score | add): '-100'}}?_split_?\"\"\"Return a populdated fake csv file object for testing.\"\"\"?_split_?serializer.serialize(queryset, fields=fields)\nprint(serializer.getvalue())?_split_?"}
{"nl":"Python: Write a list of tuples to a file","code":"open('filename', 'w').write('\\n'.join('%s %s' % x for x in mylist))","relevant":"ax.set_yticks(y_pos)\nax.set_yticklabels(people)?_split_?font_fmt = workbook.add_format({'font_name': 'Arial', 'font_size': 10})\nheader_fmt = workbook.add_format({'font_name': 'Arial', 'font_size': 10,\n    'bold': True})\nworksheet.set_column('A:A', None, font_fmt)\nworksheet.set_row(0, None, header_fmt)\nwriter.save()?_split_?a = 0, 1, 5, 3, 2\nfloat('{0}.{1}'.format(a[0], ''.join(str(n) for n in a[1:])))?_split_?"}
{"nl":"Python regex to match multiple times","code":"pattern = re.compile('(?:review: )?(http:\/\/url.com\/(\\\\d+))\\\\s?', re.IGNORECASE)","relevant":"import itertools\nsum(itertools.starmap(operator.mul, itertools.combinations(l, 2)))?_split_?for elm in driver.find_elements_by_xpath('\/\/*[%s]' % conditions):\n    pass?_split_?import pickle?_split_?"}
{"nl":"How do I read a text file into a string variable in Python","code":"str = open('very_Important.txt', 'r').read()","relevant":"a, b, x, y = sympy.symbols('a b x y')?_split_?H, xedges, yedges = np.histogram2d(x_axis, y_axis, bins=10, weights=z_axis)?_split_?screen.force_update()?_split_?"}
{"nl":"Grouping dataframes in pandas?","code":"df.groupby(['A', 'B'])['C'].unique()","relevant":"yacc.yacc()?_split_?'cua', 'cug', 'ccu', 'ccc', 'cca', 'ccg', 'cau', 'cac', 'caa'?_split_?dest = 'C:\\\\test\\\\DestFolder'\nc.convert(src, dest, '-c PDF -log c:\\\\test\\\\PDFSplitter.log')\nif not os.path.exists(file_path):\n    pass?_split_?"}
{"nl":"read a file line by line into a list","code":"with open(fname) as f:\n    content = f.readlines()","relevant":"LOGIN_URL = reverse_lazy('my_app.views.sign_in')?_split_?with open('your file') as file:\n    for i in file:\n        pass?_split_?print(check_column_equals_index(3))?_split_?"}
{"nl":"read a file line by line into a list","code":"with open('filename') as f:\n    lines = f.readlines()","relevant":"LOGIN_URL = reverse_lazy('my_app.views.sign_in')?_split_?with open('your file') as file:\n    for i in file:\n        pass?_split_?print(check_column_equals_index(3))?_split_?"}
{"nl":"read a file line by line into a list","code":"lines = [line.rstrip('\\n') for line in open('filename')]","relevant":"LOGIN_URL = reverse_lazy('my_app.views.sign_in')?_split_?with open('your file') as file:\n    for i in file:\n        pass?_split_?print(check_column_equals_index(3))?_split_?"}
{"nl":"read a file line by line into a list","code":"with open('file.txt', 'r') as ins:\n    array = []\n    for line in ins:\n        array.append(line)","relevant":"LOGIN_URL = reverse_lazy('my_app.views.sign_in')?_split_?with open('your file') as file:\n    for i in file:\n        pass?_split_?print(check_column_equals_index(3))?_split_?"}
{"nl":"Convert DataFrame column type from string to datetime","code":"df['col'] = pd.to_datetime(df['col'])","relevant":"toSend = []\ntoSendLength = 0\nfor row in rows:\n    tentativeLength = len(json.dumps(row))\nif tentativeLength > bytesPerMB:\n    pass?_split_?print(G1.__hash__(), G1.edges())?_split_?print('Task Done')?_split_?"}
{"nl":"Can a list of all member-dict keys be created from a dict of dicts using a list comprehension?","code":"[k for d in list(foo.values()) for k in d]","relevant":"import lxml\nsoup = BeautifulSoup(urllib.request.urlopen('.\/test.html').read(), 'lxml')?_split_?def recursive_files(dir):\n    for path, _, fnames in os.walk(dir):\n        for fname in fnames:\n            yield os.path.join(path, fname)?_split_?for event in pygame.event.get():\n    if event.type == pygame.QUIT:\n        raise SystemExit?_split_?"}
{"nl":"Possible to get user input without inserting a new line?","code":"print('Hello, {0}, how do you do?'.format(input('Enter name here: ')))","relevant":"engine = sqlalchemy.create_engine('mysql:\/\/user:password@server')\nengine.execute('CREATE DATABASE dbname')\nengine.execute('USE dbname')?_split_?[(x * 0.1) for x in range(0, 10)]?_split_?def __init__(self, value, extra):\n    float.__init__(value)?_split_?"}
{"nl":"Create Pandas DataFrame from txt file with specific pattern","code":"df = pd.read_csv('filename.txt', sep=';', names=['Region Name'])","relevant":"import requests?_split_?class Test:\n    \"\"\"\n  Same for Test.__doc__\n  \"\"\"?_split_?B = numpy.lib.stride_tricks.as_strided(A, shape=newshape, strides=newstrides)?_split_?"}
{"nl":"Pandas: How can I use the apply() function for a single column?","code":"df['a'] = df['a'].apply(lambda x: x + 1)","relevant":"df['Items'] = df.apply(lambda row: row['Item1'] + row['Item2'], axis=1)?_split_?dict(CharCounter(text))?_split_?return self.__dict__[attr_name]?_split_?"}
{"nl":"How to check whether the system is FreeBSD in a python script?","code":"platform.system()","relevant":"return nested(*(res for res, enabled in resources if enabled))?_split_?TestUser = User('John', 'Doe')\nquery_stat = str(session.query(User))\nprint(query_stat)?_split_?days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']?_split_?"}
{"nl":"How to sort python list of strings of numbers","code":"a = sorted(a, key=lambda x: float(x))","relevant":"ax = fig.add_subplot(111)?_split_?encoded = hashlib.sha1('abcdef')?_split_?li = [(filename, i, number_of_chunks) for i in range(number_of_chunks)]?_split_?"}
{"nl":"Finding words after keyword in python","code":"re.search('name (.*)', s)","relevant":"additional_item_ship_cost = forms.CharField(required=False, max_length=10,\n    label='Additional Item Ship Cost')?_split_?{'C': 'BDFBDF1', 'E': 'EADEAC', 'D': 'DDDFEB', 'O': 'CEDEAE2'}?_split_?import datetime\nimport numpy\ntimes = numpy.array([datetime.timedelta(0, 1, 36000)])?_split_?"}
{"nl":"Removing _id element from Pymongo results","code":"db.collection.find({}, {'_id': False})","relevant":"a = int(input('> '))?_split_?print(count_function(L, 1, value=0))?_split_?def tearDown(self):\n    pass?_split_?"}
{"nl":"How do you extract a column from a multi-dimensional array?","code":"[row[1] for row in A]","relevant":"y = scipy.array([4, 7, 6, 5])\nf = pylab.figure()\nax = f.add_axes([0.1, 0.1, 0.8, 0.8])\nax.bar(x, y, align='center')\nax.set_xticks(x)\nax.set_xticklabels(['Aye', 'Bee', 'Cee', 'Dee'])\nf.show()?_split_?index = list(np.ix_(*[np.arange(i) for i in z2.shape]))\nindex[axis] = z2.argsort(axis)\nz2[index]\naxis = 0\nindex = np.ogrid[:z2.shape[0], :z2.shape[1], :z2.shape[2]]\nindex[axis] = z2.argsort(axis)\nz2[index]?_split_?def bar(x):\n\n    def foo():\n        return x?_split_?"}
{"nl":"How do you extract a column from a multi-dimensional array?","code":"[row[0] for row in a]","relevant":"y = scipy.array([4, 7, 6, 5])\nf = pylab.figure()\nax = f.add_axes([0.1, 0.1, 0.8, 0.8])\nax.bar(x, y, align='center')\nax.set_xticks(x)\nax.set_xticklabels(['Aye', 'Bee', 'Cee', 'Dee'])\nf.show()?_split_?index = list(np.ix_(*[np.arange(i) for i in z2.shape]))\nindex[axis] = z2.argsort(axis)\nz2[index]\naxis = 0\nindex = np.ogrid[:z2.shape[0], :z2.shape[1], :z2.shape[2]]\nindex[axis] = z2.argsort(axis)\nz2[index]?_split_?def bar(x):\n\n    def foo():\n        return x?_split_?"}
{"nl":"Python - how to sort a list of numerical values in ascending order","code":"sorted(['10', '3', '2'], key=int)","relevant":"s.send(query)\ndata = s.recv(1024)\nprint(repr(data))?_split_?keyset = set()?_split_?def constructor():\n    pass?_split_?"}
{"nl":"How can I tell if a file is a descendant of a given directory?","code":"os.path.commonprefix(['\/the\/dir\/', os.path.realpath(filename)]) == '\/the\/dir\/'","relevant":"help(isinstance)?_split_?app.MainLoop()?_split_?if x.startswith('&#x'):\n    pass?_split_?"}
{"nl":"Python: How to check a string for substrings from a list?","code":"any(substring in string for substring in substring_list)","relevant":"runner = ansible.runner.Runner(module_name='setup', module_args='', pattern\n    ='all', inventory=inventory)?_split_?n = 999\nU = struct.unpack(str(n) + 'H', B)?_split_?sys.executable\nsys.exec_prefix\nprint('\\n'.join(sys.path))?_split_?"}
{"nl":"Construct pandas DataFrame from list of tuples","code":"df = pandas.DataFrame(data, columns=['R_Number', 'C_Number', 'Avg', 'Std'])","relevant":"url = 'http:\/\/majorgeeks.com\/page.php?id=%s'?_split_?dirname(parse_object.path)?_split_?clipboard = gtk.clipboard_get()?_split_?"}
{"nl":"How to find and replace nth occurence of word in a sentence using python regular expression?","code":"re.sub('^((?:(?!cat).)*cat(?:(?!cat).)*)cat', '\\\\1Bull', s)","relevant":"z = [x] + (y if isinstance(y, list) else [y])?_split_?from functools import reduce\ndef factorial(n):\n    return reduce(lambda x, y: x * y, [1] + list(range(1, n + 1)))?_split_?EMAIL_HOST_USER = 'no-reply@yourdomain.com'?_split_?"}
{"nl":"How to find and replace nth occurence of word in a sentence using python regular expression?","code":"re.sub('^((.*?cat.*?){1})cat', '\\\\1Bull', s)","relevant":"z = [x] + (y if isinstance(y, list) else [y])?_split_?from functools import reduce\ndef factorial(n):\n    return reduce(lambda x, y: x * y, [1] + list(range(1, n + 1)))?_split_?EMAIL_HOST_USER = 'no-reply@yourdomain.com'?_split_?"}
{"nl":"Sort list of strings by integer suffix in python","code":"sorted(the_list, key=lambda k: int(k.split('_')[1]))","relevant":"def __getattr__(self, key):\n    if key.startswith('__') and key.endswith('__'):\n        pass?_split_?self.maximize.setIcon(QtGui.QIcon('img\/max2.png'))?_split_?def start_requests(self):\n    for url in self.start_urls:\n        yield self.make_requests_from_url(url)?_split_?"}
{"nl":"Sort list of strings by integer suffix in python","code":"sorted(the_list, key=lambda x: int(x.split('_')[1]))","relevant":"def __getattr__(self, key):\n    if key.startswith('__') and key.endswith('__'):\n        pass?_split_?self.maximize.setIcon(QtGui.QIcon('img\/max2.png'))?_split_?def start_requests(self):\n    for url in self.start_urls:\n        yield self.make_requests_from_url(url)?_split_?"}
{"nl":"How to group similar items in a list?","code":"[list(g) for _, g in itertools.groupby(test, lambda x: x.split('_')[0])]","relevant":"seq[pivot], seq[end - 1] = seq[end - 1], seq[pivot]?_split_?myName = eval(input())?_split_?pass?_split_?"}
{"nl":"How to group similar items in a list?","code":"[list(g) for _, g in itertools.groupby(test, lambda x: x.partition('_')[0])]","relevant":"seq[pivot], seq[end - 1] = seq[end - 1], seq[pivot]?_split_?myName = eval(input())?_split_?pass?_split_?"}
{"nl":"How do I use the HTMLUnit driver with Selenium from Python?","code":"driver.get('http:\/\/www.google.com')","relevant":"a, b = [f()[k] for k in ('a', 'b')]?_split_?df\narr = df.value.values.astype('S8')?_split_?def __iter__(self):\n    return iter([('x', self.x), ('y', self.y), ('z', self.z)])?_split_?"}
{"nl":"Using Python's datetime module, can I get the year that UTC-11 is currently in?","code":"(datetime.datetime.utcnow() - datetime.timedelta(hours=11)).year","relevant":"s.reset_index().groupby(s.index.names).first()?_split_?my_string = 'the cat and this dog are in the garden'\nsplitted = my_string.split()?_split_?raise StopIteration?_split_?"}
{"nl":"How to find the difference between 3 lists that may have duplicate numbers","code":"Counter([1, 2, 2, 2, 3]) - Counter([1, 2])","relevant":"print(currencies['GBP'])?_split_?with somecontext as whatever:\n    pass?_split_?x = 'Buffalo'\ndictOfStuff[x] = 4?_split_?"}
{"nl":"How to remove tags from a string in python using regular expressions? (NOT in HTML)","code":"re.sub('<[^>]*>', '', mystring)","relevant":"print(tailq.get_nowait())?_split_?col3 = ['This', 'is', 'text', '!!!']\nprepare = zip(col1, col2, col3)\nrecarr[:] = prepare?_split_?print(output)?_split_?"}
{"nl":"How can I unpack binary hex formatted data in Python?","code":"data.encode('hex')","relevant":"import urllib.request, urllib.error, urllib.parse?_split_?import theano.tensor as T?_split_?d = bitarray('0' * 30)?_split_?"}
{"nl":"How to do a less than or equal to filter in Django queryset?","code":"User.objects.filter(userprofile__level__gte=0)","relevant":"GET?_split_?Data = pandas.read_csv('CSVfile.csv')?_split_?from ast import literal_eval\nliteral_eval(i)?_split_?"}
{"nl":"How to use Beautiful Soup to find a tag with changing id?","code":"soup.findAll(id=re.compile('para$'))","relevant":"for p in paths:\n    parts = p.split('\/')?_split_?fig.colorbar(im)?_split_?self.assertItemsEqual(lst1, lst2)?_split_?"}
{"nl":"How to use Beautiful Soup to find a tag with changing id?","code":"soup.select('div[id^=\"value_xxx_c_1_f_8_a_\"]')","relevant":"for p in paths:\n    parts = p.split('\/')?_split_?fig.colorbar(im)?_split_?self.assertItemsEqual(lst1, lst2)?_split_?"}
{"nl":"How to delete an item in a list if it exists?","code":"cleaned_list = [x for x in some_list if x is not thing]","relevant":"warnings.simplefilter('ignore')\nwarnings.simplefilter('always', ResourceWarning)\ndel s\ngc.collect()\nself.assertFalse(w and str(w[-1]))\nif __name__ == '__main__':\n    unittest.main()?_split_?fileobj = tf.extractfile(entry)?_split_?actions.move_to_element(element)?_split_?"}
{"nl":"user input and commandline arguments","code":"var = input('Please enter something: ')","relevant":"browser = Browser('firefox')?_split_?return a1 * np.abs(x - a2) ** a3 * np.exp(-a4 * np.abs(x) ** a5)?_split_?return 'Shutting down...'?_split_?"}
{"nl":"Add to integers in a list","code":"foo.append(4)","relevant":"type = lambda s: str(s, 'utf8')?_split_?@register.inclusion_tag('pictures\/display_picture.html')\ndef display_picture(url):\n    pass?_split_?env.var_dir = '\/path\/to\/toggle\/file\/'?_split_?"}
{"nl":"Add to integers in a list","code":"foo.append([8, 7])","relevant":"type = lambda s: str(s, 'utf8')?_split_?@register.inclusion_tag('pictures\/display_picture.html')\ndef display_picture(url):\n    pass?_split_?env.var_dir = '\/path\/to\/toggle\/file\/'?_split_?"}
{"nl":"Add to integers in a list","code":"x.insert(2, 77)","relevant":"type = lambda s: str(s, 'utf8')?_split_?@register.inclusion_tag('pictures\/display_picture.html')\ndef display_picture(url):\n    pass?_split_?env.var_dir = '\/path\/to\/toggle\/file\/'?_split_?"}
{"nl":"Removing white space around a saved image in matplotlib","code":"plt.savefig('test.png', bbox_inches='tight')","relevant":"listbox.insert('end', 'A list item')\nfor item in ['one', 'two', 'three', 'four']:\n    listbox.insert('end', item)?_split_?pd.merge(frame_1, frame_2, how='left', left_on='county_ID', right_on='countyid'\n    )?_split_?52304543?_split_?"}
{"nl":"concatenate lists","code":"(listone + listtwo)","relevant":"len(m)\nm[0]?_split_?import re\ntext = 'some1 text2 bla3 regex4 python5'\nre.findall('\\\\d', text)[:3]?_split_?length = int(f.read(1))?_split_?"}
{"nl":"concatenate lists","code":"for item in itertools.chain(listone, listtwo):\n    pass","relevant":"len(m)\nm[0]?_split_?import re\ntext = 'some1 text2 bla3 regex4 python5'\nre.findall('\\\\d', text)[:3]?_split_?length = int(f.read(1))?_split_?"}
{"nl":"how do you filter pandas dataframes by multiple columns","code":"males = df[(df[Gender] == 'Male') & (df[Year] == 2014)]","relevant":"import json?_split_?end = start + entity['length']?_split_?dfs(G, 2, [])?_split_?"}
{"nl":"How to print backslash with Python?","code":"print('\\\\')","relevant":"q.append((t, v))?_split_?proc.communicate()\nos.close(fd)?_split_?from command_uptimerobot import uptimerobot?_split_?"}
{"nl":"How to replace values with None in Pandas data frame in Python?","code":"df.replace('-', np.nan)","relevant":"for j in range(i):\n    next(iterator)?_split_?offset += len(line)\nfile.seek(0)?_split_?plt.colorbar(coll, orientation='horizontal')?_split_?"}
{"nl":"Delete column from pandas DataFrame","code":"df = df.drop('column_name', 1)","relevant":"return platform.processor()?_split_?Mt = np.random.rand(2, 2)\nIt = np.random.rand(2, 2)\nMt\nIt\nmask = Mt > It\nmask\nMt[mask] += 1\nMt[~mask] -= 1\nMt?_split_?'10S', '3H'?_split_?"}
{"nl":"Delete column from pandas DataFrame","code":"df.drop(df.columns[[0, 1, 3]], axis=1)","relevant":"return platform.processor()?_split_?Mt = np.random.rand(2, 2)\nIt = np.random.rand(2, 2)\nMt\nIt\nmask = Mt > It\nmask\nMt[mask] += 1\nMt[~mask] -= 1\nMt?_split_?'10S', '3H'?_split_?"}
{"nl":"Delete column from pandas DataFrame","code":"df.drop('column_name', axis=1, inplace=True)","relevant":"return platform.processor()?_split_?Mt = np.random.rand(2, 2)\nIt = np.random.rand(2, 2)\nMt\nIt\nmask = Mt > It\nmask\nMt[mask] += 1\nMt[~mask] -= 1\nMt?_split_?'10S', '3H'?_split_?"}
{"nl":"Disable abbreviation in argparse","code":"parser = argparse.ArgumentParser(allow_abbrev=False)","relevant":"for key, reg in list(myregex.items()):\n    to_del = []?_split_?self.map = {}?_split_?buf.append(data)\nif len(buffer) >= 10:\n    out.write(buf[0])\ndel buf[0]?_split_?"}
{"nl":"Extract dictionary value from column in data frame","code":"feature3 = [d.get('Feature3') for d in df.dic]","relevant":"b = 'B'\nc = a + b?_split_?taskModule.run()?_split_?fnf = fn[:num_plot].ravel()?_split_?"}
{"nl":"How to access pandas groupby dataframe by key","code":"df.loc[gb.groups['foo'], ('A', 'B')]","relevant":"def method(**kwargs):\n    pass?_split_?def make_str(length):\n    return ''.join(choice(ascii_letters) for i in range(length))?_split_?self.value = value?_split_?"}
{"nl":"String formatting in Python","code":"print('[%s, %s, %s]' % (1, 2, 3))","relevant":"out = [[]]?_split_?fig = plt.figure(frameon=False)\nfig.set_size_inches(5, 8)\nax = plt.Axes(fig, [0.0, 0.0, 1.0, 1.0])\nax.set_axis_off()\nfig.add_axes(ax)\nx = np.linspace(-4, 4, 20)\ny = np.linspace(-4, 4, 20)\nX, Y = np.meshgrid(x, y)\ndeg = np.arctan(Y ** 3 - 3 * Y - X)\nplt.quiver(X, Y, cos(deg), sin(deg), pivot='tail', units='dots', color='red')\nplt.savefig('\/tmp\/test.png', dpi=200)?_split_?if regex_search:\n    p = re.compile(__searchtext__)\nfor dir, subdirs, subfiles in os.walk('c:\/docs\/2009'):\n    for name in fnmatch.filter(subfiles, '*.txt'):\n        fn = os.path.join(dir, name)\nwith open(fn, 'r') as f:\n    if regex_search:\n        pass?_split_?"}
{"nl":"String formatting in Python","code":"print('[{0}, {1}, {2}]'.format(1, 2, 3))","relevant":"out = [[]]?_split_?fig = plt.figure(frameon=False)\nfig.set_size_inches(5, 8)\nax = plt.Axes(fig, [0.0, 0.0, 1.0, 1.0])\nax.set_axis_off()\nfig.add_axes(ax)\nx = np.linspace(-4, 4, 20)\ny = np.linspace(-4, 4, 20)\nX, Y = np.meshgrid(x, y)\ndeg = np.arctan(Y ** 3 - 3 * Y - X)\nplt.quiver(X, Y, cos(deg), sin(deg), pivot='tail', units='dots', color='red')\nplt.savefig('\/tmp\/test.png', dpi=200)?_split_?if regex_search:\n    p = re.compile(__searchtext__)\nfor dir, subdirs, subfiles in os.walk('c:\/docs\/2009'):\n    for name in fnmatch.filter(subfiles, '*.txt'):\n        fn = os.path.join(dir, name)\nwith open(fn, 'r') as f:\n    if regex_search:\n        pass?_split_?"}
{"nl":"Accessing Python dict values with the key start characters","code":"[v for k, v in list(my_dict.items()) if 'Date' in k]","relevant":"bpython.embed(locals_=locals())?_split_?A = [1, 2, 1, 2, 1, 2, 3]?_split_?filename = 'data.xml'\ntotal_size = os.path.getsize(filename)\nwith open(filename, 'r') as f:\n    context = ET.iterparse(f, events=('end',), tag='Record')?_split_?"}
{"nl":"Python date string formatting","code":"\"\"\"{0.month}\/{0.day}\/{0.year}\"\"\".format(my_date)","relevant":"x = y\ny = w\ndel w?_split_?ff.save_screenshot('\/absolute\/path\/to\/webpage.png')?_split_?s.setServiceParent(ret)?_split_?"}
{"nl":"Dropping a single (sub-) column from a MultiIndex","code":"df.drop(('col1', 'a'), axis=1)","relevant":"a = int(round(time.time() * 1000))\nprint(primes_below(10 * 1000))\nb = int(round(time.time() * 1000))\nprint(str(b - a) + ' mils')?_split_?import numpy as np\na = np.ones((3, 4, 5))?_split_?cursor = query.cursor()?_split_?"}
{"nl":"Dropping a single (sub-) column from a MultiIndex","code":"df.drop('a', level=1, axis=1)","relevant":"a = int(round(time.time() * 1000))\nprint(primes_below(10 * 1000))\nb = int(round(time.time() * 1000))\nprint(str(b - a) + ' mils')?_split_?import numpy as np\na = np.ones((3, 4, 5))?_split_?cursor = query.cursor()?_split_?"}
{"nl":"Build Dictionary in Python Loop - List and Dictionary Comprehensions","code":"{_key: _value(_key) for _key in _container}","relevant":"fd.write('echo $PATH\\n')?_split_?with open('the_file', 'r') as source:\n    data = [(random.random(), line) for line in source]\ndata.sort()?_split_?if __name__ == '__main__':\n    app = QtGui.QApplication(sys.argv)\nw = Window()\nw.show()\nsys.exit(app.exec_())?_split_?"}
{"nl":"How to click on the text button using selenium python","code":"browser.find_element_by_class_name('section-select-all').click()","relevant":"from scipy.spatial import ConvexHull?_split_?li = soup.find('li')\nmytext = li.text.replace(li.find('span').text, '')?_split_?COMPRESS_CSS_HASHING_METHOD = 'hash'?_split_?"}
{"nl":"Python - Combine two dictionaries, concatenate string values?","code":"dict((k, d.get(k, '') + d1.get(k, '')) for k in keys)","relevant":"theAverage = (df1.A + df1.B + df2.C + df3.D) \/ 4.0\ntheProduct = df1.B * df2.C * df3.D\ntheResult = pd.concat([theSum, theAverage, theProduct])\ntheResult.columns = ['Sum', 'Average', 'Product']?_split_?conv = np.round(alt \/ 500.0).astype(int)?_split_?import requests\nimport browser_cookie\ncj = browser_cookie.firefox()?_split_?"}
{"nl":"How to generate unique equal hash for equal dictionaries?","code":"hash(pformat(a)) == hash(pformat(b))","relevant":"driver.get('http:\/\/www.google.com\/recaptcha\/demo\/recaptcha')\nimg = driver.find_element_by_xpath('\/\/div[@id=\"recaptcha_image\"]\/img')\nsrc = img.get_attribute('src')?_split_?import hashlib\nemail = 'user@host.com'\nsalt = 'SomeLongStringThatWillBeAppendedToEachEmail'\nkey = hashlib.sha1('%s$%s' % (email, salt)).hexdigest()?_split_?windows = []?_split_?"}
{"nl":"How to convert nested list of lists into a list of tuples in python 3.3?","code":"list(map(tuple, [['tom', 'cat'], ['jerry', 'mouse'], ['spark', 'dog']]))","relevant":"import os?_split_?for item in file_split(open('filename.txt')):\n    pass?_split_?df['cat'] = df.prob.map(prob_dict)?_split_?"}
{"nl":"Summing across rows of Pandas Dataframe","code":"df.groupby(['stock', 'same1', 'same2'], as_index=False)['positions'].sum()","relevant":"@register_method('Custom Name')\ndef custom_name():\n    pass\n\n@register_method\ndef default_name():\n    pass\nassert custom_name.gw_method == 'Custom Name'\nassert default_name.gw_method == 'default_name'\nprint('Test passes :)')?_split_?CS = plt.contour(X, Y, Z)\nmanual_locations = [(-1, -1.4), (-0.62, -0.7), (-2, 0.5), (1.7, 1.2), (2.0,\n    1.4), (2.4, 1.7)]?_split_?from selenium import webdriver\ndriver = webdriver.Chrome()?_split_?"}
{"nl":"Summing across rows of Pandas Dataframe","code":"df.groupby(['stock', 'same1', 'same2'])['positions'].sum().reset_index()","relevant":"@register_method('Custom Name')\ndef custom_name():\n    pass\n\n@register_method\ndef default_name():\n    pass\nassert custom_name.gw_method == 'Custom Name'\nassert default_name.gw_method == 'default_name'\nprint('Test passes :)')?_split_?CS = plt.contour(X, Y, Z)\nmanual_locations = [(-1, -1.4), (-0.62, -0.7), (-2, 0.5), (1.7, 1.2), (2.0,\n    1.4), (2.4, 1.7)]?_split_?from selenium import webdriver\ndriver = webdriver.Chrome()?_split_?"}
{"nl":"change a string into uppercase","code":"s.upper()","relevant":"def __set__(self, instance, value):\n    self.value = value?_split_?def to_binary(value):\n    result = ''\nif value < 0:\n    result = '-'\nvalue = ~value + 1\nresult += bin(value)\nreturn result?_split_?zip(shapes, colors)\n[('a', '1'), ('b', '2'), ('c', '3'), ('d', '4')]?_split_?"}
{"nl":"Splitting a semicolon-separated string to a dictionary, in Python","code":"dict(item.split('=') for item in s.split(';'))","relevant":"f = open(filename)\nsubprocess.call(cmd, stdin=f)?_split_?r = start?_split_?return data[yi, xi]?_split_?"}
{"nl":"how to set cookie in python mechanize","code":"br.addheaders = [('Cookie', 'cookiename=cookie value')]","relevant":"fill_between(x, 0, l[0], color=colors[0], alpha=alpha)\nfill_between(x, height - l[1], height, color=colors[1], alpha=alpha)?_split_?self.key = key.decode('hex')?_split_?df1 = pd.DataFrame(np.random.randn(8, 4), index=dates, columns=['A', 'B',\n    'C', 'D'])\ndf2 = df1.copy()?_split_?"}
{"nl":"How to remove square bracket from pandas dataframe","code":"df['value'] = df['value'].str[0]","relevant":"params = 1234, 5678\nsqlStr = \"\"\"\nSELECT * FROM customers \nWHERE id BETWEEN %d AND %d\n\"\"\" % params\nprint(sqlStr)?_split_?logger.addHandler(handler)?_split_?while objects:\n    obj = next(iter(objects.values()))?_split_?"}
{"nl":"How to remove square bracket from pandas dataframe","code":"df['value'] = df['value'].str.get(0)","relevant":"params = 1234, 5678\nsqlStr = \"\"\"\nSELECT * FROM customers \nWHERE id BETWEEN %d AND %d\n\"\"\" % params\nprint(sqlStr)?_split_?logger.addHandler(handler)?_split_?while objects:\n    obj = next(iter(objects.values()))?_split_?"}
{"nl":"How to remove square bracket from pandas dataframe","code":"df['value'] = df['value'].str.strip('[]')","relevant":"params = 1234, 5678\nsqlStr = \"\"\"\nSELECT * FROM customers \nWHERE id BETWEEN %d AND %d\n\"\"\" % params\nprint(sqlStr)?_split_?logger.addHandler(handler)?_split_?while objects:\n    obj = next(iter(objects.values()))?_split_?"}
{"nl":"Python getting a string (key + value) from Python Dictionary","code":"\"\"\", \"\"\".join(['{}_{}'.format(k, v) for k, v in d.items()])","relevant":"cj = cookielib.CookieJar()\nopener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj))\nopener.addheaders = [('User-Agent',\n    'Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.11) Gecko\/20101012 Firefox\/3.6.11'\n    )]\nstylesheets = ['https:\/\/www.idcourts.us\/repository\/css\/id_style.css',\n    'https:\/\/www.idcourts.us\/repository\/css\/id_print.css']\nhome = opener.open('https:\/\/www.idcourts.us\/repository\/start.do')\nprint(cj)\nsessid = cj._cookies['www.idcourts.us']['\/repository']['JSESSIONID'].value\nopener.addheaders += [('Referer',\n    'https:\/\/www.idcourts.us\/repository\/start.do')]\nfor st in stylesheets:\n    pass?_split_?print(row.name, np.mean(df2))?_split_?get_item = operator.itemgetter(some_index)?_split_?"}
{"nl":"Easier way to add multiple list items?","code":"sum(sum(x) for x in lists)","relevant":"pool = mp.Pool()?_split_?len('pd.crosstab(df.Event, df.Status)')\n32?_split_?fwrite.close()?_split_?"}
{"nl":"testing whether a Numpy array contains a given row","code":"any(np.equal(a, [1, 2]).all(1))","relevant":"if quality == 1:\n    args_str = (\n        \"\"\"--encoding utf-8 --disable-smart-shrinking --no-pdf-compression --page-size A4 --zoom 1 -q -T 15.24mm -L 25.4mm -B 20.32mm  -R 33.02mm\"\"\"\n        )\nelif quality == 2:\n    args_str = (\n        \"\"\"--encoding utf-8 --disable-smart-shrinking --page-size A4 --zoom 1 -q -T 15.24mm -L 25.4mm -B 20.32mm  -R 33.02mm\"\"\"\n        )\nelse:\n    args_str = (\n        \"\"\"--encoding utf-8 --page-size A4 --zoom 1 -q -T 15.24mm -L 25.4mm -B 20.32mm  -R 33.02mm\"\"\"\n        )\nos.system(pathtowk.format(args_str, in_html_file, out_pdf_file))?_split_?return begin() + size()?_split_?print('%.16f' % 1.6)?_split_?"}
{"nl":"How do I check if all elements in a list are the same?","code":"len(set(mylist)) == 1","relevant":"for c in ('x', 'y', 'z'):\n    L.remove(c)?_split_?s.setsockopt(socket.SOL_IP, IP_MTU_DISCOVER, IP_PMTUDISC_DONT)?_split_?df = df.groupby(['actual', 'predicted']).size().unstack(fill_value=0)?_split_?"}
{"nl":"How to split a string at line breaks in python?","code":"[map(int, x.split('\\t')) for x in s.rstrip().split('\\r\\n')]","relevant":"def treeview_changed(self, widget, event, data=None):\n    adj = widget.get_vadjustment()?_split_?import requests\nnewUrl = 'http:\/\/www.bseindia.com\/Msource\/IndexMovers.aspx?ln=en'\nresponse = requests.get(newUrl).text\ncommaItems = response.split(',')\nstockInformation = []\nfor i, item in enumerate(commaItems[:-1]):\n    if i % 6 == 0:\n        newList = [item, commaItems[i + 1]]\nstockInformation.append(newList)\nfor item in stockInformation:\n    pass?_split_?my_data = [list(range(5)) for i in range(5)]\nmy_data\nimport json\njson.dumps(my_data)?_split_?"}
{"nl":"Create a hierarchy from a dictionary of lists","code":"t = sorted(list(a.items()), key=lambda x: x[1])","relevant":"browser.get('http:\/\/www.yahoo.com')\nassert 'Yahoo!' in browser.title?_split_?soup = BeautifulSoup(html)?_split_?class Food:\n    pass?_split_?"}
{"nl":"Search for string in txt file","code":"if ('blabla' in open('example.txt').read()):\n    pass","relevant":"db.flush()?_split_?LastName = db.Column(db.String(40))\nEmailAddress = db.Column(db.String(255))\nPassword = db.Column(db.String(40))?_split_?df_type_lookup = df_type.applymap(lambda x: other_table.loc[x]).values\ndf['A'] = np.sum((df_status == 0).values * df_type_lookup, 1)\ndf['B'] = np.sum((df_status == 1).values * df_type_lookup, 1)?_split_?"}
{"nl":"Search for string in txt file","code":"f = open('example.txt')\ns = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ)\nif (s.find('blabla') != (-1)):\n    pass","relevant":"db.flush()?_split_?LastName = db.Column(db.String(40))\nEmailAddress = db.Column(db.String(255))\nPassword = db.Column(db.String(40))?_split_?df_type_lookup = df_type.applymap(lambda x: other_table.loc[x]).values\ndf['A'] = np.sum((df_status == 0).values * df_type_lookup, 1)\ndf['B'] = np.sum((df_status == 1).values * df_type_lookup, 1)?_split_?"}
{"nl":"Search for string in txt file","code":"datafile = file('example.txt')\nfound = False\nfor line in datafile:\n    if (blabla in line):\n        return True\nreturn False","relevant":"db.flush()?_split_?LastName = db.Column(db.String(40))\nEmailAddress = db.Column(db.String(255))\nPassword = db.Column(db.String(40))?_split_?df_type_lookup = df_type.applymap(lambda x: other_table.loc[x]).values\ndf['A'] = np.sum((df_status == 0).values * df_type_lookup, 1)\ndf['B'] = np.sum((df_status == 1).values * df_type_lookup, 1)?_split_?"}
{"nl":"Replacing the empty strings in a string","code":"string2.replace('', string1)[len(string1):-len(string1)]","relevant":"A = np.random.rand(2, 3)?_split_?data = request.executeQuery(requestUrl=requestUrl)\nwebTitle = data['d']['Title']?_split_?cons = []\nfor i in ['a', 'b', 'c', 'd']:\n    cons.append(lambda i=i: i)\nprint(', '.join([fn() for fn in cons]))?_split_?"}
{"nl":"getting every possible combination in a list","code":"list(itertools.combinations([1, 2, 3, 4, 5, 6], 2))","relevant":"resources = builder.paginate(int(request.args['page'])).items?_split_?d['database'] = 'master'?_split_?import csv\nimport urllib.request, urllib.parse, urllib.error\nurl = (\n    \"\"\"http:\/\/ichart.finance.yahoo.com\/table.csv?s=IBM&a=00&b=1&c=2011&d=11&e=31&f=2011&g=d&ignore=.csv\"\"\"\n    )\nreader = csv.reader(urllib.request.urlopen(url), delimiter=',')\ncleaned = sorted([([r[0]] + map(float, r[1:])) for r in list(reader)[1:]])\nfor i, row in enumerate(cleaned):\n    pass?_split_?"}
{"nl":"Python 3: How do I get a string literal representation of a byte string?","code":"\"\"\"x = {}\"\"\".format(x.decode('utf8')).encode('utf8')","relevant":"result = Result(5, 6)?_split_?import os\nfor dirpath, dirs, files in os.walk('.'):\n    for file in files:\n        path = os.path.join(dirpath, file)?_split_?h[x] = 1?_split_?"}
{"nl":"Checking whether a variable is an integer","code":"isinstance(x, int)","relevant":"data = robjects.r(\"\"\"\nset.seed(1)\nx <- runif(5)\n\"\"\")?_split_?if request.GET.get('foobar'):\n    foobar = True?_split_?def to_words(text):\n    pass?_split_?"}
{"nl":"Checking whether a variable is an integer","code":"(type(x) == int)","relevant":"data = robjects.r(\"\"\"\nset.seed(1)\nx <- runif(5)\n\"\"\")?_split_?if request.GET.get('foobar'):\n    foobar = True?_split_?def to_words(text):\n    pass?_split_?"}
{"nl":"Play a Sound with Python","code":"winsound.PlaySound('sound.wav', winsound.SND_FILENAME)","relevant":"xx, yy = np.mgrid[:5, :5]?_split_?serializer.save()?_split_?for i in range(len(b1)):\n    b[i] = b1[i] ^ b2[i]\nb?_split_?"}
{"nl":"How to get the n next values of a generator in a list (python)","code":"[next(it) for _ in range(n)]","relevant":"a[a > 0] = 1?_split_?def __init__(self, path):\n    self._parser = configparser.ConfigParser()?_split_?import re?_split_?"}
{"nl":"How to get the n next values of a generator in a list (python)","code":"list(itertools.islice(it, 0, n, 1))","relevant":"a[a > 0] = 1?_split_?def __init__(self, path):\n    self._parser = configparser.ConfigParser()?_split_?import re?_split_?"}
{"nl":"How can I compare two lists in python and return matches","code":"set(a).intersection(b)","relevant":"prices = ['AAPL', 'ADBE', 'AMD', 'AMZN', 'CRM', 'EXPE', 'FB']?_split_?clf2 = joblib.load(filename)?_split_?dls = 'http:\/\/www.muellerindustries.com\/uploads\/pdf\/UW SPD0114.xls'?_split_?"}
{"nl":"How can I compare two lists in python and return matches","code":"[i for i, j in zip(a, b) if i == j]","relevant":"prices = ['AAPL', 'ADBE', 'AMD', 'AMZN', 'CRM', 'EXPE', 'FB']?_split_?clf2 = joblib.load(filename)?_split_?dls = 'http:\/\/www.muellerindustries.com\/uploads\/pdf\/UW SPD0114.xls'?_split_?"}
{"nl":"How to print a list with integers without the brackets, commas and no quotes?","code":"print(''.join(map(str, data)))","relevant":"def double_list(x):\n    return [(item * 2) for item in x]?_split_?from tkinter import *?_split_?print(match_obj.group(1))?_split_?"}
{"nl":"python regex: match a string with only one instance of a character","code":"re.match('\\\\$[0-9]+[^\\\\$]*$', '$1 off delicious $5 ham.')","relevant":"import json\nx = json.loads(\n    \"\"\"[\n    {\n       \"globalControlId\": 72,\n       \"value\": 0,\n       \"controlId\": 2\n   },\n   {\n       \"globalControlId\": 77,\n       \"value\": 3,\n       \"controlId\": 7\n   }\n]\"\"\"\n    )\ny = json.loads(\n    '[{\"value\": 0, \"globalControlId\": 72,\"controlId\": 2}, {\"globalControlId\": 77, \"value\": 3, \"controlId\": 7 }]'\n    )?_split_?iT += 1?_split_?{'ARS': ('ARS', 'Arsenal'), 'MNU': ('ManUtd', 'Manchester United', 'MNU')}?_split_?"}
{"nl":"How to import a module in Python with importlib.import_module","code":"importlib.import_module('.c', 'a.b')","relevant":"nums[i] = int(Math.random() * (Math.random() * 2001 - 1000))?_split_?x = 'lipsum'\nx.replace(x[:3], '')?_split_?def save(self, *args, **kwargs):\n    pass?_split_?"}
{"nl":"How to import a module in Python with importlib.import_module","code":"importlib.import_module('a.b.c')","relevant":"nums[i] = int(Math.random() * (Math.random() * 2001 - 1000))?_split_?x = 'lipsum'\nx.replace(x[:3], '')?_split_?def save(self, *args, **kwargs):\n    pass?_split_?"}
{"nl":"how to convert 2d list to 2d numpy array?","code":"a = np.array(a)","relevant":"df['rpkm'] = calculate_RPKM(df['count'], N, df['gene_length'])?_split_?self.__argparser.print_help(self)\n\ndef write(self, message):\n    self.help += message?_split_?directory = 'C:\/'?_split_?"}
{"nl":"Python regular expression for Beautiful Soup","code":"soup.find_all('div', class_=re.compile('comment-'))","relevant":"def read(url):\n    stream = urllib.request.urlopen(url)\nreturn stream.read()\n\ndef handler(signum, frame):\n    raise IOError('The page is taking too long to read')\nsignal.signal(signal.SIGALRM, handler)\nsignal.alarm(5)\ntry:\n    output = read('http:\/\/www.google.de\/images\/nav_logo4.png')\nexcept IOError:\n    pass\nsignal.alarm(0)?_split_?exec('y=3')\ny?_split_?def foo(s):\n    pass?_split_?"}
{"nl":"A sequence of empty lists of length n in Python?","code":"[[] for _ in range(n)]","relevant":"p, = b.find('0b000000')?_split_?wb = Workbook()\nws = wb.get_active_sheet()\nws.cell(row=3, column=2).border = thin_border\nwb.save('border_test.xlsx')?_split_?permission_classes = UserPermission,?_split_?"}
{"nl":"create dictionary from list of variables","code":"dict((k, globals()[k]) for k in ('foo', 'bar'))","relevant":"ax = result.ax_heatmap\nax.plot([5, 30], [5, 5], 'k-', lw=10)\nplt.show()?_split_?map.readshapefile('st99_d00', name='states', drawbounds=True)?_split_?import html.parser?_split_?"}
{"nl":"How to get two random records with Django","code":"MyModel.objects.order_by('?')[:2]","relevant":"OR?_split_?df.T.boxplot(vert=False)\nplt.subplots_adjust(left=0.25)\nplt.show()?_split_?import serial\nserialPort = serial.Serial(port=1, baudrate=115200, timeout=0, rtscts=0,\n    xonxoff=0)\n\ndef sendatcmd(cmd):\n    serialPort.write('at' + cmd + '\\r')\nprint('Loading profile...', end=' ')\nsendatcmd('+npsda=0,2')?_split_?"}
{"nl":"How to use a dot in Python format strings?","code":"\"\"\"Hello {user[name]}\"\"\".format(**{'user': {'name': 'Markus'}})","relevant":"'abc' + str(9)?_split_?return sum(two_three), one\na.sort(key=key, reverse=True)?_split_?while len(cords_set) < 10:\n    pass?_split_?"}
{"nl":"Python: using a dict to speed sorting of a list of tuples","code":"list_dict = {t[0]: t for t in tuple_list}","relevant":"i2 = Interval(0, oo)\ni3 = Interval(-5, -1)?_split_?from matplotlib import ticker?_split_?parser.add_argument('-u', '--up-sound', metavar='FILENAME', help=\n    \"\"\"The sound to play when the network comes up. Default:\"%(default)s\\\"\n\"\"\",\n    default='\/path\/to\/some\/sound\/file.wav')\nparser.add_argument('-d', '--down-sound', metavar='FILENAME', help=\n    'The sound to play when the network goes down. Default:\"%(default)s\"',\n    default='\/path\/to\/some\/other\/sound\/file.wav')\nparser.add_argument('-s', '--silent', action='store_true', help=\n    'If specified, network_monitor.py will not play any sounds.')\nparser.add_argument('positional', nargs='*', help='positional argument')\nparser.print_help()?_split_?"}
{"nl":"Generate random integers between 0 and 9","code":"randint(0, 9)","relevant":"def foo(bar, baz=1, qux=2):\n    pass?_split_?def connectionMade(self):\n    pass?_split_?oMasterScriptProviderFactory = createUnoService(\n    'com.sun.star.script.provider.MasterScriptProviderFactory')?_split_?"}
{"nl":"Generate random integers between 0 and 9","code":"random.randint(a, b)","relevant":"def foo(bar, baz=1, qux=2):\n    pass?_split_?def connectionMade(self):\n    pass?_split_?oMasterScriptProviderFactory = createUnoService(\n    'com.sun.star.script.provider.MasterScriptProviderFactory')?_split_?"}
{"nl":"Generate random integers between 0 and 9","code":"print((random.randint(0, 9)))","relevant":"def foo(bar, baz=1, qux=2):\n    pass?_split_?def connectionMade(self):\n    pass?_split_?oMasterScriptProviderFactory = createUnoService(\n    'com.sun.star.script.provider.MasterScriptProviderFactory')?_split_?"}
{"nl":"Reverse a string in Python two characters at a time (Network byte order)","code":"\"\"\"\"\"\".join(reversed([a[i:i + 2] for i in range(0, len(a), 2)]))","relevant":"pos = nx.circular_layout(G)?_split_?ndigits = int(log10(1.62) * num + 100)?_split_?def loop():\n    while not stopped.wait(interval):\n        func(*args)\nThread(target=loop).start()?_split_?"}
{"nl":"How to transform a time series pandas dataframe using the index attributes?","code":"pd.pivot_table(df, index=df.index.date, columns=df.index.time, values='Close')","relevant":"ax.plot(x, y)\nax.tick_params(axis='x', labelsize=30)\nfig.suptitle('Matplotlib xticklabels Example')\npyplot.show()\nif __name__ == '__main__':\n    setLabelExample()?_split_?\"\"\"\"\"\".join(chr(x).encode('utf-8') for x in struct.unpack('<' + 'H' * (\n    len(e) \/\/ 2), e))?_split_?parser = etree.XMLParser(remove_comments=True)\ntree = objectify.parse(xmlPath, parser=parser)?_split_?"}
{"nl":"How to check if all elements of a list matches a condition?","code":"any(item[2] == 0 for item in items)","relevant":"1007.95, 1022.75, 1021.52, 1026.11, 1027.04, 1030.58, 1030.42, 1036.24?_split_?bwimshow = functools.partial(plt.imshow, vmin=0, vmax=255, cmap=plt.\n    get_cmap('gray'))\ndots = np.random.randn(10, 10) * 255?_split_?pass?_split_?"}
{"nl":"How to check if all elements of a list matches a condition?","code":"[x for x in items if x[2] == 0]","relevant":"1007.95, 1022.75, 1021.52, 1026.11, 1027.04, 1030.58, 1030.42, 1036.24?_split_?bwimshow = functools.partial(plt.imshow, vmin=0, vmax=255, cmap=plt.\n    get_cmap('gray'))\ndots = np.random.randn(10, 10) * 255?_split_?pass?_split_?"}
{"nl":"Python: sorting dictionary of dictionaries","code":"sorted(list(dic.items()), key=lambda x: x[1]['Fisher'], reverse=True)","relevant":"X.append(np.mean(ceps[int(num_ceps \/ 10):int(num_ceps * 9 \/ 10)], axis=0))\nVx = np.array(X)?_split_?labels = [item.get_text() for item in ax.get_xticklabels()]?_split_?np.setbufsize(16384)?_split_?"}
{"nl":"Logarithmic y-axis bins in python","code":"plt.yscale('log', nonposy='clip')","relevant":"sys.exit(0)?_split_?return repr(s)?_split_?fs = fluidsynth.Synth()?_split_?"}
{"nl":"extract digits in a simple way from a python string","code":"map(int, re.findall('\\\\d+', s))","relevant":"\"\"\"\"\"\".join(res)?_split_?kwargs['count'] = 100000?_split_?m['X-Priority'] = '2'?_split_?"}
{"nl":"How can I list the contents of a directory in Python?","code":"os.listdir('\/home\/username\/www\/')","relevant":"for letter, words in groupby(sorted(somelist), key=itemgetter(0)):\n    print(letter)\nfor word in words:\n    pass?_split_?def get_datetime(string):\n    pass?_split_?totient_n = (p - 1) * (q - 1)?_split_?"}
{"nl":"How can I list the contents of a directory in Python?","code":"os.listdir('path')","relevant":"for letter, words in groupby(sorted(somelist), key=itemgetter(0)):\n    print(letter)\nfor word in words:\n    pass?_split_?def get_datetime(string):\n    pass?_split_?totient_n = (p - 1) * (q - 1)?_split_?"}
{"nl":"How to merge two DataFrames into single matching the column values","code":"pd.concat([distancesDF, datesDF.dates], axis=1)","relevant":"parser = argparse.ArgumentParser()?_split_?print(link.get('href'))?_split_?map.readshapefile('\/home\/person\/zipfolder\/rds\/tl_2010_48_prisecroads',\n    'Streets', drawbounds=False)\nfor shape in self.map.Streets:\n    xx, yy = zip(*shape)?_split_?"}
{"nl":"Python How to get every first element in 2 Dimensional List","code":"[x[0] for x in a]","relevant":"def test_add_dependency(self):\n    \"\"\"Tasks can be added with dependencies\"\"\"\nfor p in permutations('AB'):\n    self.done = []\n\ndef test(id):\n    self.done.append('Test ' + id)\ns = Schedule(threads=1)\ntasks = {id: Task('Test ' + id, partial(test, id)) for id in 'AB'}\ns.add_task(tasks['A'])\ns.add_task(tasks['B'])\ns.add_dependency(tasks[p[0]], tasks[p[1]])\ns.run()\nself.assertEqual(self.done, ['Test ' + p[1], 'Test ' + p[0]])?_split_?d1 = date(2001, 5, 1)\nd2 = date(2012, 1, 1)\nrd = rdelta.relativedelta(d2, d1)\n\"\"\"{0.years} years and {0.months} months\"\"\".format(rd)?_split_?df = pd.DataFrame()\ndf.append(dict(A=3, test=4, another=5), ignore_index=True)?_split_?"}
{"nl":"Python How to get every first element in 2 Dimensional List","code":"[i[0] for i in a]","relevant":"def test_add_dependency(self):\n    \"\"\"Tasks can be added with dependencies\"\"\"\nfor p in permutations('AB'):\n    self.done = []\n\ndef test(id):\n    self.done.append('Test ' + id)\ns = Schedule(threads=1)\ntasks = {id: Task('Test ' + id, partial(test, id)) for id in 'AB'}\ns.add_task(tasks['A'])\ns.add_task(tasks['B'])\ns.add_dependency(tasks[p[0]], tasks[p[1]])\ns.run()\nself.assertEqual(self.done, ['Test ' + p[1], 'Test ' + p[0]])?_split_?d1 = date(2001, 5, 1)\nd2 = date(2012, 1, 1)\nrd = rdelta.relativedelta(d2, d1)\n\"\"\"{0.years} years and {0.months} months\"\"\".format(rd)?_split_?df = pd.DataFrame()\ndf.append(dict(A=3, test=4, another=5), ignore_index=True)?_split_?"}
{"nl":"Regular expression to remove line breaks","code":"re.sub('(?<=[a-z])\\\\r?\\\\n', ' ', textblock)","relevant":"import scipy.sparse as sp\nx, y = sp.coo_matrix(df.isnull()).nonzero()?_split_?for i, doc in enumerate(inverted_index):\n    if doc != last:\n        yield i, doc\nlast = doc?_split_?plt.plot([0.5, 2, 3.5], 'b-', label='Sample Label Blue')?_split_?"}
{"nl":"Reading utf-8 characters from a gzip file in python","code":"gzip.open('file.gz', 'rt', encoding='utf-8')","relevant":"sys.stdout.flush()?_split_?index, value = max(data, key=lambda item: item[1])?_split_?cur.execute('select arr from test')\ndata = cur.fetchone()[0]?_split_?"}
{"nl":"Can Python test the membership of multiple values in a list?","code":"set(['a', 'b']).issubset(['b', 'a', 'foo', 'bar'])","relevant":"def __init__(self, name):\n    self.name = name?_split_?class FileSystemModel(QtGui.QFileSystemModel):\n\n    def __init__(self, *args, **kwargs):\n        super(FileSystemModel, self).__init__(*args, **kwargs)?_split_?bus = dbus.SystemBus()\nud_manager_obj = bus.get_object('org.freedesktop.UDisks',\n    '\/org\/freedesktop\/UDisks')\nud_manager = dbus.Interface(ud_manager_obj, 'org.freedesktop.UDisks')\nfor dev in ud_manager.EnumerateDevices():\n    device_obj = bus.get_object('org.freedesktop.UDisks', dev)\ndevice_props = dbus.Interface(device_obj, dbus.PROPERTIES_IFACE)\nprint(device_props.Get('org.freedesktop.UDisks.Device', 'DriveVendor'))\nprint(device_props.Get('org.freedesktop.UDisks.Device', 'DeviceMountPaths'))\nprint(device_props.Get('org.freedesktop.UDisks.Device', 'DriveSerial'))\nprint(device_props.Get('org.freedesktop.UDisks.Device', 'PartitionSize'))?_split_?"}
{"nl":"Can Python test the membership of multiple values in a list?","code":"all(x in ['b', 'a', 'foo', 'bar'] for x in ['a', 'b'])","relevant":"def __init__(self, name):\n    self.name = name?_split_?class FileSystemModel(QtGui.QFileSystemModel):\n\n    def __init__(self, *args, **kwargs):\n        super(FileSystemModel, self).__init__(*args, **kwargs)?_split_?bus = dbus.SystemBus()\nud_manager_obj = bus.get_object('org.freedesktop.UDisks',\n    '\/org\/freedesktop\/UDisks')\nud_manager = dbus.Interface(ud_manager_obj, 'org.freedesktop.UDisks')\nfor dev in ud_manager.EnumerateDevices():\n    device_obj = bus.get_object('org.freedesktop.UDisks', dev)\ndevice_props = dbus.Interface(device_obj, dbus.PROPERTIES_IFACE)\nprint(device_props.Get('org.freedesktop.UDisks.Device', 'DriveVendor'))\nprint(device_props.Get('org.freedesktop.UDisks.Device', 'DeviceMountPaths'))\nprint(device_props.Get('org.freedesktop.UDisks.Device', 'DriveSerial'))\nprint(device_props.Get('org.freedesktop.UDisks.Device', 'PartitionSize'))?_split_?"}
{"nl":"Remove specific characters from a string","code":"line.translate(None, '!@#$')","relevant":"hs.place(x=5, y=5, width=150)?_split_?domain = \"\"\"\u0627\u0644\u0627\u0639\u0644\u064a-\u0644\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a.\u0642\u0637\u0631\"\"\"\ndomain_unicode = str(domain, 'utf8')\ndomain_idna = domain_unicode.encode('idna')\nurllib.request.urlopen('http:\/\/' + domain_idna).read()?_split_?plt.show()?_split_?"}
{"nl":"Remove specific characters from a string","code":"line = re.sub('[!@#$]', '', line)","relevant":"hs.place(x=5, y=5, width=150)?_split_?domain = \"\"\"\u0627\u0644\u0627\u0639\u0644\u064a-\u0644\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a.\u0642\u0637\u0631\"\"\"\ndomain_unicode = str(domain, 'utf8')\ndomain_idna = domain_unicode.encode('idna')\nurllib.request.urlopen('http:\/\/' + domain_idna).read()?_split_?plt.show()?_split_?"}
{"nl":"Remove specific characters from a string","code":"string.replace('1', '')","relevant":"hs.place(x=5, y=5, width=150)?_split_?domain = \"\"\"\u0627\u0644\u0627\u0639\u0644\u064a-\u0644\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a.\u0642\u0637\u0631\"\"\"\ndomain_unicode = str(domain, 'utf8')\ndomain_idna = domain_unicode.encode('idna')\nurllib.request.urlopen('http:\/\/' + domain_idna).read()?_split_?plt.show()?_split_?"}
{"nl":"Remove specific characters from a string","code":"a = a.replace(char, '')","relevant":"hs.place(x=5, y=5, width=150)?_split_?domain = \"\"\"\u0627\u0644\u0627\u0639\u0644\u064a-\u0644\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a.\u0642\u0637\u0631\"\"\"\ndomain_unicode = str(domain, 'utf8')\ndomain_idna = domain_unicode.encode('idna')\nurllib.request.urlopen('http:\/\/' + domain_idna).read()?_split_?plt.show()?_split_?"}
{"nl":"Remove specific characters from a string","code":"a = a.replace(char, '')","relevant":"hs.place(x=5, y=5, width=150)?_split_?domain = \"\"\"\u0627\u0644\u0627\u0639\u0644\u064a-\u0644\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a.\u0642\u0637\u0631\"\"\"\ndomain_unicode = str(domain, 'utf8')\ndomain_idna = domain_unicode.encode('idna')\nurllib.request.urlopen('http:\/\/' + domain_idna).read()?_split_?plt.show()?_split_?"}
{"nl":"Remove specific characters from a string","code":"line = line.translate(string.maketrans('', ''), '!@#$')","relevant":"hs.place(x=5, y=5, width=150)?_split_?domain = \"\"\"\u0627\u0644\u0627\u0639\u0644\u064a-\u0644\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a.\u0642\u0637\u0631\"\"\"\ndomain_unicode = str(domain, 'utf8')\ndomain_idna = domain_unicode.encode('idna')\nurllib.request.urlopen('http:\/\/' + domain_idna).read()?_split_?plt.show()?_split_?"}
{"nl":"How to binarize the values in a pandas DataFrame?","code":"pd.concat([df, pd.get_dummies(df, '', '').astype(int)], axis=1)[order]","relevant":"return {}?_split_?dfTest[['A', 'B']] = dfTest[['A', 'B']].apply(lambda x: MinMaxScaler().\n    fit_transform(x))\ndfTest?_split_?class StatsMiddleware(object):\n    duration = 0\n\ndef process_request(self, request):\n    request.start_time = time.time()\n\ndef process_response(self, request, response):\n    self.duration = time.time() - request.start_time\nresponse['x-server-time'] = datetime.now().strftime('%d\/%m\/%Y %H:%M')\nresponse.content = response.content.replace('server_time_777', str.encode(\n    response['x-server-time']))\nresponse['x-page-generation-duration-ms'] = '{:.3f}'.format(self.duration)\nresponse.content = response.content.replace('gen_duration_time_777', str.\n    encode(response['x-page-generation-duration-ms']))?_split_?"}
{"nl":"Storing a collection of integers in a list","code":"[3, 4, 1, 2]","relevant":"print('{:b}'.format(123))?_split_?from collections import defaultdict\nd = defaultdict(lambda : 'UNKNOWN')\nd.update({'greetings': 'hello'})\n'%(greetings)s  %(name)s !!!' % d?_split_?import json?_split_?"}
{"nl":"Is it possible to define global variables in a function in Python","code":"globals()['something'] = 'bob'","relevant":"def __init__(self):\n    pass?_split_?try:\n    jedi.names('lst = list()')[0].defined_names()\nexcept AttributeError as e:\n    if e.args[0].startswith('Instance ') and e.args[0].endswith(\n        \"Don't touch this (names_dict)!\"):\n        print('patching jedi')?_split_?df = pandas.DataFrame(numpy.array([['a', 1], ['b', 2], ['b', 3], ['c', 3]]))\ndf?_split_?"}
{"nl":"I'm looking for a pythonic way to insert a space before capital letters","code":"re.sub('([a-z](?=[A-Z])|[A-Z](?=[A-Z][a-z]))', '\\\\1 ', text)","relevant":"msg = xmpp.protocol.Message(body=text)\nmsg.setTo(room)\nmsg.setType('groupchat')\nconn.send(msg)?_split_?for x in a:\n    c[tuple(x)] += 1?_split_?action = path.strip('\/')\nargs = fullArgs.split('&')?_split_?"}
{"nl":"How can I convert Unicode to uppercase to print it?","code":"print('ex\\xe1mple'.upper())","relevant":"a.show()\ninput('Press return to update the notification')\na.update('Updated notification', 'Ipsum lorem still op')?_split_?def __call__(self, *args, **kwargs):\n    pass?_split_?foo\nfoo.dtypes?_split_?"}
{"nl":"Remove string from list if from substring list","code":"[l.split('\\\\')[-1] for l in list_dirs]","relevant":"for x in range(len(users)):\n    l = Checkbutton(root, text=users[x][0], variable=users[x])\nprint('l = Checkbutton(root, text=' + str(users[x][0]) + ', variable=' + str(\n    users[x]))\nl.pack(anchor='w')?_split_?return True, s[2:]?_split_?i = quaternion(0, 1, 0, 0)?_split_?"}
{"nl":"What's the Pythonic way to combine two sequences into a dictionary?","code":"dict(zip(keys, values))","relevant":"raise TypeError?_split_?s = s + 42\nprint((r, ' : ', s))\nENDPYTHON?_split_?def replace_right(source, target, replacement, replacements=None):\n    return replacement.join(source.rsplit(target, replacements))?_split_?"}
{"nl":"How to Customize the time format for Python logging?","code":"formatter = logging.Formatter('%(asctime)s;%(levelname)s;%(message)s')","relevant":"def get_project(endpoint, values):\n    project_name = values.pop('project_name')\ng.project = Project.query.filter_by(name=project_name).first_or_404()?_split_?import sys\ninFile = sys.argv[1]\noutFile = sys.argv[2]?_split_?bx = [byte for byte in struct.unpack('8B', u64be)]?_split_?"}
{"nl":"Python Regex replace","code":"new_string = re.sub('\"(\\\\d+),(\\\\d+)\"', '\\\\1.\\\\2', original_string)","relevant":"with open('\/home\/joe\/file.txt') as f_in:\n    pass?_split_?input('press return to end')?_split_?print('Content-Type: application\/json\\n\\n')\nprint(json.dumps(result))?_split_?"}
{"nl":"Can a python script execute a function inside a bash script?","code":"subprocess.call('test.sh otherfunc')","relevant":"[-2000, 1000, 2000, 3500, 4500, 6000]?_split_?may_b = numpy.array([False, True, True, False])?_split_?def find_eulerian_tour(graph):\n    pass?_split_?"}
{"nl":"Can a python script execute a function inside a bash script?","code":"subprocess.Popen(['bash', '-c', '. foo.sh; go'])","relevant":"[-2000, 1000, 2000, 3500, 4500, 6000]?_split_?may_b = numpy.array([False, True, True, False])?_split_?def find_eulerian_tour(graph):\n    pass?_split_?"}
{"nl":"A simple way to remove multiple spaces in a string in Python","code":"\"\"\" \"\"\".join(foo.split())","relevant":"raise RuntimeError('Something bad happened')?_split_?app.run(host='127.0.0.1', debug=False)?_split_?def main():\n    pass?_split_?"}
{"nl":"How to convert decimal to binary list in python","code":"list('{0:0b}'.format(8))","relevant":"Find(Config, s + 1, p)?_split_?return True?_split_?s = 'aaa#bbb*ccc#ddd*rkfh^ndjfh*dfehb*erjg-rh@fkej*rjh'\ndelimiters = re.findall('\\\\W', s)\nfirst = delimiters[0]\nCounter(delimiters)\nfrequent = Counter(delimiters).most_common(1)[0][0]\nre.split('\\\\{}|\\\\{}'.format(first, frequent), s)?_split_?"}
{"nl":"How to convert decimal to binary list in python","code":"[int(x) for x in list('{0:0b}'.format(8))]","relevant":"Find(Config, s + 1, p)?_split_?return True?_split_?s = 'aaa#bbb*ccc#ddd*rkfh^ndjfh*dfehb*erjg-rh@fkej*rjh'\ndelimiters = re.findall('\\\\W', s)\nfirst = delimiters[0]\nCounter(delimiters)\nfrequent = Counter(delimiters).most_common(1)[0][0]\nre.split('\\\\{}|\\\\{}'.format(first, frequent), s)?_split_?"}
{"nl":"How to convert decimal to binary list in python","code":"[int(x) for x in bin(8)[2:]]","relevant":"Find(Config, s + 1, p)?_split_?return True?_split_?s = 'aaa#bbb*ccc#ddd*rkfh^ndjfh*dfehb*erjg-rh@fkej*rjh'\ndelimiters = re.findall('\\\\W', s)\nfirst = delimiters[0]\nCounter(delimiters)\nfrequent = Counter(delimiters).most_common(1)[0][0]\nre.split('\\\\{}|\\\\{}'.format(first, frequent), s)?_split_?"}
{"nl":"Is it possible to take an ordered \"slice\" of a dictionary in Python based on a list of keys?","code":"dict(zip(my_list, map(my_dictionary.get, my_list)))","relevant":"re_multiline_macros = re.compile(start + continuation + lastline, re.MULTILINE)?_split_?class PaginationInline(admin.TabularInline):\n    template = 'admin\/edit_inline\/tabular_paginated.html'\nper_page = 20\n\ndef get_formset(self, request, obj=None, **kwargs):\n    formset_class = super(PaginationInline, self).get_formset(request, obj,\n        **kwargs)\n\n\nclass PaginationFormSet(formset_class):\n\n    def __init__(self, *args, **kwargs):\n        pass?_split_?cell = CellRendererPixbufXt()?_split_?"}
{"nl":"Numpy: cartesian product of x and y array points into single array of 2D points","code":"numpy.dstack(numpy.meshgrid(x, y)).reshape(-1, 2)","relevant":"logger2.addHandler(logfile)?_split_?u[j] += 1?_split_?flattened_choice_set.columns = ['_'.join((str(col[0]), col[1])) for col in\n    flattened_choice_set.columns]?_split_?"}
{"nl":"Selenium Webdriver - NoSuchElementExceptions","code":"driver.implicitly_wait(60)","relevant":"import scipy.ndimage as nd\nA = np.array([0, 10, 20, 30, 40, 50, 60, 70, 80, 90])?_split_?for key, value in list(datadict.items()):\n    pass?_split_?h2 = soup.find('h2')\nh2.name = 'h1'\nprint(soup)?_split_?"}
{"nl":"Selenium Webdriver - NoSuchElementExceptions","code":"driver.switch_to_frame('frameName')","relevant":"import scipy.ndimage as nd\nA = np.array([0, 10, 20, 30, 40, 50, 60, 70, 80, 90])?_split_?for key, value in list(datadict.items()):\n    pass?_split_?h2 = soup.find('h2')\nh2.name = 'h1'\nprint(soup)?_split_?"}
{"nl":"Format time string in Python 3.3","code":"time.strftime('{%Y-%m-%d %H:%M:%S}')","relevant":"6302, 10044, 10195, 9386, 7230, 4602, 6282, 8619, 7903, 6318, 13294?_split_?redirect(url_for('map_stream'))?_split_?table2 = [('Id1', 'Proudct1', None, 'New', 'Id#343', 'Jim'), ('Id2',\n    'Proudct2', None, 'New', 'Id#3343', 'Jim')]\ndict1 = dict(table1)\ndict2 = dict((item[0], item[1:]) for item in table2)\nfinal = dict((key, dict2[key] + (dict1[key],)) for key in set(dict1).\n    intersection(dict2))\nprint(final)?_split_?"}
{"nl":"How do I sort a Python list of time values?","code":"sorted(['14:10:01', '03:12:08'])","relevant":"t['a']\nt['a']['b']['c'] += 1\nprint(t['a']['b']['c'])?_split_?log.info('POST applied')?_split_?return text.get_window_extent().width?_split_?"}
{"nl":"Regex for location matching - Python","code":"re.findall('(?:\\\\w+(?:\\\\s+\\\\w+)*,\\\\s)+(?:\\\\w+(?:\\\\s\\\\w+)*)', x)","relevant":"[-3, 0, -1, -2, -3],?_split_?class AuditEntry(models.Model):\n    action = models.CharField(max_length=64)\nip = models.GenericIPAddressField(null=True)\nusername = models.CharField(max_length=256, null=True)\n\ndef __unicode__(self):\n    return '{0} - {1} - {2}'.format(self.action, self.username, self.ip)\n\n@receiver(user_logged_in)\ndef user_logged_in_callback(sender, request, user, **kwargs):\n    ip = request.META.get('REMOTE_ADDR')?_split_?urllib.request.install_opener(opener)?_split_?"}
{"nl":"Pandas: How can I remove duplicate rows from DataFrame and calculate their frequency?","code":"df1.groupby(['key', 'year']).size().reset_index()","relevant":"return prodM?_split_?qs = kwargs.pop('bars')?_split_?C[..., (0), (0)] = A[:, (0)][:, (None), (None)]?_split_?"}
{"nl":"How do I iterate over a Python dictionary, ordered by values?","code":"sorted(list(dictionary.items()), key=operator.itemgetter(1))","relevant":"while added != true:\n    if letter == 'c':\n        pass?_split_?xxx.connect(path, port)?_split_?ord('a')\nchr(97)?_split_?"}
{"nl":"How do I iterate over a Python dictionary, ordered by values?","code":"sorted(iter(d.items()), key=lambda x: x[1])","relevant":"while added != true:\n    if letter == 'c':\n        pass?_split_?xxx.connect(path, port)?_split_?ord('a')\nchr(97)?_split_?"}
{"nl":"How do I iterate over a Python dictionary, ordered by values?","code":"sorted(list(dictionary.items()), key=lambda x: x[1])","relevant":"while added != true:\n    if letter == 'c':\n        pass?_split_?xxx.connect(path, port)?_split_?ord('a')\nchr(97)?_split_?"}
{"nl":"How to split 1D array into 2D array in NumPy by splitting the array at the last element?","code":"np.split(a, [-1])","relevant":"if __name__ == '__main__':\n    server = ThreadedHTTPServer(('localhost', 8080), Handler)?_split_?data = np.random.normal(-3, 1, size=1000)\ndata[600:] = np.random.normal(loc=3, scale=2, size=400)?_split_?class Int(object):\n\n    def __init__(self, init_val=0):\n        self.val = init_val?_split_?"}
{"nl":"Python pandas - grouping by and summarizing on a field","code":"df.pivot(index='order', columns='sample')","relevant":"import numpy\nn = 1000\npairs = [(0.3, 'a'), (0.3, 'b'), (0.4, 'c')]\nprobabilities = numpy.random.multinomial(n, zip(*pairs)[0])\nresult = zip(probabilities, zip(*pairs)[1])?_split_?client = cache._client?_split_?cnx = pyodbc.connect('DSN=SQLDemo;UID=DAVIDG;PWD=123456')?_split_?"}
{"nl":"selecting across multiple columns with python pandas?","code":"df[(df['A'] > 1) | (df['B'] < -1)]","relevant":"axes.xaxis.set_minor_formatter(FormatStrFormatter('%.2f'))\nplt.xlim(1.8, 9.2)\nplt.show()?_split_?used.append(obj)?_split_?import matplotlib.pyplot as plt\nfig_size[0] = 12\nfig_size[1] = 9\nplt.rcParams['figure.figsize'] = fig_size?_split_?"}
{"nl":"Zip with list output instead of tuple","code":"[list(a) for a in zip([1, 2, 3], [4, 5, 6], [7, 8, 9])]","relevant":"df = pd.read_csv(fo)?_split_?df.to_html('table.html')\nsubprocess.call('wkhtmltoimage -f png --width 0 table.html table.png',\n    shell=True)?_split_?import sys?_split_?"}
{"nl":"Select rows from a DataFrame based on values in a column in pandas","code":"print(df.loc[df['A'] == 'foo'])","relevant":"def prettyformat(obj):\n    pass?_split_?from collections import OrderedDict\nordered_items = sorted(list(ips_data.items()), key=lambda item: item[1]['data_two'])\nordered_ips_data_dict = OrderedDict(ordered_items)?_split_?bool(())?_split_?"}
{"nl":"Select rows from a DataFrame based on values in a column in pandas","code":"df.loc[df['column_name'] != some_value]","relevant":"def prettyformat(obj):\n    pass?_split_?from collections import OrderedDict\nordered_items = sorted(list(ips_data.items()), key=lambda item: item[1]['data_two'])\nordered_ips_data_dict = OrderedDict(ordered_items)?_split_?bool(())?_split_?"}
{"nl":"Select rows from a DataFrame based on values in a column in pandas","code":"df.loc[~df['column_name'].isin(some_values)]","relevant":"def prettyformat(obj):\n    pass?_split_?from collections import OrderedDict\nordered_items = sorted(list(ips_data.items()), key=lambda item: item[1]['data_two'])\nordered_ips_data_dict = OrderedDict(ordered_items)?_split_?bool(())?_split_?"}
{"nl":"Select rows from a DataFrame based on values in a column in pandas","code":"df.loc[df['column_name'] == some_value]","relevant":"def prettyformat(obj):\n    pass?_split_?from collections import OrderedDict\nordered_items = sorted(list(ips_data.items()), key=lambda item: item[1]['data_two'])\nordered_ips_data_dict = OrderedDict(ordered_items)?_split_?bool(())?_split_?"}
{"nl":"Select rows from a DataFrame based on values in a column in pandas","code":"print(df.loc[df['B'].isin(['one', 'three'])])","relevant":"def prettyformat(obj):\n    pass?_split_?from collections import OrderedDict\nordered_items = sorted(list(ips_data.items()), key=lambda item: item[1]['data_two'])\nordered_ips_data_dict = OrderedDict(ordered_items)?_split_?bool(())?_split_?"}
{"nl":"How to repeat individual characters in strings in Python","code":"\"\"\"\"\"\".join(map(lambda x: x * 7, 'map'))","relevant":"best_answer_id = Column(Integer, ForeignKey('answers.id'), nullable=True)?_split_?import itertools?_split_?def week_of_month(dt):\n    \"\"\" Returns the week of the month for the specified date.\n    \"\"\"\nfirst_day = dt.replace(day=1)\ndom = dt.day\nadjusted_dom = dom + first_day.weekday()\nreturn int(ceil(adjusted_dom \/ 7.0))?_split_?"}
{"nl":"Delete a file or folder","code":"os.rmdir()","relevant":"from email.mime.multipart import MIMEMultipart?_split_?raise ValueError('403')?_split_?df.show()?_split_?"}
{"nl":"Delete a file or folder","code":"shutil.rmtree(path, ignore_errors=False, onerror=None)","relevant":"from email.mime.multipart import MIMEMultipart?_split_?raise ValueError('403')?_split_?df.show()?_split_?"}
{"nl":"Delete a file or folder","code":"os.removedirs(name)","relevant":"from email.mime.multipart import MIMEMultipart?_split_?raise ValueError('403')?_split_?df.show()?_split_?"}
{"nl":"How to add an extra row to a pandas dataframe","code":"df.loc[len(df)] = ['8\/19\/2014', 'Jun', 'Fly', '98765']","relevant":"x = mu + sigma * np.random.randn(N)?_split_?for item in a:\n    pass?_split_?soup = BeautifulSoup(unicodestring_containing_the_entire_htlm_doc)\ntable = soup.find('table', {'class': 'details'})\nth = table.find('th', text='Issued on:')?_split_?"}
{"nl":"listing files from a directory using glob python","code":"glob.glob('*')","relevant":"im = Image.open(image_path)\ndraw = ImageDraw.Draw(im)?_split_?plt.quiver(X, Y, Z2, width=0.01, linewidth=1)\nplt.colorbar()?_split_?userhome = userhome.encode(sys.getfilesystemencoding())?_split_?"}
{"nl":"listing files from a directory using glob python","code":"glob.glob('[!hello]*.txt')","relevant":"im = Image.open(image_path)\ndraw = ImageDraw.Draw(im)?_split_?plt.quiver(X, Y, Z2, width=0.01, linewidth=1)\nplt.colorbar()?_split_?userhome = userhome.encode(sys.getfilesystemencoding())?_split_?"}
{"nl":"listing files from a directory using glob python","code":"glob.glob('hello*.txt')","relevant":"im = Image.open(image_path)\ndraw = ImageDraw.Draw(im)?_split_?plt.quiver(X, Y, Z2, width=0.01, linewidth=1)\nplt.colorbar()?_split_?userhome = userhome.encode(sys.getfilesystemencoding())?_split_?"}
{"nl":"test a boolean expression in a Python string","code":"eval('20<30')","relevant":"self._control.clear()?_split_?def clean_email(self):\n    email = self.cleaned_data['username']\nreturn email?_split_?a.extend(memoryview(b)[14:20])?_split_?"}
{"nl":"Python copy a list of lists","code":"new_list = [x[:] for x in old_list]","relevant":"to = len(list)?_split_?print(Header(v, maxlinelen=self._maxheaderlen, header_name=h,\n    continuation_ws='\\t').encode(), file=self._fp)?_split_?output.write(resource.read())\noutput.close()?_split_?"}
{"nl":"Convert scientific notation to decimal - python","code":"\"\"\"{:.50f}\"\"\".format(float(a[0] \/ a[1]))","relevant":"logdet = add.reduce(absd, axis=-1)?_split_?def reversedim(M, k=0):\n    idx = tuple(slice(None, None, -1) if ii == k else slice(None) for ii in\n        range(M.ndim))\nreturn M[idx]?_split_?df = pd.DataFrame()\nfor r in rslt:\n    df = df.append(r)?_split_?"}
{"nl":"How to remove 0's converting pandas dataframe to record","code":"df.to_sparse(0)","relevant":"time.sleep(0.0001)?_split_?def has_add_permission(self, request):\n    return False\n\ndef has_delete_permission(self, request, obj=None):\n    pass?_split_?list2 = ['k', 'l', 'm', 'n']\nlist3 = ['c', 'b', 'a', 'e']?_split_?"}
{"nl":"python - readable list of objects","code":"print([obj.attr for obj in my_list_of_objs])","relevant":"class MyHandler(RequestHandler, AppEngineAuthMixin):\n    pass?_split_?print('END DEBUG')?_split_?t = np.arange(1000)?_split_?"}
{"nl":"get count of values associated with key in dict python","code":"sum(1 if d['success'] else 0 for d in s)","relevant":"for team, runs in league.items():\n    pass?_split_?from pdb import set_trace?_split_?random.shuffle(my_list)\nreturn my_list?_split_?"}
{"nl":"get count of values associated with key in dict python","code":"sum(d['success'] for d in s)","relevant":"for team, runs in league.items():\n    pass?_split_?from pdb import set_trace?_split_?random.shuffle(my_list)\nreturn my_list?_split_?"}
{"nl":"get path from a module name","code":"imp.find_module('os')[1]","relevant":"def get(self, path=None, include_body=True):\n    super(MyFileHandler, self).get(self.filename, include_body)\napp = tornado.web.Application([('\/foo\\\\.json', MyFileHandler, {'path':\n    '\/path\/to\/foo.json'})])\napp.listen(8888)\ntornado.ioloop.IOLoop.current().start()?_split_?def test_add_dependency(self):\n    \"\"\"Tasks can be added with dependencies\"\"\"?_split_?from django.conf import settings\n\n\nclass MyUser(models.Model):\n    pass?_split_?"}
{"nl":"get the logical xor of two variables","code":"(bool(a) != bool(b))","relevant":"sys.exit(9009)\nret = os.system('python %s %s' % (filename, ' '.join(sys.argv[1:])))\nexit(ret)?_split_?plt.plot(x, y, 'o', x, two_lines(x, *pw), '-')?_split_?('lk', 'ls -F -l -G %l | grep ^l'),?_split_?"}
{"nl":"get the logical xor of two variables","code":"((a and (not b)) or ((not a) and b))","relevant":"sys.exit(9009)\nret = os.system('python %s %s' % (filename, ' '.join(sys.argv[1:])))\nexit(ret)?_split_?plt.plot(x, y, 'o', x, two_lines(x, *pw), '-')?_split_?('lk', 'ls -F -l -G %l | grep ^l'),?_split_?"}
{"nl":"get the logical xor of two variables","code":"(bool(a) ^ bool(b))","relevant":"sys.exit(9009)\nret = os.system('python %s %s' % (filename, ' '.join(sys.argv[1:])))\nexit(ret)?_split_?plt.plot(x, y, 'o', x, two_lines(x, *pw), '-')?_split_?('lk', 'ls -F -l -G %l | grep ^l'),?_split_?"}
{"nl":"get the logical xor of two variables","code":"xor(bool(a), bool(b))","relevant":"sys.exit(9009)\nret = os.system('python %s %s' % (filename, ' '.join(sys.argv[1:])))\nexit(ret)?_split_?plt.plot(x, y, 'o', x, two_lines(x, *pw), '-')?_split_?('lk', 'ls -F -l -G %l | grep ^l'),?_split_?"}
{"nl":"get the logical xor of two variables","code":"return (bool(str1) ^ bool(str2))","relevant":"sys.exit(9009)\nret = os.system('python %s %s' % (filename, ' '.join(sys.argv[1:])))\nexit(ret)?_split_?plt.plot(x, y, 'o', x, two_lines(x, *pw), '-')?_split_?('lk', 'ls -F -l -G %l | grep ^l'),?_split_?"}
{"nl":"How to alphabetically sort array of dictionaries on single key?","code":"my_list.sort(key=operator.itemgetter('name'))","relevant":"l.set_option(ldap.OPT_X_TLS_DEMAND, True)\nl.set_option(ldap.OPT_DEBUG_LEVEL, 255)\nl.simple_bind_s('admin@tester.com', 'password')?_split_?from numpy.random import rand\nimport matplotlib\nmatplotlib.use('gtkagg')\nimport matplotlib.pyplot as plt\nax0 = plt.subplot(211)\nax1 = ax0.twinx()\nax2 = plt.subplot(212)\nax3 = ax2.twinx()\nax1.get_shared_y_axes().join(ax1, ax3)\nax0.plot(rand(1) * rand(10), 'r')\nax1.plot(10 * rand(1) * rand(10), 'b')\nax2.plot(3 * rand(1) * rand(10), 'g')\nax3.plot(10 * rand(1) * rand(10), 'y')\nplt.show()?_split_?result = [str[sp[0]:sp[1] + 1] for sp in split_points]?_split_?"}
{"nl":"Python: Split string by list of separators","code":"re.split('\\\\s*,\\\\s*|\\\\s*;\\\\s*', 'a , b; cdf')","relevant":"revsubBin.append(revB)?_split_?print(get_res(Fruits))?_split_?plt.legend()?_split_?"}
{"nl":"Python: Split string by list of separators","code":"[t.strip() for s in string.split(',') for t in s.split(';')]","relevant":"revsubBin.append(revB)?_split_?print(get_res(Fruits))?_split_?plt.legend()?_split_?"}
{"nl":"lambda in python","code":"f = lambda x, y: x + y","relevant":"re.sub('(0x[\\\\da-fA-F]+)|(\\\\d+)', '[0-9]', a)?_split_?base64.b64encode('a')?_split_?from datetime import datetime as dt?_split_?"}
{"nl":"Creating a list of objects in Python","code":"instancelist = [MyClass() for i in range(29)]","relevant":"stratfraction = 0.05\ndf = pd.read_csv('sample.csv', usecols=['Z'])\ndf['Obs'] = 1\ngp = df.groupby('Z')?_split_?parser.add_argument('-u', '--uppercase', action='store_true', help=\n    'If set, all letters become uppercase.')?_split_?objects = MemberManager()?_split_?"}
{"nl":"Python 2.7: making a dictionary object from a specially-formatted list object","code":"{f[i + 1]: [f[i], f[i + 2]] for i in range(0, len(f), 3)}","relevant":"def one_function():\n    x = 0?_split_?X, Y, Z, N = 1, 1, 1, 2\n[[x, y, z] for x in range(X + 1) for y in range(Y + 1) for z in range(Z + 1\n    ) if x + y + z != N]?_split_?data = str(structure)?_split_?"}
{"nl":"Shortest way to convert these bytes to int in python?","code":"struct.unpack('>q', s)[0]","relevant":"y = df[(df['id'] == 1) & np.isfinite(df['my_variable'])]['my_variable']?_split_?first_name = CharField()?_split_?import os\nfor filename in os.listdir(dirname):\n    root, ext = os.path.splitext(filename)\nif root.startswith('Run') and ext == '.py':\n    pass?_split_?"}
{"nl":"How can I concatenate a Series onto a DataFrame with Pandas?","code":"pd.concat([students, pd.DataFrame(marks)], axis=1)","relevant":"ob_end_flush()\nflush()?_split_?df = pd.DataFrame(np.random.randn(10, 2), columns=['A', 'B'])?_split_?import matplotlib.pyplot as plt\nfrom itertools import cycle\nlines = ['-', '--', '-.', ':']\nlinecycler = cycle(lines)\nplt.figure()\nfor i in range(10):\n    x = list(range(i, i + 10))\nplt.plot(list(range(10)), x, next(linecycler))\nplt.show()?_split_?"}
{"nl":"Custom Python list sorting","code":"alist.sort(key=lambda x: x.foo)","relevant":"zeros = [2, 1, 3, 0]?_split_?import numpy as np?_split_?days = ['5 days', '10 days', '20 days', '60 days']?_split_?"}
{"nl":"How to get only div with id ending with a certain value in Beautiful Soup?","code":"soup.select('div[id$=_answer]')","relevant":"import org.sikuli.script.Pattern?_split_?magic(f)?_split_?def app(*args, **kwargs):\n    pass?_split_?"}
{"nl":"How can I solve system of linear equations in SymPy?","code":"linsolve(Matrix(([1, 1, 1, 1], [1, 1, 2, 3])), (x, y, z))","relevant":"d = defaultdict(int)\nfor i in L:\n    d[i] += 1?_split_?for x in mylist:\n    myDict[x] += 1?_split_?\"\"\"\u0016\"\"\".isprintable()?_split_?"}
{"nl":"best way to extract subset of key-value pairs from python dictionary object","code":"{k: bigdict[k] for k in list(bigdict.keys()) & {'l', 'm', 'n'}}","relevant":"while True:\n    pass?_split_?def __init__(self, *args):\n    super(Foo, self).__init__(*args)?_split_?br.open('http:\/\/pypi.python.org\/pypi\/xlwt')\nf = open('source.html', 'w')\nf.write(br.response().read())?_split_?"}
{"nl":"best way to extract subset of key-value pairs from python dictionary object","code":"dict((k, bigdict[k]) for k in ('l', 'm', 'n'))","relevant":"while True:\n    pass?_split_?def __init__(self, *args):\n    super(Foo, self).__init__(*args)?_split_?br.open('http:\/\/pypi.python.org\/pypi\/xlwt')\nf = open('source.html', 'w')\nf.write(br.response().read())?_split_?"}
{"nl":"best way to extract subset of key-value pairs from python dictionary object","code":"{k: bigdict.get(k, None) for k in ('l', 'm', 'n')}","relevant":"while True:\n    pass?_split_?def __init__(self, *args):\n    super(Foo, self).__init__(*args)?_split_?br.open('http:\/\/pypi.python.org\/pypi\/xlwt')\nf = open('source.html', 'w')\nf.write(br.response().read())?_split_?"}
{"nl":"best way to extract subset of key-value pairs from python dictionary object","code":"{k: bigdict[k] for k in ('l', 'm', 'n')}","relevant":"while True:\n    pass?_split_?def __init__(self, *args):\n    super(Foo, self).__init__(*args)?_split_?br.open('http:\/\/pypi.python.org\/pypi\/xlwt')\nf = open('source.html', 'w')\nf.write(br.response().read())?_split_?"}
{"nl":"Get contents of entire page using Selenium","code":"driver.page_source","relevant":"if not t.href.startswith('notizia.php?'):\n    pass?_split_?x.save('abc1.png')?_split_?z = np.array([1, 2])?_split_?"}
{"nl":"Extracting specific columns in numpy array","code":"data[:, ([1, 9])]","relevant":"return False?_split_?class PaintingManager(models.Manager):\n    pass?_split_?pairs = {}?_split_?"}
{"nl":"Remove string between 2 characters from text string","code":"re.sub('\\\\[.*?\\\\]', '', 'abcd[e]yth[ac]ytwec')","relevant":"pickle.dumps(n1)?_split_?my_item['value'] = item.select('.\/\/text()').extract()\nyield my_item?_split_?assert hasattr(d, Comment.attrib)?_split_?"}
{"nl":"How can I resize the root window in Tkinter?","code":"root.geometry('500x500')","relevant":"[{'x': 'one', 'id': 1}, {'x': 'two', 'id': 2}, {'x': 'three', 'id': 3}]?_split_?zelib.multiplier(2, 3)?_split_?commonprefix('interspecies interstelar interstate'.split())?_split_?"}
{"nl":"How to capture the entire string while using 'lookaround' with chars in regex?","code":"re.findall('\\\\b(?:b+a)+b+\\\\b', mystring)","relevant":"fh = logging.FileHandler(filename)?_split_?for line in infile:\n    m = re.match('going to the ((?:\\\\w+\\\\s*(?!to try)){1,3})', line)?_split_?heapq.heappush(heap, (a + b, a, b))?_split_?"}
{"nl":"in Python, how to convert list of float numbers to string with certain format?","code":"str_list = [tuple('{0:.8e}'.format(flt) for flt in sublist) for sublist in lst]","relevant":"cProfile.run('sum((number for number in range(9999999) if number % 2 == 0))')?_split_?plt.rcParams['hatch.color'] = 'b'\nplt.plot([0, 1], [0, 1], ls='--', c='b')\nplt.fill_between([0, 1], [0, 1], color='none', hatch='X', edgecolor='b',\n    linewidth=0.0)\nplt.show()?_split_?if django.db.transaction.is_managed():\n    if django.db.transaction.is_dirty():\n        pass?_split_?"}
{"nl":"in Python, how to convert list of float numbers to string with certain format?","code":"str_list = [['{0:.8e}'.format(flt) for flt in sublist] for sublist in lst]","relevant":"cProfile.run('sum((number for number in range(9999999) if number % 2 == 0))')?_split_?plt.rcParams['hatch.color'] = 'b'\nplt.plot([0, 1], [0, 1], ls='--', c='b')\nplt.fill_between([0, 1], [0, 1], color='none', hatch='X', edgecolor='b',\n    linewidth=0.0)\nplt.show()?_split_?if django.db.transaction.is_managed():\n    if django.db.transaction.is_dirty():\n        pass?_split_?"}
{"nl":"Getting the first elements per row in an array in Python?","code":"t = tuple(x[0] for x in s)","relevant":"grid.addWidget(text_edit)?_split_?series = pd.Series(np.random.normal(0, 100, 1000))\nseries.plot(kind='hist', bins=50, ax=ax)\nax.annotate('', xy=(300, 5), xycoords='data', xytext=(300, 20), textcoords=\n    'data', arrowprops=dict(arrowstyle='->', connectionstyle='arc3'))?_split_?d1 = {'a': 1, 'b': 2}?_split_?"}
{"nl":"How to obtain the day of the week in a 3 letter format from a datetime object in python?","code":"datetime.datetime.now().strftime('%a')","relevant":"for j in range(-n, n):\n    pass?_split_?plt.hist(nd, normed=True, bins=n_bins0, alpha=0.5)?_split_?def rosen(x):\n    \"\"\"The Rosenbrock function\"\"\"\nreturn sum(100.0 * (x[1:] - x[:-1] ** 2.0) ** 2.0 + (1 - x[:-1]) ** 2.0)?_split_?"}
{"nl":"get the <a href=\"http:\/\/en.wikipedia.org\/wiki\/ASCII\" rel=\"nofollow noreferrer\">ASCII<\/a> value of a character as an int","code":"ord('a')","relevant":"coautorshipDictionary = json.load(json_data, object_hook=lambda d: {int(k):\n    ([int(i) for i in v] if isinstance(v, list) else v) for k, v in list(d.items())})?_split_?path = '\/book\/html\/wa\/foo\/bar\/'?_split_?return str(t) + ' us'?_split_?"}
{"nl":"get the <a href=\"http:\/\/en.wikipedia.org\/wiki\/ASCII\" rel=\"nofollow noreferrer\">ASCII<\/a> value of a character as an int","code":"ord('\\u3042')","relevant":"coautorshipDictionary = json.load(json_data, object_hook=lambda d: {int(k):\n    ([int(i) for i in v] if isinstance(v, list) else v) for k, v in list(d.items())})?_split_?path = '\/book\/html\/wa\/foo\/bar\/'?_split_?return str(t) + ' us'?_split_?"}
{"nl":"get the <a href=\"http:\/\/en.wikipedia.org\/wiki\/ASCII\" rel=\"nofollow noreferrer\">ASCII<\/a> value of a character as an int","code":"ord()","relevant":"coautorshipDictionary = json.load(json_data, object_hook=lambda d: {int(k):\n    ([int(i) for i in v] if isinstance(v, list) else v) for k, v in list(d.items())})?_split_?path = '\/book\/html\/wa\/foo\/bar\/'?_split_?return str(t) + ' us'?_split_?"}
{"nl":"decode JSON","code":"json.load(u)","relevant":"G.add_edge('1', '2')\nnx.draw(G)\nplt.show()?_split_?@declared_attr\ndef __table_args__(cls):\n    pass?_split_?pd.to_timedelta(df)?_split_?"}
{"nl":"Deleting mulitple columns in Pandas","code":"yourdf.drop(['columnheading1', 'columnheading2'], axis=1, inplace=True)","relevant":"s.quit()?_split_?import ctypes\nctypes.windll.user32.PostQuitMessage(0)?_split_?import pandas as pd?_split_?"}
{"nl":"How to read formatted input in python?","code":"[s.strip() for s in input().split(',')]","relevant":"if data:\n    with open(fn, 'wb') as f:\n        f.write(data)?_split_?import math\nmath.acos(0)?_split_?orders_df['Value'] = orders_df.Prices * orders_df.Amount * orders_df.C\norders_df?_split_?"}
{"nl":"Convert binary to list of digits Python","code":"[int(d) for d in str(bin(x))[2:]]","relevant":"for index, row in df.iterrows():\n    pass?_split_?people_left.remove(p)?_split_?random.seed()\ncode = process_obj._bootstrap()\nsys.stdout.flush()\nsys.stderr.flush()\nos._exit(code)?_split_?"}
{"nl":"How to get a max string length in nested lists","code":"max(len(word) for word in i)","relevant":"var = 1\nprint(bool(var))?_split_?print(new_l)?_split_?import numpy as np\nresult = np.arange(20, dtype=np.float).reshape((2, 10))?_split_?"}
{"nl":"How to get a max string length in nested lists","code":"len(max(i, key=len))","relevant":"var = 1\nprint(bool(var))?_split_?print(new_l)?_split_?import numpy as np\nresult = np.arange(20, dtype=np.float).reshape((2, 10))?_split_?"}
{"nl":"Python: How to Redirect Output with Subprocess?","code":"os.system(my_cmd)","relevant":"if ax is None:\n    ax = plt.gca()?_split_?python << END_OF_PYTHON?_split_?response = HttpResponse(mimetype='application\/vnd.ms-excel')?_split_?"}
{"nl":"How do I sort a list of strings in Python?","code":"mylist.sort(key=lambda x: x.lower())","relevant":"for x in range(10):\n    for y in range(10):\n        for z in range(10):\n            pass?_split_?pool = mp.Pool(2)?_split_?sys.getsizeof(fs1)?_split_?"}
{"nl":"How do I sort a list of strings in Python?","code":"mylist.sort(key=str.lower)","relevant":"for x in range(10):\n    for y in range(10):\n        for z in range(10):\n            pass?_split_?pool = mp.Pool(2)?_split_?sys.getsizeof(fs1)?_split_?"}
{"nl":"How do I sort a list of strings in Python?","code":"mylist.sort()","relevant":"for x in range(10):\n    for y in range(10):\n        for z in range(10):\n            pass?_split_?pool = mp.Pool(2)?_split_?sys.getsizeof(fs1)?_split_?"}
{"nl":"How do I sort a list of strings in Python?","code":"list.sort()","relevant":"for x in range(10):\n    for y in range(10):\n        for z in range(10):\n            pass?_split_?pool = mp.Pool(2)?_split_?sys.getsizeof(fs1)?_split_?"}
{"nl":"set multi index of an existing data frame in pandas","code":"df.set_index(['Company', 'date'], inplace=True)","relevant":"PyEval_InitThreads()?_split_?import seaborn as sns?_split_?widget = QTreeWidget()?_split_?"}
{"nl":"How can I use a string with the same name of an object in Python to access the object itself?","code":"getattr(your_obj, x)","relevant":"document.getElementById('parentDiv').appendChild(scref)?_split_?class Article(models.Model):\n    pass\n\n\nclass Headline(models.Model):\n    article = models.ForeignKey(Article, related_name='headlines')?_split_?r = slice(1, 4)\ns = slice(2, 5)\n[LoL[i][s] for i in range(len(LoL))[r]]?_split_?"}
{"nl":"Remove the first word in a Python string?","code":"s.split(' ', 1)[1]","relevant":"hsh.set_http_debuglevel(1)\nopener = urllib.request.build_opener(hh, hsh)\nlogger = logging.getLogger()?_split_?def collapse(binaries):\n    result = set(binaries)\nfor b1, b2 in combinations(result, 2):\n    for i in range(len(b1)):\n        pass?_split_?import locale\nlocale.setlocale(locale.LC_TIME, 'sv_SE')\nprint(time.strftime('%a, %d %b %Y %H:%M:%S'))?_split_?"}
{"nl":"How to save Xlsxwriter file in certain path?","code":"workbook = xlsxwriter.Workbook('app\/smth1\/smth2\/Expenses01.xlsx')","relevant":"print(s)?_split_?if a:\n    json = simplejson.dumps({'name': a.name, 'area': '{replaceme}', 'id': a.id}\n        ),?_split_?def _roo(self):\n    pass?_split_?"}
{"nl":"How to save Xlsxwriter file in certain path?","code":"workbook = xlsxwriter.Workbook('C:\/Users\/Steven\/Documents\/demo.xlsx')","relevant":"print(s)?_split_?if a:\n    json = simplejson.dumps({'name': a.name, 'area': '{replaceme}', 'id': a.id}\n        ),?_split_?def _roo(self):\n    pass?_split_?"}
{"nl":"How to change legend size with matplotlib.pyplot","code":"pyplot.legend(loc=2, fontsize='x-small')","relevant":"import numpy as np?_split_?self.leader[a] = self.leader[b] = a?_split_?parser.add_argument(args1, args2, help=desc, **options)?_split_?"}
{"nl":"How to change legend size with matplotlib.pyplot","code":"plot.legend(loc=2, prop={'size': 6})","relevant":"import numpy as np?_split_?self.leader[a] = self.leader[b] = a?_split_?parser.add_argument(args1, args2, help=desc, **options)?_split_?"}
{"nl":"How do you split a list into evenly sized chunks?","code":"[l[i:i + n] for i in range(0, len(l), n)]","relevant":"queue_empty = queue_state.method.message_count == 0?_split_?return 'I Love You, %s!' % name?_split_?df.to_sql('data', disk_engine, if_exists='append')\nindex_start = df.index[-1] + 1?_split_?"}
{"nl":"How do you split a list into evenly sized chunks?","code":"[l[i:i + n] for i in range(0, len(l), n)]","relevant":"queue_empty = queue_state.method.message_count == 0?_split_?return 'I Love You, %s!' % name?_split_?df.to_sql('data', disk_engine, if_exists='append')\nindex_start = df.index[-1] + 1?_split_?"}
{"nl":"How to check if character exists in DataFrame cell","code":"df['a'].str.contains('-')","relevant":"y.pack(side=BOTTOM)\nroot.mainloop()?_split_?parser.add_argument('filename', help='The filename to be processed')?_split_?'x' in 'xdasds'\n'xd' in 'xdasds'?_split_?"}
{"nl":"Python Regex - Remove special characters but preserve apostraphes","code":"re.sub(\"[^\\\\w' ]\", '', \"doesn't this mean it -technically- works?\")","relevant":"shared_array = manager.list()\nfor i in range(4):\n    p = Process(target=f, args=(i, shared_array))\np.start()\nprocesses.append(p)\ntry:\n    for process in processes:\n        process.join()\nexcept KeyboardInterrupt:\n    print('Keyboard interrupt in main')\nfor item in shared_array:\n    pass?_split_?class Taxes(ndb.Model):\n    name = ndb.StringProperty()\nid = ndb.ComputedProperty(lambda self: self.key.id())?_split_?fly.rect.bottom = hit.rect.top?_split_?"}
{"nl":"find all digits between a character in python","code":"print(re.findall('\\\\d+', '\\n'.join(re.findall('\\xab([\\\\s\\\\S]*?)\\xbb', text))))","relevant":"A = 10 * np.eye(10) + np.random.rand(100).reshape(10, 10)\nimshow(A, interpolation='nearest')?_split_?self.orig_clipping_range = cc.clipping_range?_split_?class topic(object):\n\n    def __init__(self):\n        pass?_split_?"}
{"nl":"Use index in pandas to plot data","code":"monthly_mean.reset_index().plot(x='index', y='A')","relevant":"FAKE_TIME = datetime.datetime(2020, 12, 25, 17, 5, 55)?_split_?start_date = timezone.now().date()\nend_date = start_date + timedelta(days=1)?_split_?lst = ['x', 'h', '\\xc3\\xaa', '\\xc3\\xb8', '5', '\\xc5\\xbe', 'z', '\\xce\\xb1',\n    '3', '1']\nlst.sort(key=lambda c: POS[c])\nlst.sort(key=POS.get)?_split_?"}
{"nl":"How to get data from command line from within a Python program?","code":"subprocess.check_output('echo \"foo\"', shell=True)","relevant":"nb_frames = input_wave_file.getnframes()?_split_?print('Has no element at', i, ',', j)?_split_?class Caps(str):\n\n    def __new__(cls, content):\n        return super().__new__(cls, content.upper())?_split_?"}
{"nl":"Easy way to convert a unicode list to a list containing python strings?","code":"[x.encode('UTF8') for x in EmployeeList]","relevant":"cur.execute('select arr from test')?_split_?def get_client(name):\n    pass?_split_?latitude = str(latitude).split('=')[1][1:-1].split(' ')?_split_?"}
{"nl":"pandas: combine two columns in a DataFrame","code":"pandas.concat([df['foo'].dropna(), df['bar'].dropna()]).reindex_like(df)","relevant":"re.findall('(?<=\\\\()[0-9+\/*-]+(?=\\\\))', x)?_split_?for key, values in list(d.items()):\n    pass?_split_?\"\"\"Do here your post-install\"\"\"?_split_?"}
{"nl":"How can I generate a list of consecutive numbers?","code":"list(range(9))","relevant":"def binary_search(array, target):\n    lower = 0?_split_?encrypted_data = rncryptor.encrypt(data, password)?_split_?[tuple(map(convert, row.split('\\t'))) for row in s.splitlines()]?_split_?"}
{"nl":"How to make a Python string out of non-ascii \"bytes\"","code":"\"\"\"\"\"\".join(chr(i) for i in myintegers)","relevant":"print('  pushd: %s' % new_dir)?_split_?if r < len(triangle) - 1:\n    below_paths = all_paths(r + 1, c) + all_paths(r + 1, c + 1)?_split_?import sounddevice as sd\n\ndef callback(indata, outdata, *stuff):\n    pass?_split_?"}
{"nl":"Using inheritance in python","code":"super(Executive, self).__init__(*args)","relevant":"raise ValueError('File is empty')?_split_?with warnings.catch_warnings():\n    warnings.simplefilter('ignore', category=DeprecationWarning)?_split_?b = df.iloc[:, 1:].values\nprint(type(df))\nprint(type(a))?_split_?"}
{"nl":"Removing items from unnamed lists in Python","code":"[item for item in my_sequence if item != 'item']","relevant":"def module_path(local_function):\n    \"\"\" returns the module path without the use of __file__.  Requires a function defined\n   locally in the module.\n   from http:\/\/stackoverflow.com\/questions\/729583\/getting-file-path-of-imported-module\"\"\"\nreturn os.path.abspath(inspect.getsourcefile(local_function))?_split_?f()?_split_?def say_something(ax, words):\n    t = ax.text(0.2, 20.0, words)\nmake_a_dim_yellow_bbox(t)\n\ndef make_a_dim_yellow_bbox(txt):\n    txt.set_bbox(dict(facecolor='yellow', alpha=0.2))\nfig = plt.figure()\nax0 = fig.add_subplot(1, 2, 1)\nax1 = fig.add_subplot(1, 2, 2)\nmyhist(ax0, 'blue')\nmyhist(ax1, 'green')\nsay_something(ax0, 'this is the blue plot')\nsay_something(ax1, 'this is the green plot')\nplt.show()?_split_?"}
{"nl":"randomly select an item from a list","code":"random.choice(foo)","relevant":"def test():\n    print('OMG, it works...')\n\ndef other():\n    print('I can call multiple functions')\n\ndef fail():\n    print('You gave a bad function name.  I only know about %s' % ', '.join(\n        list(funcs.keys())))\nfuncs = {'test': test, 'other': other}\ntarget = input('Function to run? ').strip()\nfuncs.get(target, fail)()\nfunction_to_call = funcs.get(target, fail)\nfunction_to_call()?_split_?def foo(a, b, x='blah'):\n    pass\nprint(inspect.getargspec(foo))?_split_?def default(self, obj):\n    if isinstance(obj, Decimal):\n        pass?_split_?"}
{"nl":"Python Check if all of the following items is in a list","code":"set(['a', 'b']).issubset(['a', 'b', 'c'])","relevant":"values = [t[1] for t in ans]?_split_?for cols in zip(l[::3], l[1::3], l[2::3]):\n    pass?_split_?import networkx as nx?_split_?"}
{"nl":"Python Check if all of the following items is in a list","code":"set(['a', 'b']).issubset(set(l))","relevant":"values = [t[1] for t in ans]?_split_?for cols in zip(l[::3], l[1::3], l[2::3]):\n    pass?_split_?import networkx as nx?_split_?"}
{"nl":"pass a string into subprocess.Popen","code":"p = Popen(['grep', 'f'], stdout=PIPE, stdin=PIPE, stderr=STDOUT)\ngrep_stdout = p.communicate(input='one\\ntwo\\nthree\\nfour\\nfive\\nsix\\n')[0]","relevant":"fig = plt.figure()?_split_?for author in authors:\n    q &= Q(authors=author)\nBooks.objects.filter(q)?_split_?writes = csv.writer(file1, delimiter=' ', quoting=csv.QUOTE_ALL)?_split_?"}
{"nl":"pass a string into subprocess.Popen","code":"p = subprocess.Popen(['grep', 'f'], stdout=subprocess.PIPE, stdin=subprocess.PIPE)\np.stdin.write('one\\ntwo\\nthree\\nfour\\nfive\\nsix\\n')\np.communicate()[0]\np.stdin.close()","relevant":"fig = plt.figure()?_split_?for author in authors:\n    q &= Q(authors=author)\nBooks.objects.filter(q)?_split_?writes = csv.writer(file1, delimiter=' ', quoting=csv.QUOTE_ALL)?_split_?"}
{"nl":"Most pythonic way to convert a list of tuples","code":"[list(t) for t in zip(*list_of_tuples)]","relevant":"logger = logging.getLogger('eg_daemon')?_split_?variable = 'fOoBaR'\nsane_variable = variable.lower()\nif sane_variable == 'foobar':\n    do_something()?_split_?print(match.group('foo'))?_split_?"}
{"nl":"Most pythonic way to convert a list of tuples","code":"zip(*list_of_tuples)","relevant":"logger = logging.getLogger('eg_daemon')?_split_?variable = 'fOoBaR'\nsane_variable = variable.lower()\nif sane_variable == 'foobar':\n    do_something()?_split_?print(match.group('foo'))?_split_?"}
{"nl":"simple\/efficient way to expand a pandas dataframe","code":"pd.merge(y, x, on='k')[['a', 'b', 'y']]","relevant":"print('M3 called for ' + name)?_split_?new_buf.write('0' * (self.size - self.write_fp))?_split_?df.shape?_split_?"}
{"nl":"Splitting string and removing whitespace Python","code":"[item.strip() for item in my_string.split(',')]","relevant":"data = row.findAll('td')?_split_?self.map = Basemap(projection='merc', lat_0=mlat, lon_0=mlon, resolution=\n    'l', area_thresh=1.0, llcrnrlon=-num, llcrnrlat=num, urcrnrlon=-num,\n    urcrnrlat=num)\nmap.readshapefile('\/home\/person\/zipfolder\/rds\/tl_2010_48_prisecroads',\n    'Streets', drawbounds=False)?_split_?process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\nwhile True:\n    out = process.stdout.read(1)\nif out == '' and process.poll() != None:\n    break\nif out != '':\n    pass?_split_?"}
{"nl":"Get all object attributes","code":"print((obj.__dict__))","relevant":"def compute():\n    value = var.get()?_split_?sum(1 for i in range(1, len(a)) if a[i - 1] * a[i] < 0)?_split_?a = np.ones((95, 300))\nb = np.ones((95, 3)) * 2\na.shape\nb.shape\nc = np.hstack((a, b))\nc\nc.shape?_split_?"}
{"nl":"Get all object attributes","code":"dir()","relevant":"def compute():\n    value = var.get()?_split_?sum(1 for i in range(1, len(a)) if a[i - 1] * a[i] < 0)?_split_?a = np.ones((95, 300))\nb = np.ones((95, 3)) * 2\na.shape\nb.shape\nc = np.hstack((a, b))\nc\nc.shape?_split_?"}
{"nl":"Get all object attributes","code":"dir()","relevant":"def compute():\n    value = var.get()?_split_?sum(1 for i in range(1, len(a)) if a[i - 1] * a[i] < 0)?_split_?a = np.ones((95, 300))\nb = np.ones((95, 3)) * 2\na.shape\nb.shape\nc = np.hstack((a, b))\nc\nc.shape?_split_?"}
{"nl":"How to center a window with PyGObject","code":"window.set_position(Gtk.WindowPosition.CENTER)","relevant":"for i in range(len(y_hat)):\n    if y_hat[i] == 0 and y_actual != y_hat[i]:\n        FN += 1\nreturn TP, FP, TN, FN?_split_?ax = fig.add_subplot(111, polar=True)?_split_?g = parser.add_mutually_exclusive_group()?_split_?"}
{"nl":"how to change the size of the sci notation above the y axis in matplotlib?","code":"plt.rc('font', **{'size': '30'})","relevant":"res = ['123', 'hello']\nprint(res)\nprint(' '.join(res))?_split_?4?_split_?header = ''?_split_?"}
{"nl":"Python pandas: check if any value is NaN in DataFrame","code":"df.isnull().values.any()","relevant":"child._parents.add(self.name)?_split_?rslt = []\nfor x, y in points:\n    for dx, dy in offsets:\n        rslt.append((x + dx, y + dy))\nrslt?_split_?exec(compile(contents + '\\n', file, 'exec'), glob, loc)?_split_?"}
{"nl":"Python - use list as function parameters","code":"some_func(*params)","relevant":"class InstallCommand(Command):\n    description = 'Installs the foo.'\nuser_options = [('foo=', None, 'Specify the foo to bar.')]\n\ndef initialize_options(self):\n    self.foo = None\n\ndef finalize_options(self):\n    assert self.foo in (None, 'myFoo', 'myFoo2'), 'Invalid foo!'\n\ndef run(self):\n    install_all_the_things()?_split_?numbers = [1, 2, 3, 4, 5, 6]?_split_?def checkWeight(self):\n    pass?_split_?"}
{"nl":"How to decode encodeURIComponent in GAE (python)?","code":"urllib.parse.unquote(h.path.encode('utf-8')).decode('utf-8')","relevant":"f.loc[:, ('Vehicle')] = filenamearray[0].replace('veh', '')\nf.loc[:, ('Year')] = filenamearray[1].replace('year', '')\nif 'timelimit' in file:\n    f.loc[:, ('Timelimit')] = '1'\nelse:\n    f.loc[:, ('Timelimit')] = '0'\ndf_list.append(f)\nmerged = pd.concat(df_list, axis=0)\nmerged.to_csv('merged.csv')?_split_?print('Combination DataFrame:')?_split_?mechanize.install_opener(opener)?_split_?"}
{"nl":"Percentage match in pandas Dataframe","code":"(trace_df['ratio'] > 0).mean()","relevant":"import time?_split_?L2 = [['a', 'b'], ['c', 'd'], ['e', 'f']]?_split_?class MyTestCase(unittest.TestCase):\n\n    def my_special_function(self):\n        pass?_split_?"}
{"nl":"How to convert a tuple to a string in Python?","code":"emaillist = '\\n'.join(item[0] for item in queryresult)","relevant":"someX, someY = 0.5, 0.5?_split_?np.setbufsize(16384)\na = np.random.rand(91, 91)\na += a.T\nnp.all(a == a.T)?_split_?row = vectorized.getrow(i)?_split_?"}
{"nl":"How to convert a tuple to a string in Python?","code":"[item[0] for item in queryresult]","relevant":"someX, someY = 0.5, 0.5?_split_?np.setbufsize(16384)\na = np.random.rand(91, 91)\na += a.T\nnp.all(a == a.T)?_split_?row = vectorized.getrow(i)?_split_?"}
{"nl":"How to convert a tuple to a string in Python?","code":"emaillist = '\\n'.join([item[0] for item in queryresult])","relevant":"someX, someY = 0.5, 0.5?_split_?np.setbufsize(16384)\na = np.random.rand(91, 91)\na += a.T\nnp.all(a == a.T)?_split_?row = vectorized.getrow(i)?_split_?"}
{"nl":"Python get focused entry name","code":"print(('focus object class:', window2.focus_get().__class__))","relevant":"class Slug(ndb.Model):\n    pass?_split_?def close():\n    django.db.connection.connection = None\ndjango.db.connection._valid_connection = validConnection\ndjango.db.connection.close = close?_split_?d_sum = {}?_split_?"}
{"nl":"How to declare an array in python","code":"a = [0] * 10000","relevant":"struct.pack('B', 1)?_split_?print(dom.find('Body'))?_split_?x\ny\nnp.median(x, axis=0)\nnp.ma.median(y, axis=0).filled(0)?_split_?"}
{"nl":"How can I remove duplicate words in a string with Python?","code":"print(' '.join(sorted(set(words), key=words.index)))","relevant":"config = ConfigParser.ConfigParser()\nconfig.readfp(open('defaults.cfg'))?_split_?import numpy as np?_split_?def sign(x, value=1):\n    \"\"\"Mathematical signum function.\n    :param x: Object of investigation\n    :param value: The size of the signum (defaults to 1)\n    :returns: Plus or minus value\n    \"\"\"\nreturn -value if x < 0 else value\n\ndef prefix(x, dimension=1):\n    \"\"\"Give the number an appropriate SI prefix.\n    :param x: Too big or too small number.\n    :returns: String containing a number between 1 and 1000 and SI prefix.\n    \"\"\"\nif x == 0:\n    return '0  '\nl = math.floor(math.log10(abs(x)))\nif abs(l) > 24:\n    l = sign(l, value=24)\ndiv, mod = divmod(l, 3 * dimension)\nreturn '%.3g %s' % (x * 10 ** (-l + mod), ' kMGTPEZYyzafpn\\xc2\\xb5m'[div])?_split_?"}
{"nl":"How to generate random numbers that are different?","code":"random.sample(range(1, 50), 6)","relevant":"y = [max(g[1]) for g in groups]?_split_?def drop_table(self):\n    cursor = connection.cursor()?_split_?def pisum(n):\n    return 3.0 + sum([((4.0 if i & 2 == 2 else -4.0) \/ i \/ (i + 1) \/ (i + 2\n        )) for i in range(2, 2 * n + 2, 2)])?_split_?"}
{"nl":"How to generate random numbers that are different?","code":"random.sample(range(1, 50), 6)","relevant":"y = [max(g[1]) for g in groups]?_split_?def drop_table(self):\n    cursor = connection.cursor()?_split_?def pisum(n):\n    return 3.0 + sum([((4.0 if i & 2 == 2 else -4.0) \/ i \/ (i + 1) \/ (i + 2\n        )) for i in range(2, 2 * n + 2, 2)])?_split_?"}
{"nl":"Dictionary to lowercase in Python","code":"{k.lower(): v.lower() for k, v in list({'My Key': 'My Value'}.items())}","relevant":"c = 'Hello'?_split_?return iter(obj.items())?_split_?def altElement(a):\n    return a[::2]?_split_?"}
{"nl":"Dictionary to lowercase in Python","code":"dict((k.lower(), v) for k, v in {'My Key': 'My Value'}.items())","relevant":"c = 'Hello'?_split_?return iter(obj.items())?_split_?def altElement(a):\n    return a[::2]?_split_?"}
{"nl":"Dictionary to lowercase in Python","code":"dict((k.lower(), v.lower()) for k, v in {'My Key': 'My Value'}.items())","relevant":"c = 'Hello'?_split_?return iter(obj.items())?_split_?def altElement(a):\n    return a[::2]?_split_?"}
{"nl":"sorting list of list in python","code":"[sorted(item) for item in data]","relevant":"import numpy as np?_split_?def my_job(text):\n    print(text)?_split_?class UndefinedSilently(Undefined):\n    __unicode__ = silently?_split_?"}
{"nl":"Is there a way to get a list of column names in sqlite?","code":"names = list(map(lambda x: x[0], cursor.description))","relevant":"os.environ['LD_LIBRARY_PATH'] = '\/usr\/lib\/oracle\/XX.Y\/client64\/lib'?_split_?def _pprint_yourtype(self, object, stream, indent, allowance, context, level):\n    stream.write('YourType(')\nself._format(object.foo, stream, indent, allowance + 1, context, level)?_split_?cax1 = divider1.append_axes('right', size='5%', pad=0.05)?_split_?"}
{"nl":"finding out absolute path to a file from python","code":"os.path.abspath(__file__)","relevant":"a = 3\na?_split_?import os\nAPP_ROOT = os.path.dirname(os.path.abspath(__file__))?_split_?outFile.write('\\xe2\\x97\\x8f')\noutFile.close()?_split_?"}
{"nl":"how to sort 2d array by row in python?","code":"sorted(matrix, key=itemgetter(1))","relevant":"a[1].axvspan(sd, ed, alpha=0.1, color='r')?_split_?url = urlopen('http:\/\/www.test.com\/file.zip')\nzipfile = ZipFile(StringIO(url.read()))\nfor line in zipfile.open(file).readlines():\n    pass?_split_?query += 'DETACH snapshot;'?_split_?"}
{"nl":"Finding index of the same elements in a list","code":"[index for index, letter in enumerate(word) if letter == 'e']","relevant":"data = np.array([[1, 2], [2, 3], [3, 3], [4, 5], [5, 5]])?_split_?if __name__ == '__main__':\n    if sys.stdout.encoding is None:\n        print('please set python env PYTHONIOENCODING=UTF-8, example: export PYTHONIOENCODING=UTF-8, when write to stdout.', file=sys.stderr)\nexit(1)?_split_?def triangalize_1(x):\n    xs, ys = numpy.triu_indices(len(x), 1)\nreturn numpy.array([x[xs], x[ys]]).T?_split_?"}
{"nl":"How to print container object with unicode-containing values?","code":"print(str(x).decode('raw_unicode_escape'))","relevant":"for x in V:\n    pass?_split_?a\na[np.argpartition(-a, np.arange((~np.isnan(a)).sum()))]?_split_?s = '<p>blah <b>bleh<\/b> blih<\/p>\\n'?_split_?"}
{"nl":"Python regular expressions - how to capture multiple groups from a wildcard expression?","code":"re.findall('\\\\w', 'abcdefg')","relevant":"B = 0.73, 0.97, 1.0, 0.97, 0.88, 0.73, 0.54?_split_?from django.contrib.contenttypes.models import ContentType?_split_?print('Unable to get the screenshot.')?_split_?"}
{"nl":"check whether a file exists","code":"os.path.isfile(fname)","relevant":"print('{0:d}'.format(1))?_split_?image = Image.open(image_string)?_split_?object = object[:20] + '...'?_split_?"}
{"nl":"check whether a file exists","code":"my_file = Path('\/path\/to\/file')\nif my_file.is_file():\n    pass","relevant":"print('{0:d}'.format(1))?_split_?image = Image.open(image_string)?_split_?object = object[:20] + '...'?_split_?"}
{"nl":"check whether a file exists","code":"os.path.exists(file_path)","relevant":"print('{0:d}'.format(1))?_split_?image = Image.open(image_string)?_split_?object = object[:20] + '...'?_split_?"}
{"nl":"check whether a file exists","code":"print(os.path.isfile('\/etc\/password.txt'))","relevant":"print('{0:d}'.format(1))?_split_?image = Image.open(image_string)?_split_?object = object[:20] + '...'?_split_?"}
{"nl":"check whether a file exists","code":"print(os.path.isfile('\/etc'))","relevant":"print('{0:d}'.format(1))?_split_?image = Image.open(image_string)?_split_?object = object[:20] + '...'?_split_?"}
{"nl":"check whether a file exists","code":"print(os.path.exists('\/does\/not\/exist'))","relevant":"print('{0:d}'.format(1))?_split_?image = Image.open(image_string)?_split_?object = object[:20] + '...'?_split_?"}
{"nl":"check whether a file exists","code":"print(os.path.isfile('\/does\/not\/exist'))","relevant":"print('{0:d}'.format(1))?_split_?image = Image.open(image_string)?_split_?object = object[:20] + '...'?_split_?"}
{"nl":"check whether a file exists","code":"print(os.path.exists('\/etc'))","relevant":"print('{0:d}'.format(1))?_split_?image = Image.open(image_string)?_split_?object = object[:20] + '...'?_split_?"}
{"nl":"check whether a file exists","code":"print(os.path.exists('\/etc\/password.txt'))","relevant":"print('{0:d}'.format(1))?_split_?image = Image.open(image_string)?_split_?object = object[:20] + '...'?_split_?"}
{"nl":"Split Strings with Multiple Delimiters?","code":"\"\"\"a;bcd,ef g\"\"\".replace(';', ' ').replace(',', ' ').split()","relevant":"plt.contourf(grid)\npoly_verts = [(2, 2), (5, 2.5), (6, 8), (2, 2)]?_split_?def parse_datetime():\n    date1, time1 = '2012-09-08', '12:23:33'\ndate2, time2 = '2012-09-08', '12:23:33'\ndt1 = datetime.datetime.strptime(date1 + ' ' + time1, '%Y-%m-%d %H:%M:%S')\ndt2 = datetime.datetime.strptime(date2 + ' ' + time2, '%Y-%m-%d %H:%M:%S')\n(dt1 - dt2).total_seconds()\n\ndef parse_time():\n    d1 = time.strptime(date1 + ' ' + time1, '%Y-%m-%d %H:%M:%S')\nd2 = time.strptime(date2 + ' ' + time2, '%Y-%m-%d %H:%M:%S')\nseconds1 = time.mktime(d1)\nseconds2 = time.mktime(d2)\nseconds1 - seconds2?_split_?a = [0, 0, 0, 0, 0]?_split_?"}
{"nl":"Why can you loop through an implicit tuple in a for loop, but not a comprehension in Python?","code":"list(i for i in range(3))","relevant":"return {'__type__': 'decimal.Decimal', 'args': [str(obj)]}?_split_?npoints = 40000\nndims = 40\nnumpy.random.seed(1)\nX = numpy.random.random((npoints, ndims))\nw = numpy.random.random(ndims)\ny = X.dot(w) + numpy.random.random(npoints) * 0.1\nclf = sklearn.linear_model.LassoLarsCV(fit_intercept=False, normalize=False,\n    max_n_alphas=1000000.0)\nclf.fit(X, y)\nprint(max(abs(clf.coef_ - w)))\nprint(clf.alphas_.shape)?_split_?im_orange = im.copy()\nim_orange[im_hsv == 0] = 0\nelement = np.ones((5, 5)).astype(np.uint8)\nim_hsv = cv2.erode(im_hsv, element)\nim_hsv = cv2.dilate(im_hsv, element)\npoints = np.dstack(np.where(im_hsv > 0)).astype(np.float32)\ncenter, radius = cv2.minEnclosingCircle(points)\ncv2.circle(im, (int(center[1]), int(center[0])), int(radius), (255, 0, 0),\n    thickness=3)\nout = np.vstack([im_orange, im])\ncv2.imwrite('out.png', out)?_split_?"}
{"nl":"Pythonically add header to a csv file","code":"writer.writeheader()","relevant":"dct['a'] = 1\ndct['b'] = 2?_split_?x = np.arange(100)\ny = x * 0.6\nplt.scatter(x, y, c='b')\nplt.scatter(x, y - np.std(y), c='y')?_split_?a2.binaries,?_split_?"}
{"nl":"How to flatten a tuple in python","code":"[(a, b, c) for a, (b, c) in l]","relevant":"time.sleep(10)?_split_?return check_substitution(tem.replace('$ ', '$$ '), m)?_split_?point_table = [0] + [255] * 255?_split_?"}
{"nl":"Python - how to convert int to string represent a 32bit Hex number","code":"\"\"\"0x{0:08X}\"\"\".format(3652458)","relevant":"\"\"\"DRIVER%3D%7BFreeTDS%7D%3BServer%3Dmy.db.server%3BDatabase%3Dmydb%3BUID%3Dmyuser%3BPWD%3Dmypwd%3BTDS_Version%3D8.0%3BPort%3D1433%3B\"\"\"?_split_?dict_data = json.loads(venues)?_split_?self.tgtkey = self.currkey = self.currvalue = object()?_split_?"}
{"nl":"How can I convert a Python dictionary to a list of tuples?","code":"[(v, k) for k, v in list(d.items())]","relevant":"arg, val = farg.split('=')?_split_?current_child = Node.objects.get(id=child.id)\ncurrent_child.move_to(parent, 'last-child')?_split_?worksheet.set_column('D:D', 16, format3)?_split_?"}
{"nl":"How can I convert a Python dictionary to a list of tuples?","code":"[(v, k) for k, v in d.items()]","relevant":"arg, val = farg.split('=')?_split_?current_child = Node.objects.get(id=child.id)\ncurrent_child.move_to(parent, 'last-child')?_split_?worksheet.set_column('D:D', 16, format3)?_split_?"}
{"nl":"How can I convert a Python dictionary to a list of tuples?","code":"[(v, k) for k, v in a.items()]","relevant":"arg, val = farg.split('=')?_split_?current_child = Node.objects.get(id=child.id)\ncurrent_child.move_to(parent, 'last-child')?_split_?worksheet.set_column('D:D', 16, format3)?_split_?"}
{"nl":"How can I convert a Python dictionary to a list of tuples?","code":"[(k, v) for k, v in a.items()]","relevant":"arg, val = farg.split('=')?_split_?current_child = Node.objects.get(id=child.id)\ncurrent_child.move_to(parent, 'last-child')?_split_?worksheet.set_column('D:D', 16, format3)?_split_?"}
{"nl":"What's the easiest way to convert a list of hex byte strings to a list of hex integers?","code":"[int(x, 16) for x in ['BB', 'A7', 'F6', '9E']]","relevant":"im_data = im_data.reshape(im_size[0], im_size[1])\nim_data[:] = data?_split_?palette.setColor(palette.WindowText, QtGui.QColor(85, 85, 255))?_split_?print(Xnew)?_split_?"}
{"nl":"What's the easiest way to convert a list of hex byte strings to a list of hex integers?","code":"[int(x, 16) for x in L]","relevant":"im_data = im_data.reshape(im_size[0], im_size[1])\nim_data[:] = data?_split_?palette.setColor(palette.WindowText, QtGui.QColor(85, 85, 255))?_split_?print(Xnew)?_split_?"}
{"nl":"Two values from one input in python?","code":"var1, var2 = input('Enter two numbers here: ').split()","relevant":"with open('yourfile.ext', 'rb') as image_file:\n    encoded_string = base64.b64encode(image_file.read())?_split_?next(p)?_split_?ascript = \"\"\"\nset posixPath to POSIX path of {0}\n\"\"\"?_split_?"}
{"nl":"Django filter JSONField list of dicts","code":"Test.objects.filter(actions__contains=[{'fixed_key_1': 'foo2'}])","relevant":"bin(10)\n10?_split_?from selenium import webdriver\nfirefox_profile = webdriver.FirefoxProfile()\nfirefox_profile.set_preference('browser.privatebrowsing.autostart', True)\ndriver = webdriver.Firefox(firefox_profile=firefox_profile)?_split_?f_out_blg = open(fn + '_blg' + '.tsv', 'w')?_split_?"}
{"nl":"Is there a cleaner way to iterate through all binary 4-tuples?","code":"itertools.product(list(range(2)), repeat=4)","relevant":"g.parse('zot.rdf')?_split_?class MyClass(object):\n    get_next_id = itertools.count().__next__\n\ndef __init__(self):\n    self.id = self.get_next_id()?_split_?def chunker(s):\n    it = iter(s)?_split_?"}
{"nl":"Python - Get Yesterday's date as a string in YYYY-MM-DD format","code":"(datetime.now() - timedelta(1)).strftime('%Y-%m-%d')","relevant":"clean = filter(lambda x: x is not None, lis)?_split_?series = models.CharField(max_length=50)?_split_?return all(x.count(value) == number for x in lst)?_split_?"}
{"nl":"Python 3: Multiply a vector by a matrix without NumPy","code":"np.dot([1, 0, 0, 1, 0, 0], [[0, 1], [1, 1], [1, 0], [1, 0], [1, 1], [0, 1]])","relevant":"image.save(img_file, 'png')?_split_?import active_directory\nuser = active_directory.find_user(user_name)\ngroups = user.memberOf?_split_?if 'address1' in data and 'address2' in data:\n    if len(data['address1']) < 2 and len(data['address2']) < 2:\n        raise ActionExecutionError(Invalid(_(\n            'Please provide a valid address')))\nelif len(data['address1']) < 2 and len(data['address2']) > 10:\n    raise WidgetActionExecutionError('address2', Invalid(\n        'Please put the main part of the address in the first field'))\nif errors:\n    self.status = self.formErrorsMessage\nreturn?_split_?"}
{"nl":"Parse_dates in Pandas","code":"df['date'] = pd.to_datetime(df['date'], format='%d%b%Y')","relevant":"return [d1[key] for key in set(d1) - set(d2)]?_split_?x['b']\nx['ji']\nx['hi']?_split_?table_name = 'Table'\ncur.executemany('INSERT INTO %s VALUES(%s)' % (table_name, wildcards), data)\nconn.commit()?_split_?"}
{"nl":"Importing files from different folder","code":"sys.path.insert(0, '\/path\/to\/application\/app\/folder')\nimport file","relevant":"for dummy in range(8):\n    yield i & 1\ni >>= 1\n\ndef bits_from_data(data):\n    for c in data:\n        pass?_split_?class Customer(Base):\n    pass?_split_?lists = [['slide1', 'slide2', 'slide3', 'slide4'], [1, 2, 3, 4], ['banana',\n    'apple', 'pear', 'orange']]\nslides = [list(slide) for slide in zip(*lists)]?_split_?"}
{"nl":"How can a pandas merge preserve order?","code":"x.reset_index().merge(y, how='left', on='state', sort=False).sort('index')","relevant":"x = array([[3, 20, 11], [6, 2, 7], [18, 2, 17], [11, 12, 19], [7, 20, 6]])?_split_?run_main_loop = True?_split_?6?_split_?"}
{"nl":"How can i create the empty json object in python","code":"json.loads(request.POST.get('mydata', '{}'))","relevant":"from sklearn.metrics import f1_score?_split_?x = 0?_split_?params.append(evaluate(child))?_split_?"}
{"nl":"Slicing a list into a list of sub-lists","code":"list(zip(*((iter([1, 2, 3, 4, 5, 6, 7, 8, 9]),) * 3)))","relevant":"document.getElementById('f1').style.display = 'block'?_split_?h = d.hour + d.minute \/ 60.0 + d.second \/ 3600.0?_split_?for i, n in enumerate(p):\n    poly += n * x ** i\nreturn poly\nx = numpy.linspace(0.0, numpy.pi)\ny = numpy.cos(x) + 0.05 * numpy.random.normal(size=len(x))\np0 = numpy.ones(6)\ncoeff, var_matrix = curve_fit(_polynomial, x, y, p0=p0)\nyfit = [_polynomial(xx, *tuple(coeff)) for xx in x]\nplt.plot(x, y, label='Test data')\nplt.plot(x, yfit, label='fitted data')\nplt.show()?_split_?"}
{"nl":"Slicing a list into a list of sub-lists","code":"list(grouper(2, [1, 2, 3, 4, 5, 6, 7]))","relevant":"document.getElementById('f1').style.display = 'block'?_split_?h = d.hour + d.minute \/ 60.0 + d.second \/ 3600.0?_split_?for i, n in enumerate(p):\n    poly += n * x ** i\nreturn poly\nx = numpy.linspace(0.0, numpy.pi)\ny = numpy.cos(x) + 0.05 * numpy.random.normal(size=len(x))\np0 = numpy.ones(6)\ncoeff, var_matrix = curve_fit(_polynomial, x, y, p0=p0)\nyfit = [_polynomial(xx, *tuple(coeff)) for xx in x]\nplt.plot(x, y, label='Test data')\nplt.plot(x, yfit, label='fitted data')\nplt.show()?_split_?"}
{"nl":"Slicing a list into a list of sub-lists","code":"[input[i:i + n] for i in range(0, len(input), n)]","relevant":"document.getElementById('f1').style.display = 'block'?_split_?h = d.hour + d.minute \/ 60.0 + d.second \/ 3600.0?_split_?for i, n in enumerate(p):\n    poly += n * x ** i\nreturn poly\nx = numpy.linspace(0.0, numpy.pi)\ny = numpy.cos(x) + 0.05 * numpy.random.normal(size=len(x))\np0 = numpy.ones(6)\ncoeff, var_matrix = curve_fit(_polynomial, x, y, p0=p0)\nyfit = [_polynomial(xx, *tuple(coeff)) for xx in x]\nplt.plot(x, y, label='Test data')\nplt.plot(x, yfit, label='fitted data')\nplt.show()?_split_?"}
{"nl":"Sorting numbers in string format with Python","code":"keys.sort(key=lambda x: map(int, x.split('.')))","relevant":"import sqlalchemy.ext.declarative?_split_?super(Node, self).__init__()?_split_?[[1, 2, 3], [4, 5, 6], [7, 8, 9]]?_split_?"}
{"nl":"Sorting numbers in string format with Python","code":"keys.sort(key=lambda x: [int(y) for y in x.split('.')])","relevant":"import sqlalchemy.ext.declarative?_split_?super(Node, self).__init__()?_split_?[[1, 2, 3], [4, 5, 6], [7, 8, 9]]?_split_?"}
{"nl":"numpy with python: convert 3d array to 2d","code":"img.transpose(2, 0, 1).reshape(3, -1)","relevant":"MyApp().run()?_split_?False == 0?_split_?prevnode.left == node.right?_split_?"}
{"nl":"Replacing few values in a pandas dataframe column with another value","code":"df['BrandName'].replace(['ABC', 'AB'], 'A')","relevant":"top_points = r['fliers'][0].get_data()[1]\nbottom_points = r['fliers'][2].get_data()[1]\nplot(np.ones(len(top_points)), top_points, 'x', color='blue', markersize=1)?_split_?break?_split_?import re\nstring = '  blah, lots  ,  of ,  spaces, here '?_split_?"}
{"nl":"Replacing few values in a pandas dataframe column with another value","code":"df['BrandName'] = df['BrandName'].replace(['ABC', 'AB'], 'A')","relevant":"top_points = r['fliers'][0].get_data()[1]\nbottom_points = r['fliers'][2].get_data()[1]\nplot(np.ones(len(top_points)), top_points, 'x', color='blue', markersize=1)?_split_?break?_split_?import re\nstring = '  blah, lots  ,  of ,  spaces, here '?_split_?"}
{"nl":"Pandas: Subtract row mean from each element in row","code":"df.sub(df.mean(axis=1), axis=0)","relevant":"lines += file('2.txt').readlines()[1:]\nlines.sort(key=lambda x: int(x.split()[0]))?_split_?f()\nf()\nf()?_split_?m1 = (pt1.getY() - pt1.getY()) \/ 1?_split_?"}
{"nl":"Python, remove all non-alphabet chars from string","code":"\"\"\"\"\"\".join([i for i in s if i.isalpha()])","relevant":"df['col_2'] = pd.cut(df.col_1, [0, 4, 10, np.inf], labels=['<=4', '(4,10]',\n    '>10'])\ndf?_split_?print('Time elapsed: ' + str(time() - t) + ' s.')?_split_?col_nonzeros = np.bincount(m.indices)?_split_?"}
{"nl":"How to split a string into integers in Python?","code":"l = (int(x) for x in s.split())","relevant":"for i in sorted(indices, reverse=True):\n    pass?_split_?somList.append(chr(b))?_split_?d3 = d1 - d2?_split_?"}
{"nl":"How to split a string into integers in Python?","code":"\"\"\"42 0\"\"\".split()","relevant":"for i in sorted(indices, reverse=True):\n    pass?_split_?somList.append(chr(b))?_split_?d3 = d1 - d2?_split_?"}
{"nl":"How to split a string into integers in Python?","code":"map(int, '42 0'.split())","relevant":"for i in sorted(indices, reverse=True):\n    pass?_split_?somList.append(chr(b))?_split_?d3 = d1 - d2?_split_?"}
{"nl":"Get the indexes of truthy elements of a boolean list as a list\/tuple","code":"[i for i, elem in enumerate(bool_list, 1) if elem]","relevant":"thread = threading.Thread(target=server.serve_forever)?_split_?print('np.dot: {:.2f} seconds taken'.format(time_dot))?_split_?np.array([(k, np.array(list(g), dtype=grades.dtype).view(np.recarray)[\n    'score'].mean()) for k, g in groupby(np.sort(grades, order='student').\n    view(np.recarray), itemgetter('student'))], dtype=grades.dtype)?_split_?"}
{"nl":"How to group pandas DataFrame entries by date in a non-unique column","code":"data.groupby(data['date'].map(lambda x: x.year))","relevant":"Fruits = {'apple': 8, 'banana': 3, 'lemon': 5, 'pineapple': 2}?_split_?{{sec.books.count}}?_split_?gvkey = 12345?_split_?"}
{"nl":"Getting the indices of several elements in a NumPy array at once","code":"np.in1d(b, a).nonzero()[0]","relevant":"msg = MIMEMultipart()\nmsg['Subject'] = 'subject'?_split_?reader = csv.reader(csvfile, delimiter=',')?_split_?class Cache(models.Model):\n    product = models.ForeignKey(Product)?_split_?"}
{"nl":"In Python, how to display current time in readable format","code":"time.strftime('%l:%M%p %z on %b %d, %Y')","relevant":"import json\ndata = open('\/static\/prices.json').read()\njsonData = json.dumps(data)?_split_?name = db.StringProperty()?_split_?result = []?_split_?"}
{"nl":"Rotate axis text in python matplotlib","code":"ax.set_xticklabels(ax.xaxis.get_majorticklabels(), rotation=45)","relevant":"body = {'name': file_name, 'mimeType': 'application\/vnd.google-apps.document'}\nmedia = MediaFileUpload('test.html', mimetype='text\/html')\nfiahl = drive_api.files().create(body=body, media_body=media).execute()\nprint(\"Created file '%s' id '%s'.\" % (fiahl.get('name'), fiahl.get('id')))?_split_?etree.fromstring(f.read(), xmlparser)?_split_?rtpinterpolator = scipy.interpolate.linearNDInterpolate(coordppoints,\n    density.flat)\n\ndef xyz2rtp(x, y, z):\n    r = scipy.sqrt(x ** 2 + y ** 2 + z ** 2)\nt = scipy.acos(z \/ r)\np = scipy.atan2(y, x)\nreturn r, t, p\nval = rtpinterpolator(xyz2rtp(x, y, z))?_split_?"}
{"nl":"How does python do string magic?","code":"\"\"\"\"\"\".join(['x', 'x', 'x'])","relevant":"button = Button(label='Click to add a button', button_type='success')\nbutton.on_click(add_button)\nlayout = layout([[button]])\ncurdoc().add_root(layout)?_split_?def __nonzero__(self):\n    pass?_split_?for x in zip(*lis):\n    pass?_split_?"}
{"nl":"Array indexing in numpy","code":"x[(np.arange(x.shape[0]) != 1), :, :]","relevant":"y_coord = y?_split_?lock = Lock()?_split_?def lst2dct(lst):\n    return lst if not isinstance(lst, list) else {k: lst2dct(v) for e in\n        lst for k, v in list(e.items())}?_split_?"}
{"nl":"How do I pull a recurring key from a JSON?","code":"print(item['name'])","relevant":"0, 1, 10\n0, 10, 1?_split_?return response?_split_?savepos = f.tell()?_split_?"}
{"nl":"Read a File from redirected stdin with python","code":"result = sys.stdin.read()","relevant":"VARIABLE12?_split_?a, b = b, a + b\nprint(sum(a for a in fibonacci_iter(4000000.0) if not a & 1))?_split_?print(pd.merge(B.reset_index(), A)['index'])?_split_?"}
{"nl":"How to get the content of a Html page in Python","code":"\"\"\"\"\"\".join(soup.findAll(text=True))","relevant":"lists = files.readlines()\ngrades = []?_split_?out.write(line.replace(LASTKNOWN, CURRENT))?_split_?assert np.allclose(beta, beta2)?_split_?"}
{"nl":"Extracting all rows from pandas Dataframe that have certain value in a specific column","code":"data[data['Value'] == True]","relevant":"for i in range(len(rgb_values) - 1):\n    if rgb_values[i] == rgb_values[i + 1]:\n        pass?_split_?'are to be scrawled', 'are', 'spotless paper when', 'white a sheet of'?_split_?bin_edges = np.arange(A[0].min(), A[0].max() + 2, dtype=np.int)?_split_?"}
{"nl":"Removing duplicate characters from a string","code":"\"\"\"\"\"\".join(set(foo))","relevant":"entity = json.loads(data)?_split_?import pandas as pd\nv = [[1], [1, 2]]\nprint(pd.DataFrame(v).fillna(0).values.astype(np.int32))?_split_?remove_even([4, 5, 4, 7, 9, 11])\n[5, 7, 9, 11]?_split_?"}
{"nl":"how to sort by a computed value in django","code":"sorted(Profile.objects.all(), key=lambda p: p.reputation)","relevant":"s.append(ALPHABET[r])?_split_?d = datetime.datetime.strptime('01-01-1904', '%m-%d-%Y')\nd\nd + datetime.timedelta(seconds=3453120824)\n(d + datetime.timedelta(seconds=3453120824)).strftime(\n    '%a, %d %b %Y %H:%M:%S GMT')?_split_?time.sleep(probe_interval)?_split_?"}
{"nl":"python pandas flatten a dataframe to a list","code":"df.values.flatten()","relevant":"for k, v in list(item.items()):\n    pairs.append((k, v))\nreturn sorted(pairs)?_split_?for idx in range(1024 + 1):\n    outfd, outsock_path = tempfile.mkstemp()\noutsock = os.fdopen(outfd, 'w')?_split_?list2 = [[5, 2, 9, 3, 7], [1, 3, 5, 2, 2]]?_split_?"}
{"nl":"how do I sort a python list of dictionaries given a list of ids with the desired order?","code":"users.sort(key=lambda x: order.index(x['id']))","relevant":"use_question(id)?_split_?import matplotlib.pyplot as plt\nimport numpy as np\nimport itertools\n\ndef flip(items, ncol):\n    return itertools.chain(*[items[i::ncol] for i in range(ncol)])\nx = np.arange(-2 * np.pi, 2 * np.pi, 0.1)\nax = plt.subplot(111)\nax.plot(x, np.sin(x), label='Sine')\nax.plot(x, np.cos(x), label='Cosine')\nax.plot(x, np.arctan(x), label='Inverse tan')\nhandles, labels = ax.get_legend_handles_labels()\nplt.legend(flip(handles, 2), flip(labels, 2), loc=9, ncol=2)\nplt.grid('on')\nplt.show()?_split_?loop = asyncio.get_event_loop()\nloop.run_until_complete(main())?_split_?"}
{"nl":"how do I sort a python list of dictionaries given a list of ids with the desired order?","code":"users.sort(key=lambda x: order.index(x['id']))","relevant":"use_question(id)?_split_?import matplotlib.pyplot as plt\nimport numpy as np\nimport itertools\n\ndef flip(items, ncol):\n    return itertools.chain(*[items[i::ncol] for i in range(ncol)])\nx = np.arange(-2 * np.pi, 2 * np.pi, 0.1)\nax = plt.subplot(111)\nax.plot(x, np.sin(x), label='Sine')\nax.plot(x, np.cos(x), label='Cosine')\nax.plot(x, np.arctan(x), label='Inverse tan')\nhandles, labels = ax.get_legend_handles_labels()\nplt.legend(flip(handles, 2), flip(labels, 2), loc=9, ncol=2)\nplt.grid('on')\nplt.show()?_split_?loop = asyncio.get_event_loop()\nloop.run_until_complete(main())?_split_?"}
{"nl":"Python requests library how to pass Authorization header with single token","code":"r = requests.get('<MY_URI>', headers={'Authorization': 'TOK:<MY_TOKEN>'})","relevant":"def send_email(to, subject, template, **kwargs):\n    app = current_app._get_current_object()?_split_?import sys\nimport os\nsys.path.append(os.path.join(os.path.dirname(os.path.realpath(__file__)),\n    'submodFolder'))\nimport submod?_split_?print(proc.pid)\nproc.wait()?_split_?"}
{"nl":"How do I un-escape a backslash-escaped string in python?","code":"print('\"Hello,\\\\nworld!\"'.decode('string_escape'))","relevant":"fig = pylab.figure()\nax = fig.add_subplot(1, 1, 1)?_split_?class CustomerSerializer(serializers.Serializer):\n    pass?_split_?u_ode = odeint(f, u_dft[0], t)[:, (0)]?_split_?"}
{"nl":"Can I have a non-greedy regex with dotall?","code":"re.findall('a*?bc*?', 'aabcc', re.DOTALL)","relevant":"session_key = '8cae76c505f15432b48c8292a7dd0e54'\nsession = Session.objects.get(session_key=session_key)\nuid = session.get_decoded().get('_auth_user_id')\nuser = User.objects.get(pk=uid)\nprint(user.username, user.get_full_name(), user.email)?_split_?s.find('r')?_split_?def __init__(self):\n    self.lock = multiprocessing.Lock()?_split_?"}
{"nl":"python\/numpy: how to get 2D array column length?","code":"a.shape[1]","relevant":"setp(ax1.get_xticklabels(), fontsize=6)?_split_?while True:\n    s = stdin.readline()?_split_?for a in soup.findAll('a'):\n    p = Tag(soup, 'p')\na.replaceWith(p)\np.insert(0, a)?_split_?"}
{"nl":"Adding calculated column(s) to a dataframe in pandas","code":"d.apply(lambda row: min([row['A'], row['B']]) - row['C'], axis=1)","relevant":"print('{:20} {:25} {}'.format(name, repr(type(x)), len(x)))?_split_?self.out_file.write(x + '\/n')?_split_?class MyErrors(enum.Enum):\n    \"\"\"Indicates some unknown error.\"\"\"\nAPI_ERROR = 1?_split_?"}
{"nl":"Count number of occurrences of a given substring in a string","code":"\"\"\"abcdabcva\"\"\".count('ab')","relevant":"if __name__ == '__main__':\n    pool = Pool(4)?_split_?def __init__(self, target):\n    self.target = target?_split_?yield 'String %d' % i\n\ndef SmallGenerator():\n    return GeneratorFunction(3)\nfor s in SmallGenerator():\n    pass?_split_?"}
{"nl":"Get a list of values from a list of dictionaries in python","code":"[d['key'] for d in l if 'key' in d]","relevant":"print('{:>15}: {:<30}'.format(ch.tag, ch.text))?_split_?repr(0.1)?_split_?def incremental_range(start, stop, step, inc):\n    value = start\nwhile value < stop:\n    yield value\nvalue += step\nstep += inc\nlist(incremental_range(0, 20, 1, 1))\n[0, 1, 3, 6, 10, 15]?_split_?"}
{"nl":"Get a list of values from a list of dictionaries in python","code":"[d['key'] for d in l]","relevant":"print('{:>15}: {:<30}'.format(ch.tag, ch.text))?_split_?repr(0.1)?_split_?def incremental_range(start, stop, step, inc):\n    value = start\nwhile value < stop:\n    yield value\nvalue += step\nstep += inc\nlist(incremental_range(0, 20, 1, 1))\n[0, 1, 3, 6, 10, 15]?_split_?"}
{"nl":"Get a list of values from a list of dictionaries in python","code":"[d['key'] for d in l]","relevant":"print('{:>15}: {:<30}'.format(ch.tag, ch.text))?_split_?repr(0.1)?_split_?def incremental_range(start, stop, step, inc):\n    value = start\nwhile value < stop:\n    yield value\nvalue += step\nstep += inc\nlist(incremental_range(0, 20, 1, 1))\n[0, 1, 3, 6, 10, 15]?_split_?"}
{"nl":"How to order a list of lists by the first value","code":"l1.sort(key=lambda x: int(x[0]))","relevant":"pygtk.require('2.0')?_split_?hog = cv2.HOGDescriptor()\nim = cv2.imread(sample)\nh = hog.compute(im)?_split_?for value in sortdict(mydict):\n    pass?_split_?"}
{"nl":"How to order a list of lists by the first value","code":"sorted([[1, 'mike'], [1, 'bob']])","relevant":"pygtk.require('2.0')?_split_?hog = cv2.HOGDescriptor()\nim = cv2.imread(sample)\nh = hog.compute(im)?_split_?for value in sortdict(mydict):\n    pass?_split_?"}
{"nl":"case sensitive string replacement in Python","code":"\"\"\"Abc\"\"\".translate(maketrans('abcABC', 'defDEF'))","relevant":"ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\nssh.connect('first.com', username='luser', password='secret')?_split_?os.chmod(filename, stat.S_IWUSR)\nos.remove(filename)?_split_?pd.set_option('display.height', 500)?_split_?"}
{"nl":"python: dictionary to string, custom format?","code":"\"\"\"<br\/>\"\"\".join([('%s:: %s' % (key, value)) for key, value in list(d.items())])","relevant":"L2 = [1, 2]?_split_?for i in range(len(list)):\n    pass?_split_?s = pd.Series([2, 1], index=list('ab'))\ns?_split_?"}
{"nl":"how to write a unicode csv in Python 2.7","code":"self.writer.writerow([str(s).encode('utf-8') for s in row])","relevant":"rgb = raw.postprocess()\nimageio.imsave('default.tiff', rgb)?_split_?path_res = path_dir + 'Results\\\\'?_split_?self.runner.readyReadStandardError.connect(self.newErrInfo)?_split_?"}
{"nl":"how to clear the screen in python","code":"os.system('cls')","relevant":"cols = set(chain(*list(d.values())))?_split_?logger.addHandler(ch)?_split_?with open('orders.csv', 'wb') as fin:\n    writer = csv.writer(fin)\nfor row in orders_matrix:\n    pass?_split_?"}
{"nl":"how to clear the screen in python","code":"os.system('clear')","relevant":"cols = set(chain(*list(d.values())))?_split_?logger.addHandler(ch)?_split_?with open('orders.csv', 'wb') as fin:\n    writer = csv.writer(fin)\nfor row in orders_matrix:\n    pass?_split_?"}
{"nl":"In python 2.4, how can I execute external commands with csh instead of bash?","code":"os.system('tcsh your_own_script')","relevant":"self.callback(fail)?_split_?from django.test import TestCase\n\n\nclass ExceptionTest(TestCase):\n\n    def test_call_raises_exception_with_custom_message(self):\n        with self.assertRaisesMessage(Exception, 'My custom message!'):\n            call_that_causes_exception()?_split_?def getItemsAvailable(section):\n    for item, value in config.items(section):\n        yield item, value?_split_?"}
{"nl":"In python 2.4, how can I execute external commands with csh instead of bash?","code":"os.system(\"zsh -c 'echo $0'\")","relevant":"self.callback(fail)?_split_?from django.test import TestCase\n\n\nclass ExceptionTest(TestCase):\n\n    def test_call_raises_exception_with_custom_message(self):\n        with self.assertRaisesMessage(Exception, 'My custom message!'):\n            call_that_causes_exception()?_split_?def getItemsAvailable(section):\n    for item, value in config.items(section):\n        yield item, value?_split_?"}
{"nl":"Updating a list of python dictionaries with a key, value pair from another list","code":"[dict(d, count=n) for d, n in zip(l1, l2)]","relevant":"L = [list('ABCDE') for i in range(5)]?_split_?root.geometry('%dx%d+%d+%d' % (width, height, x, y))?_split_?L = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]?_split_?"}
{"nl":"sum each value in a list of tuples","code":"[sum(x) for x in zip(*l)]","relevant":"for test in tests:\n    result = re.match(identifier, test)\nprint('%s\\t= %s' % (test, result is not None))?_split_?return dt + datetime.timedelta(0, rounding - seconds, -dt.microsecond)?_split_?from scipy.stats import norm\nP = 0.3456\na = 3.0\na_sigma = float(norm.ppf(P \/ 2 + 0.5))\nsigma = a \/ a_sigma?_split_?"}
{"nl":"sum each value in a list of tuples","code":"map(sum, zip(*l))","relevant":"for test in tests:\n    result = re.match(identifier, test)\nprint('%s\\t= %s' % (test, result is not None))?_split_?return dt + datetime.timedelta(0, rounding - seconds, -dt.microsecond)?_split_?from scipy.stats import norm\nP = 0.3456\na = 3.0\na_sigma = float(norm.ppf(P \/ 2 + 0.5))\nsigma = a \/ a_sigma?_split_?"}
{"nl":"Counting the number of non-NaN elements in a numpy ndarray matrix in Python","code":"np.count_nonzero(~np.isnan(data))","relevant":"old_attrs = termios.tcgetattr(sys.stdin)?_split_?imap_instance.uid('store', uid, '+FLAGS', '\\\\Deleted')?_split_?Yr = int(current_date[7:11])?_split_?"}
{"nl":"Python: transform a list of lists of tuples","code":"map(list, zip(*main_list))","relevant":"print('You are OK')?_split_?df.a.plot(kind='hist', ax=ax1)?_split_?class DuplicateFilter(object):\n\n    def __init__(self):\n        self.msgs = set()\n\ndef filter(self, record):\n    rv = record.msg not in self.msgs\nself.msgs.add(record.msg)\nreturn rv\ndup_filter = DuplicateFilter()\nlogger.addFilter(dup_filter)\nfor i in range(10):\n    pass?_split_?"}
{"nl":"Django - taking values from POST request","code":"request.POST.get('title', '')","relevant":"if re.match('^[a-z0-9_]{1,8}@[a-z0-9_]{1,8}\\\\.com$', address, re.IGNORECASE):\n    pass?_split_?self.dependency.__exit__(exc_type, exc_val, exc_tb)?_split_?threading._active[gettid()] = threading._active.pop(current.ident)?_split_?"}
{"nl":"Check if string ends with one of the strings from a list","code":"\"\"\"test.mp3\"\"\".endswith(('.mp3', '.avi'))","relevant":"server.sendmail(FROM, TO, message)?_split_?return g?_split_?lines = open(path, 'rb').readlines()\nif lines and 'import sys' in lines[0]:\n    open(path, 'wb').write(''.join(lines[1:-1]) + '\\n')?_split_?"}
{"nl":"Splitting strings in python","code":"re.findall('\\\\[[^\\\\]]*\\\\]|\"[^\"]*\"|\\\\S+', s)","relevant":"help = 'A directory to add to the Python path, e.g.'?_split_?logging.FileHandler.__init__(self, filename, mode, encoding, delay)?_split_?TotalDiskSpaceUsed?_split_?"}
{"nl":"Get top biggest values from each column of the pandas.DataFrame","code":"data.apply(lambda x: sorted(x, 3))","relevant":"['a', 'b', 'c']?_split_?from sqlalchemy.orm import scoped_session\nfrom sqlalchemy.orm import sessionmaker\nsession_factory = sessionmaker(bind=some_engine)\nSession = scoped_session(session_factory)\nsome_session = Session()?_split_?backward = lambda t: t[-1] + backward(t[:-1]) if t else t?_split_?"}
{"nl":"How do I permanently set the current directory to the Desktop in Python?","code":"os.chdir('C:\/Users\/Name\/Desktop')","relevant":"15?_split_?line2 = \"['def','efg']\"\nline3 = \"['f']\"\nline4 = \"['g']\"\nSumLine = []\nfor x in (line1, line2, line3, line4):\n    SumLine.extend(ast.literal_eval(x))\nprint(SumLine)?_split_?br.form['password'] = 'password.'?_split_?"}
{"nl":"getting string between 2 characters in python","code":"re.findall('\\\\$([^$]*)\\\\$', string)","relevant":"keep_names = [name for name in dt.names if name not in names]?_split_?your_data = {'foo': 'bar'}?_split_?print('Upload Error:', uploadr[0])?_split_?"}
{"nl":"getting string between 2 characters in python","code":"re.findall('\\\\$(.*?)\\\\$', '$sin (x)$ is an function of x')","relevant":"keep_names = [name for name in dt.names if name not in names]?_split_?your_data = {'foo': 'bar'}?_split_?print('Upload Error:', uploadr[0])?_split_?"}
{"nl":"how to format date in ISO using python?","code":"datetime.datetime.strptime(str_date, '%m\/%d\/%Y').date().isoformat()","relevant":"class Foo(models.Model):\n    description = models.TextField()\n\n@property\ndef short_description(self):\n    pass?_split_?def __init__(self, car, cdr):\n    pass?_split_?a.add_child(a)?_split_?"}
{"nl":"Selecting specific column in each row from array","code":"A[[0, 1], [0, 1]]","relevant":"def f():\n    pass?_split_?p, code = raw_compile(r, re.DOTALL)?_split_?from email.mime.text import MIMEText?_split_?"}
{"nl":"Selecting specific column in each row from array","code":"a[np.arange(3), (0, 1, 0)]","relevant":"def f():\n    pass?_split_?p, code = raw_compile(r, re.DOTALL)?_split_?from email.mime.text import MIMEText?_split_?"}
{"nl":"Counting values in dictionary","code":"[k for k, v in dictA.items() if v.count('duck') > 1]","relevant":"with open('\/path\/to\/some\/file\/you\/want\/to\/read') as file_1:\n    with open('\/path\/to\/some\/file\/being\/written', 'w') as file_2:\n        file_2.write(file_1.read())?_split_?plt.plot(a, b, 'g', linewidth=3.5, label='a')\nplt.rc('text', usetex=True)\nplt.legend(labelspacing=1.0, loc=1, prop={'size': 40})\nplt.xlabel(\n    '{\\\\fontsize{50pt}{3em}\\\\selectfont{}a}{\\\\fontsize{20pt}{3em}\\\\selectfont{}N'\n    )?_split_?pass?_split_?"}
{"nl":"Sub matrix of a list of lists (without numpy)","code":"[[2, 3, 4], [2, 3, 4], [2, 3, 4]]","relevant":"clr.AddReference('Microsoft.PowerBI.Amo')?_split_?def get_quote(symbol):\n    base_url = 'http:\/\/finance.google.com\/finance?q='\ncontent = urllib.request.urlopen(base_url + symbol).read()\nm = re.search('id=\"ref_694653_l\".*?>(.*?)<', content)\nif m:\n    quote = m.group(1)\nelse:\n    quote = 'no quote available for: ' + symbol\nreturn quote?_split_?store = pd.HDFStore('compiled_measurements.h5')\nfor filepath in file_iterator:\n    raw = pd.read_csv(filepath)\nstore.append('measurements', raw, index=False)\nstore.create_table_index('measurements', columns=['a', 'b', 'c'], optlevel=\n    9, kind='full')\nstore.close()?_split_?"}
{"nl":"How to call an element in an numpy array?","code":"print(arr[1, 1])","relevant":"m = email.message_from_string(email_body)?_split_?User_id\n(10)[John, Jen]?_split_?return int(base * round(float(x) \/ base))?_split_?"}
{"nl":"Setting matplotlib colorbar range","code":"quadmesh.set_clim(vmin=0, vmax=15)","relevant":"tsv_reader = csv.reader(open(tsv_file, 'rb'), delimiter='\\t')\nfor row, data in enumerate(tsv_reader):\n    worksheet.write_row(row, 0, data)?_split_?r = requests.get('https:\/\/github.com\/timeline.json', stream=True)\nr.raw?_split_?longitude = data['longitude']?_split_?"}
{"nl":"read csv into record array in numpy","code":"my_data = genfromtxt('my_file.csv', delimiter=',')","relevant":"x, y = index[0], index[1]?_split_?wells = models.ManyToManyField(Well, null=True)\nuuid = UUIDField(editable=False, blank=True, version=4, unique=True)?_split_?YourObject.id.generation_time?_split_?"}
{"nl":"read csv into record array in numpy","code":"df = pd.read_csv('myfile.csv', sep=',', header=None)","relevant":"x, y = index[0], index[1]?_split_?wells = models.ManyToManyField(Well, null=True)\nuuid = UUIDField(editable=False, blank=True, version=4, unique=True)?_split_?YourObject.id.generation_time?_split_?"}
{"nl":"read csv into record array in numpy","code":"np.genfromtxt('myfile.csv', delimiter=',')","relevant":"x, y = index[0], index[1]?_split_?wells = models.ManyToManyField(Well, null=True)\nuuid = UUIDField(editable=False, blank=True, version=4, unique=True)?_split_?YourObject.id.generation_time?_split_?"}
{"nl":"read csv into record array","code":"np.genfromtxt('myfile.csv', delimiter=',', dtype=None)","relevant":"assert f([[30, 70], [25, 40]]) == [[25, 40]]?_split_?if 'entries' in result:\n    pass?_split_?s = '\\n\\t'?_split_?"}
{"nl":"How do I read the first line of a string?","code":"my_string.splitlines()[0]","relevant":"nx.draw_networkx_labels(G, pos, labels=node_labels)?_split_?v = urllib.parse.quote(str(v), safe=' \/+')?_split_?PyErr_Clear()?_split_?"}
{"nl":"How do I read the first line of a string?","code":"my_string.split('\\n', 1)[0]","relevant":"nx.draw_networkx_labels(G, pos, labels=node_labels)?_split_?v = urllib.parse.quote(str(v), safe=' \/+')?_split_?PyErr_Clear()?_split_?"}
{"nl":"How to generate a list from a pandas DataFrame with the column name and column values?","code":"df.values.tolist()","relevant":"['11', '12221\\n']?_split_?a = [1, 2, 3]?_split_?self.referer = request.META.get('HTTP_REFERER', None)?_split_?"}
{"nl":"How to replace repeated instances of a character with a single instance of that character in python","code":"re.sub('\\\\*\\\\*+', '*', text)","relevant":"plt.figure(figsize=(12, 6))\nmap = Basemap()\nmap.drawcoastlines()\nmap.plot()?_split_?for i, item in enumerate(commaItems[:-1]):\n    if i % 6 == 0:\n        pass?_split_?zipinfo.external_attr |= 493 << 16?_split_?"}
{"nl":"How to replace repeated instances of a character with a single instance of that character in python","code":"re.sub('\\\\*+', '*', text)","relevant":"plt.figure(figsize=(12, 6))\nmap = Basemap()\nmap.drawcoastlines()\nmap.plot()?_split_?for i, item in enumerate(commaItems[:-1]):\n    if i % 6 == 0:\n        pass?_split_?zipinfo.external_attr |= 493 << 16?_split_?"}
{"nl":"Multiplying values from two different dictionaries together in Python","code":"dict((k, v * dict2[k]) for k, v in list(dict1.items()) if k in dict2)","relevant":"fig, axes = plt.subplots((2, 2))\narr = [6, 4, 2, 1]\nfor i in range(len(arr)):\n    if i < 2:\n        axes[0][i].bar(i, delivery[delivery['batsman_runs'] == arr[i]].\n            batsman.value_counts()[:10], 0.8)\nelse:\n    axes[1][i - 2].bar(i, delivery[delivery['batsman_runs'] == arr[i]].\n        batsman.value_counts()[:10], 0.8)?_split_?mat = cv.CreateMat(3, 5, cv.CV_32FC1)?_split_?import numpy as np\ns = pd.Series(list('babca'))?_split_?"}
{"nl":"Random strings in Python","code":"return ''.join(random.choice(string.lowercase) for i in range(length))","relevant":"X = array([[0.44, 0.68], [0.99, 0.23]])\nvector = [109.85, 155.72]\npredict = [0.49, 0.18]\npoly = PolynomialFeatures(degree=2)\nX_ = poly.fit_transform(X)\npredict_ = poly.fit_transform(predict)\nX_ = delete(X_, 1, axis=1)\npredict_ = delete(predict_, 1, axis=1)\nclf = linear_model.LinearRegression()\nclf.fit(X_, vector)\nprint(('X_ = ', X_))\nprint(('predict_ = ', predict_))\nprint(('Prediction = ', clf.predict(predict_)))?_split_?sorted(list(d.items()), lambda a, b: b[1] - a[1] or a[0] - b[0])?_split_?\"\"\"\"\"\".join(x)?_split_?"}
{"nl":"How to count all elements in a nested dictionary?","code":"sum(len(x) for x in list(food_colors.values()))","relevant":"a.loc[hit.index.values, 'target_hit'] = targetHit.index.values?_split_?b = int(a)?_split_?x = np.array(['hello', 'snake', 'plate'], dtype=str)?_split_?"}
{"nl":"How to count all elements in a nested dictionary?","code":"sum(len(v) for v in food_colors.values())","relevant":"a.loc[hit.index.values, 'target_hit'] = targetHit.index.values?_split_?b = int(a)?_split_?x = np.array(['hello', 'snake', 'plate'], dtype=str)?_split_?"}
{"nl":"How to apply a logical operator to all elements in a python list","code":"all(a_list)","relevant":"print('Met block-skipping criterion ...')?_split_?class Rectangle(Shape):\n    pass?_split_?def __init__(self, *args, **kwargs):\n    self.values = kwargs.pop('values')\nkwargs['choices'] = [(v, v) for v in self.values]\nkwargs['default'] = self.values[0]\nsuper(EnumField, self).__init__(*args, **kwargs)\n\ndef db_type(self):\n    return 'enum({0})'.format(','.join(\"'%s'\" % v for v in self.values))?_split_?"}
{"nl":"Removing characters from string Python","code":"\"\"\"\"\"\".join(c for c in text if c not in 'aeiouAEIOU')","relevant":"print('removed items:', removed)?_split_?import datetime?_split_?ax.set_xticklabels(a)?_split_?"}
{"nl":"Divide two lists in python","code":"[(x \/ y) for x, y in zip(a, b)]","relevant":"module_type = 'recon'\nmodule_paths = glob.iglob('modules\/recon\/*.py')\nmodule_files = (m for m in map(path.basename, modules) if m != '__init___.py')\nmodules = (path.splitext(m)[0] for m in module_files)\nformatted = ('modules\/%s\/%s' % (module_type, m) for m in modules)\nprint('\\n'.join(formatted))?_split_?dtime = datetime.datetime.now()\nans_time = time.mktime(dtime.timetuple())?_split_?tz = pytz.timezone('Europe\/Paris')\ntz\ndatetime.datetime(2010, 1, 1, 12, 0, 0, tzinfo=tz)?_split_?"}
{"nl":"Capturing group with findall?","code":"re.findall('abc(de)fg(123)', 'abcdefg123 and again abcdefg123')","relevant":"if self.time != time_val:\n    print('The value of time has changed from ' + str(time_val) + ' to ' + str(\n        self.time))\nprint(self.time)?_split_?2?_split_?np_query = np.array(query)?_split_?"}
{"nl":"applying functions to groups in pandas dataframe","code":"df.groupby('type').apply(lambda x: np.mean(np.log2(x['v'])))","relevant":"[x for x in (k.replace('\\n', '').strip() for k in foo) if x]?_split_?self.function_count = 0?_split_?data = [(1, 'a'), (1, 'b'), (2, 'c'), (2, 'd'), (2, 'e'), (3, 'f')]\nrdd = sc.parallelize(data)?_split_?"}
{"nl":"Searching if the values on a list is in the dictionary whose format is key-string, value-list(strings)","code":"[key for key, value in list(my_dict.items()) if set(value).intersection(lst)]","relevant":"sys.getfilesystemencoding = lambda : 'UTF-8'?_split_?paths = open(sys.argv[1], 'r') if len(sys.argv) > 1 else '.'?_split_?text = StringField(required=True)\n\n\nclass Feed(Document):\n    label = StringField(required=True)\nfeed_url = StringField(required=True)\nposts = ListField(EmbeddedDocumentField(Post))\nFeed.drop_collection()\nFeed(label='label', feed_url='www.feed.com').save()\npost = Post(uid='1', text='hi')\nupdated = Feed.objects(posts__uid=post.uid).update_one(set__posts__S=post)\nif not updated:\n    Feed.objects.update_one(push__posts=post)?_split_?"}
{"nl":"Searching if the values on a list is in the dictionary whose format is key-string, value-list(strings)","code":"[key for item in lst for key, value in list(my_dict.items()) if item in value]","relevant":"sys.getfilesystemencoding = lambda : 'UTF-8'?_split_?paths = open(sys.argv[1], 'r') if len(sys.argv) > 1 else '.'?_split_?text = StringField(required=True)\n\n\nclass Feed(Document):\n    label = StringField(required=True)\nfeed_url = StringField(required=True)\nposts = ListField(EmbeddedDocumentField(Post))\nFeed.drop_collection()\nFeed(label='label', feed_url='www.feed.com').save()\npost = Post(uid='1', text='hi')\nupdated = Feed.objects(posts__uid=post.uid).update_one(set__posts__S=post)\nif not updated:\n    Feed.objects.update_one(push__posts=post)?_split_?"}
{"nl":"Add tuple to a list of tuples","code":"c = [[(i + j) for i, j in zip(e, b)] for e in a]","relevant":"def __init__(self):\n    pass?_split_?import itertools?_split_?push(stack, node)?_split_?"}
{"nl":"Python: Get relative path from comparing two absolute paths","code":"os.path.commonprefix(['\/usr\/var', '\/usr\/var2\/log'])","relevant":"a = np.array([True, False, False, True, True, False, False, True, False])\nnp.diff(np.insert(np.where(np.diff(a) == 1)[0] + 1, 0, 0))[::2]?_split_?a = 2\nb = 3?_split_?sphinxPath = os.path.realpath(os.path.join(sphinx.package_dir, 'texinputs'))?_split_?"}
{"nl":"Python: Get relative path from comparing two absolute paths","code":"print(os.path.relpath('\/usr\/var\/log\/', '\/usr\/var'))","relevant":"a = np.array([True, False, False, True, True, False, False, True, False])\nnp.diff(np.insert(np.where(np.diff(a) == 1)[0] + 1, 0, 0))[::2]?_split_?a = 2\nb = 3?_split_?sphinxPath = os.path.realpath(os.path.join(sphinx.package_dir, 'texinputs'))?_split_?"}
{"nl":"filtering grouped df in pandas","code":"grouped.filter(lambda x: len(x) > 1)","relevant":"n = 2\nnp.kron(a, np.ones((n, n)))?_split_?google_price_data = [317.68, 396.05, 451.48, 428.03, 516.26, 604.83, 520.63,\n    573.48, 536.51, 542.84, 533.85, 660.87, 728.9]\nfor i, item in enumerate(google_price_data, start=1):\n    google_dict[i] = item\nprint(google_dict)?_split_?print(confusion_matrix(df['actual'], df['predicted']))?_split_?"}
{"nl":"Python: sorting a dictionary of lists","code":"sorted(list(myDict.items()), key=lambda e: e[1][2])","relevant":"@app.before_request\ndef before_request():\n    pass?_split_?with io.open(filename, 'r', encoding='utf8') as f:\n    text = f.read()\nwith io.open(filename, 'w', encoding='utf8') as f:\n    pass?_split_?raise IndexError()?_split_?"}
{"nl":"What is the most pythonic way to avoid specifying the same value in a string","code":"\"\"\"hello {name}, how are you {name}, welcome {name}\"\"\".format(name='john')","relevant":"api.decorators = [cors.crossdomain(origin='*')]?_split_?fn = 'data.bin'?_split_?a2 = np.arange(10).reshape(2, 5)?_split_?"}
{"nl":"How to reorder indexed rows based on a list in Pandas data frame","code":"df.reindex(['Z', 'C', 'A'])","relevant":"for key, value in item.items():\n    pass?_split_?regex = re.compile('a.*')?_split_?df.filter(like='result', axis=1)?_split_?"}
{"nl":"determine if a list contains other lists","code":"any(isinstance(el, list) for el in input_list)","relevant":"4, 4?_split_?import pandas as pd\nimport numpy as np?_split_?def make_connection(self, host):\n    conn = TimeoutHTTP(host)\nconn.set_timeout(self.timeout)?_split_?"}
{"nl":"get the size of a list","code":"len(items)","relevant":"zip.write(second_path, basename(second_path))\nzip.close()?_split_?arr2.base?_split_?competitors = competitors.extra(select={'sort_key': 'RAND({})'.format(seed)})?_split_?"}
{"nl":"get the size of a list","code":"len([1, 2, 3])","relevant":"zip.write(second_path, basename(second_path))\nzip.close()?_split_?arr2.base?_split_?competitors = competitors.extra(select={'sort_key': 'RAND({})'.format(seed)})?_split_?"}
{"nl":"get the size of a list","code":"items.__len__()","relevant":"zip.write(second_path, basename(second_path))\nzip.close()?_split_?arr2.base?_split_?competitors = competitors.extra(select={'sort_key': 'RAND({})'.format(seed)})?_split_?"}
{"nl":"get the size of a list","code":"len()","relevant":"zip.write(second_path, basename(second_path))\nzip.close()?_split_?arr2.base?_split_?competitors = competitors.extra(select={'sort_key': 'RAND({})'.format(seed)})?_split_?"}
{"nl":"get the size of a list","code":"len(s)","relevant":"zip.write(second_path, basename(second_path))\nzip.close()?_split_?arr2.base?_split_?competitors = competitors.extra(select={'sort_key': 'RAND({})'.format(seed)})?_split_?"}
{"nl":"Fastest way to sort each row in a pandas dataframe","code":"df.sort(axis=1, ascending=False)","relevant":"print('inserting', repr(key.bytes))?_split_?filenames = os.listdir(path)\nfor filename in filenames:\n    if filename.endswith('.csv'):\n        r = csv.reader(open(filename))\nnew_data = []\nfor row in r:\n    row[-1] = row[-1].replace('S-D', 'S')\nnew_data.append(row)\nnewfilename = ''.join(filename.split('.csv')) + '_edited.csv'\nwith open(newfilename, 'w') as f:\n    writer = csv.writer(f)\nwriter.writerows(new_data)?_split_?print('foo')?_split_?"}
{"nl":"Fastest way to sort each row in a pandas dataframe","code":"df.sort(df.columns, axis=1, ascending=False)","relevant":"print('inserting', repr(key.bytes))?_split_?filenames = os.listdir(path)\nfor filename in filenames:\n    if filename.endswith('.csv'):\n        r = csv.reader(open(filename))\nnew_data = []\nfor row in r:\n    row[-1] = row[-1].replace('S-D', 'S')\nnew_data.append(row)\nnewfilename = ''.join(filename.split('.csv')) + '_edited.csv'\nwith open(newfilename, 'w') as f:\n    writer = csv.writer(f)\nwriter.writerows(new_data)?_split_?print('foo')?_split_?"}
{"nl":"Pandas DataFrame Groupby two columns and get counts","code":"df.groupby(['col5', 'col2']).size().groupby(level=1).max()","relevant":"ax.grid()\nax.set_xlim(0, 30)\nax.set_ylim(0, 30)\nax.set_aspect(1)\nplt.setp(ax.xaxis.get_gridlines(), clip_path=circle)\nplt.setp(ax.yaxis.get_gridlines(), clip_path=circle)\nplt.show()?_split_?print(token.generate_authorize_url(redirect_uri='urn:ietf:wg:oauth:2.0:oob'))?_split_?con = mysqldb.connect(host='localhost', user='user', passwd='**', db='db name')?_split_?"}
{"nl":"How would I check a string for a certain letter in Python?","code":"'x' in ['x', 'd', 'a', 's', 'd', 's']","relevant":"v1 = 55.39\nv2 = -1.15\nv3 = 6.54\nv4 = 0.0\nprint('%8.2f   %8.2f' % (v1, v2))?_split_?d\nlist(d.keys())?_split_?wholeList = list(range(0, 10))?_split_?"}
{"nl":"Delete a dictionary item if the key exists","code":"mydict.pop('key', None)","relevant":"mgr = urllib.request.HTTPPasswordMgrWithDefaultRealm()\nmgr.add_password(None, url, user, password)?_split_?from nltk.wsd import lesk\nsent = 'I went to the bank to deposit my money'\nambiguous = 'bank'?_split_?class DstTzInfo(BaseTzInfo):\n    \"\"\"A timezone that has a variable offset from UTC\n    The offset might change if daylight savings time comes into effect,\n    or at a point in history when the region decides to change their\n    timezone definition.\n    \"\"\"\n_utc_transition_times = None\n_transition_info = None?_split_?"}
{"nl":"Delete a dictionary item if the key exists","code":"del mydict[key]","relevant":"mgr = urllib.request.HTTPPasswordMgrWithDefaultRealm()\nmgr.add_password(None, url, user, password)?_split_?from nltk.wsd import lesk\nsent = 'I went to the bank to deposit my money'\nambiguous = 'bank'?_split_?class DstTzInfo(BaseTzInfo):\n    \"\"\"A timezone that has a variable offset from UTC\n    The offset might change if daylight savings time comes into effect,\n    or at a point in history when the region decides to change their\n    timezone definition.\n    \"\"\"\n_utc_transition_times = None\n_transition_info = None?_split_?"}
{"nl":"Delete a dictionary item if the key exists","code":"try:\n    del mydict[key]\nexcept KeyError:\n    pass\ntry:\n    del mydict[key]\nexcept KeyError:\n    pass","relevant":"mgr = urllib.request.HTTPPasswordMgrWithDefaultRealm()\nmgr.add_password(None, url, user, password)?_split_?from nltk.wsd import lesk\nsent = 'I went to the bank to deposit my money'\nambiguous = 'bank'?_split_?class DstTzInfo(BaseTzInfo):\n    \"\"\"A timezone that has a variable offset from UTC\n    The offset might change if daylight savings time comes into effect,\n    or at a point in history when the region decides to change their\n    timezone definition.\n    \"\"\"\n_utc_transition_times = None\n_transition_info = None?_split_?"}
{"nl":"Multiple positional arguments with Python and argparse","code":"parser.add_argument('input', nargs='+')","relevant":"for f in files:\n    pass?_split_?reg = re.compile('.*?(\\\\(?\\\\d{3}\\\\D{0,3}\\\\d{3}\\\\D{0,3}\\\\d{4}).*?')?_split_?decoded = badXML.decode('utf-8', errors='ignore')\ngoodXML = decoded.encode('utf-8')?_split_?"}
{"nl":"How to avoid line color repetition in matplotlib.pyplot?","code":"pyplot.plot(x, y, color='#112233')","relevant":"output = re.findall('\\\\b\\\\d{5}\\\\b', text)\nout_str = ','.join(output)?_split_?oldx, oldy = lines2d[0].get_data()\nlines2d[0].set_data(oldx + 0.1, oldy + 0.2)?_split_?with open('test.csv') as csv_file:\n    for row in csv.DictReader(csv_file):\n        pass?_split_?"}
{"nl":"Strip HTML from strings in Python","code":"re.sub('<[^<]+?>', '', text)","relevant":"return r.fillna(0)\ndf.assign(**{'Percent rank': df.reset_index().groupby(['index', 'Category']\n    ).SCORE.apply(prank).values})?_split_?prevent_the_apocalypse()\nsuper(MyDaemonContext, self).close()\nwith MyDaemonContext():\n    while True:\n        give_high_fives()?_split_?def __init__(self):\n    super().__init__()?_split_?"}
{"nl":"Align numpy array according to another array","code":"a[np.in1d(a, b)]","relevant":"from sympy.abc import x, y\nvers1 = (x + y) ** 2?_split_?list = [(str(a[i]) + str(b[i])) for i in range(len(a))]?_split_?from collections import namedtuple\nData = namedtuple('Data', ['open', 'high', 'lowclose', 'sum'])?_split_?"}
{"nl":"how to split a string on the first instance of delimiter in python","code":"\"\"\"jvm.args= -Dappdynamics.com=true, -Dsomeotherparam=false,\"\"\".split('=', 1)","relevant":"std_devs = np.diag(np.sqrt(cov))?_split_?from itertools import groupby?_split_?b = a.T\nb.shape = 12,?_split_?"}
{"nl":"Control a print format when printing a list in Python","code":"print('[%s]' % ', '.join('%.3f' % val for val in list))","relevant":"out.shape?_split_?user.save()\nuser.password = 'sahar'\nuser.save()?_split_?dis.dis(f)?_split_?"}
{"nl":"Control a print format when printing a list in Python","code":"print('[' + ', '.join('%5.3f' % v for v in l) + ']')","relevant":"out.shape?_split_?user.save()\nuser.password = 'sahar'\nuser.save()?_split_?dis.dis(f)?_split_?"}
{"nl":"Control a print format when printing a list in Python","code":"print([('%5.3f' % val) for val in l])","relevant":"out.shape?_split_?user.save()\nuser.password = 'sahar'\nuser.save()?_split_?dis.dis(f)?_split_?"}
{"nl":"How to move to one folder back in python","code":"os.chdir('..')","relevant":"r += (x[i, k] - xc[j, k]) ** 2?_split_?if kwargs:\n    req.add_data(urllib.parse.urlencode(kwargs))?_split_?pinit = [1.0, -1.0]?_split_?"}
{"nl":"Convert Unicode to UTF-8 Python","code":"print(text.encode('windows-1252'))","relevant":"df[df.columns[df.max() > 0]]?_split_?cur.execute('INSERT INTO foo(bar) VALUES (?)', ('2003-06-25',))?_split_?path = op.join(CACHE, _file_from_url(url))?_split_?"}
{"nl":"How can I convert a binary to a float number","code":"struct.unpack('d', struct.pack('Q', int(s2, 0)))[0]","relevant":"first_index = -1?_split_?return r?_split_?self.frame.Show(True)?_split_?"}
{"nl":"How can I convert a binary to a float number","code":"float(int('-0b1110', 0))","relevant":"first_index = -1?_split_?return r?_split_?self.frame.Show(True)?_split_?"}
{"nl":"How can I convert a binary to a float number","code":"struct.unpack('d', b8)[0]","relevant":"first_index = -1?_split_?return r?_split_?self.frame.Show(True)?_split_?"}
{"nl":"Plotting categorical data with pandas and matplotlib","code":"df.colour.value_counts().plot(kind='bar')","relevant":"from pyspark.sql.functions import monotonicallyIncreasingId?_split_?foo()?_split_?result = eval(s)?_split_?"}
{"nl":"Plotting categorical data with pandas and matplotlib","code":"df.groupby('colour').size().plot(kind='bar')","relevant":"from pyspark.sql.functions import monotonicallyIncreasingId?_split_?foo()?_split_?result = eval(s)?_split_?"}
{"nl":"Read lines containing integers from a file in Python?","code":"line.strip().split(' ')","relevant":"\"\"\"gg_kkkppp\"\"\"?_split_?a = numpy.ones((3, 3), dtype=numpy.float96)?_split_?background = Image.new('RGB', (100, 100), (255, 255, 255))\nforeground = Image.new('RGB', (100, 100), (255, 0, 0))\nmask = Image.new('L', (100, 100), 0)\ndraw = ImageDraw.Draw(mask)\nfor i in range(5, 100, 10):\n    draw.line((i, 0, i, 100), fill=random.randrange(256))\ndraw.line((0, i, 100, i), fill=random.randrange(256))\nresult = Image.composite(background, foreground, mask)?_split_?"}
{"nl":"Pandas how to apply multiple functions to dataframe","code":"df.groupby(lambda idx: 0).agg(['mean', 'std'])","relevant":"with open('C:\/X\/Y\/Z\/filename.py', 'r') as file:\n    exec(file.read())?_split_?print(team([2, 3, 10, 5, 8, 9, 7, 3, 5, 2]))\nprint(team([1, 1, 1, 1, 1, 1, 1, 1, 1, 9]))?_split_?argv.Add('bar')?_split_?"}
{"nl":"sorting dictionary by numeric value","code":"sorted(list(tag_weight.items()), key=lambda x: int(x[1]), reverse=True)","relevant":"@app.route('\/')\ndef index():\n    pass?_split_?self.send_header('Expires', '0')?_split_?np.random.rand(5) < 0.8\nnp.random.seed(seed=0)?_split_?"}
{"nl":"How do I find the largest integer less than x?","code":"int(math.ceil(x)) - 1","relevant":"file = '\/etc\/passwd'\nf = open(file, 'r')\nf.seek(randint(10, 250))\npos = f.tell()\nprint('pos=%d' % pos)\n\ndef countbytes(iterable):\n    bytes = 0\nfor item in iterable:\n    bytes += len(item)\nyield bytes\nprint(1 + len(list(takewhile(lambda x: x <= pos, countbytes(open(file, 'r'))))))?_split_?class DetailHandler(BaseHandler):\n    pass?_split_?name = 'Tom'\nmsg_count = 3\nprint('Hello {title} {name}! You have {count} messages.'.format(title=title,\n    name=name, count=count))?_split_?"}
{"nl":"check if the string is empty","code":"if (not myString):\n    pass","relevant":"df.loc[(idx[:, ('foo', 'bar'), ('can')]), :]?_split_?stream = open(path.join(DATADIR, 'goforward.raw'), 'rb')?_split_?MONGO_USERNAME = 'username'\nMONGO_PASSWORD = 'password'\nMONGO_DBNAME = 'apitest'?_split_?"}
{"nl":"Most elegant way to check if the string is empty","code":"if (not some_string):\n    pass","relevant":"a[0] + a[1] \/ float(10 ** (int(log(a[1], 10)) + 1))?_split_?len([x for x in s if x.get('success', False)])?_split_?from email.mime.text import MIMEText\nfilename = 'text.txt'\nf = file(filename)\nattachment = MIMEText(f.read())?_split_?"}
{"nl":"Most elegant way to check if the string is empty","code":"if (not my_string):\n    pass","relevant":"a[0] + a[1] \/ float(10 ** (int(log(a[1], 10)) + 1))?_split_?len([x for x in s if x.get('success', False)])?_split_?from email.mime.text import MIMEText\nfilename = 'text.txt'\nf = file(filename)\nattachment = MIMEText(f.read())?_split_?"}
{"nl":"check if the string is empty","code":"if some_string:\n    pass","relevant":"df.loc[(idx[:, ('foo', 'bar'), ('can')]), :]?_split_?stream = open(path.join(DATADIR, 'goforward.raw'), 'rb')?_split_?MONGO_USERNAME = 'username'\nMONGO_PASSWORD = 'password'\nMONGO_DBNAME = 'apitest'?_split_?"}
{"nl":"iterate over a dictionary in sorted order","code":"it = iter(sorted(d.items()))","relevant":"\"\"\"[Hello|Hi]. We are [inviting | calling] you at position [[junior| mid junior]|senior] developer.\"\"\"?_split_?print(my_regex.findall('[xy][abc]'))\n['xy', 'abc']?_split_?h2, xedges, yedges = np.histogram2d(X, Y, bibs=[30, 30])?_split_?"}
{"nl":"iterate over a dictionary in sorted order","code":"for (key, value) in sorted(d.items()):\n    pass","relevant":"\"\"\"[Hello|Hi]. We are [inviting | calling] you at position [[junior| mid junior]|senior] developer.\"\"\"?_split_?print(my_regex.findall('[xy][abc]'))\n['xy', 'abc']?_split_?h2, xedges, yedges = np.histogram2d(X, Y, bibs=[30, 30])?_split_?"}
{"nl":"iterate over a dictionary in sorted order","code":"return sorted(dict.items())","relevant":"\"\"\"[Hello|Hi]. We are [inviting | calling] you at position [[junior| mid junior]|senior] developer.\"\"\"?_split_?print(my_regex.findall('[xy][abc]'))\n['xy', 'abc']?_split_?h2, xedges, yedges = np.histogram2d(X, Y, bibs=[30, 30])?_split_?"}
{"nl":"iterate over a dictionary in sorted order","code":"return iter(sorted(dict.items()))","relevant":"\"\"\"[Hello|Hi]. We are [inviting | calling] you at position [[junior| mid junior]|senior] developer.\"\"\"?_split_?print(my_regex.findall('[xy][abc]'))\n['xy', 'abc']?_split_?h2, xedges, yedges = np.histogram2d(X, Y, bibs=[30, 30])?_split_?"}
{"nl":"iterate over a dictionary in sorted order","code":"for (k, v) in sorted(foo.items()):\n    pass","relevant":"\"\"\"[Hello|Hi]. We are [inviting | calling] you at position [[junior| mid junior]|senior] developer.\"\"\"?_split_?print(my_regex.findall('[xy][abc]'))\n['xy', 'abc']?_split_?h2, xedges, yedges = np.histogram2d(X, Y, bibs=[30, 30])?_split_?"}
{"nl":"iterate over a dictionary in sorted order","code":"for k in sorted(foo.keys()):\n    pass","relevant":"\"\"\"[Hello|Hi]. We are [inviting | calling] you at position [[junior| mid junior]|senior] developer.\"\"\"?_split_?print(my_regex.findall('[xy][abc]'))\n['xy', 'abc']?_split_?h2, xedges, yedges = np.histogram2d(X, Y, bibs=[30, 30])?_split_?"}
{"nl":"finding the last occurrence of an item in a list python","code":"last = len(s) - s[::-1].index(x) - 1","relevant":"df.to_html(out, float_format=fmt)?_split_?for i in range(len(a)):\n    if a[i] == 1:\n        b[i] = b[i - 1] + 1?_split_?arr[i] = 1\ng(arr, numbers, i + 1)\narr[i] = 0?_split_?"}
{"nl":"convert list to string","code":"str1 = ''.join(list1)","relevant":"axes[0].plot(list(range(50)))?_split_?def cleanup(dirty_data):\n    pass?_split_?from sqlalchemy.sql import func?_split_?"}
{"nl":"convert list to string","code":"' '.join((str(x) for x in L))","relevant":"axes[0].plot(list(range(50)))?_split_?def cleanup(dirty_data):\n    pass?_split_?from sqlalchemy.sql import func?_split_?"}
{"nl":"convert list to string","code":"str1 = ''.join((str(e) for e in list1))","relevant":"axes[0].plot(list(range(50)))?_split_?def cleanup(dirty_data):\n    pass?_split_?from sqlalchemy.sql import func?_split_?"}
{"nl":"convert list to string","code":"makeitastring = ''.join(map(str, L))","relevant":"axes[0].plot(list(range(50)))?_split_?def cleanup(dirty_data):\n    pass?_split_?from sqlalchemy.sql import func?_split_?"}
{"nl":"remove None value from a list without removing the 0 value","code":"[x for x in L if x is not None]","relevant":"ciph?_split_?d\nd.pop(3, None)\nd?_split_?import numpy as np\nx = np.array([[1000, 10, 0.5], [765, 5, 0.35], [800, 7, 0.09]])\nx_normed = x \/ x.max(axis=0)?_split_?"}
{"nl":"How do I select a random element from an array in Python?","code":"random.choice([1, 2, 3])","relevant":"result = ''.join(char * count for char, count in counts[:max_idx]\n    ) + 'aa' + ''.join(char * count for char, count in counts[max_idx + 1:])?_split_?inverted = {}\nfor k, v in d.items():\n    inverted[v] = max(inverted.get(v, k), k)?_split_?self.send_response(401)\nself.send_header('WWW-Authenticate', 'Basic realm=\"Test\"')?_split_?"}
{"nl":"Creating a 2d matrix in python","code":"x = [[None for _ in range(5)] for _ in range(6)]","relevant":"delimiters = 'a', '...', '(c)'\nexample = \"stackoverflow (c) is awesome... isn't it?\"\nregexPattern = '|'.join(map(re.escape, delimiters))\nregexPattern\nre.split(regexPattern, example)?_split_?Article.objects.annotate(numviews=Count(Case(When(readership__what_time__lt\n    =treshold, then=F('readership__reader')), output_field=CharField()),\n    distinct=True))?_split_?def bar():\n    pass?_split_?"}
{"nl":"Numpy: Get random set of rows from 2D array","code":"A[(np.random.choice(A.shape[0], 2, replace=False)), :]","relevant":"datafile = os.path.join(os.path.dirname(__file__), datafile)?_split_?APP_DEFAULT_GCS_BUCKET_NAME = 'app_default_bucket'?_split_?self.unregister(user)?_split_?"}
{"nl":"Numpy: Get random set of rows from 2D array","code":"A[(np.random.randint(A.shape[0], size=2)), :]","relevant":"datafile = os.path.join(os.path.dirname(__file__), datafile)?_split_?APP_DEFAULT_GCS_BUCKET_NAME = 'app_default_bucket'?_split_?self.unregister(user)?_split_?"}
{"nl":"Combining rows in pandas","code":"df.groupby(df.index).sum()","relevant":"@cachedProperty(name='test')\ndef my_func(self):\n    return 'ok'?_split_?file = open(expanduser('~') + '\/Desktop\/HERE.txt', 'w')\nfile.write('It worked!\\n' + str(datetime.datetime.now()))\nfile.close()?_split_?[re.search('\\\\d{4}', s) for s in lst]?_split_?"}
{"nl":"Parsing XML with namespace in Python via 'ElementTree'","code":"root.findall('{http:\/\/www.w3.org\/2002\/07\/owl#}Class')","relevant":"server_socket.close()?_split_?for i in ['a', 'b', 'c', 'd']:\n    pass?_split_?if __name__ == '__main__':\n    pass?_split_?"}
{"nl":"How do I generate a random string (of length X, a-z only) in Python?","code":"\"\"\"\"\"\".join(random.choice(string.lowercase) for x in range(X))","relevant":"self.LastResponse = response\nself.LastJson = json.loads(response.text)?_split_?df.loc[:, ('items')] = df['items'].map(int)\ndfp = df.pivot('client_id', 'month', 'items')?_split_?from scipy.signal import argrelmax\nt = linspace(-4, 40, 1000)\ny = sin(t)\nargrelmax(y)[0]?_split_?"}
{"nl":"Python cant find module in the same folder","code":"sys.path.append('\/path\/to\/2014_07_13_test')","relevant":"len(x)\nreturn not isinstance(x, str) and True?_split_?from PySide.QtGui import QPolygonF\nfrom PySide.QtCore import QPointF\nxy = resize(arange(10), (2, 10)).T\nqPlg = QPolygonF()\nfor p in xy:\n    qPlg.append(QPointF(*p))?_split_?class Base(object):\n\n    def go(self):\n        pass?_split_?"}
{"nl":"round number to nearest integer","code":"int(round(x))","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"round number to nearest integer","code":"h = int(round(h))","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"round number to nearest integer","code":"round(32.268907563, 3)","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"round number to nearest integer","code":"round(value, significantDigit)","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"round number to nearest integer","code":"round(1.0005, 3)","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"round number to nearest integer","code":"round(2.0005, 3)","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"round number to nearest integer","code":"round(3.0005, 3)","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"round number to nearest integer","code":"round(4.0005, 3)","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"round number to nearest integer","code":"round(8.005, 2)","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"round number to nearest integer","code":"round(7.005, 2)","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"round number to nearest integer","code":"round(6.005, 2)","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"round number to nearest integer","code":"round(1.005, 2)","relevant":"np.shape(result)?_split_?app_label = 'test'?_split_?new_dict[pair[1]].append(pair[0])\nprint(new_dict)?_split_?"}
{"nl":"Pandas - FillNa with another column","code":"df['Cat1'].fillna(df['Cat2'])","relevant":"del True?_split_?b\na[b]?_split_?'%.3f' % q?_split_?"}
{"nl":"Python: Logging TypeError: not all arguments converted during string formatting","code":"logging.info('date=%s', date)","relevant":"foo = 'client:user:username:type:1234567'?_split_?vbox.add(image)?_split_?def __del__(self):\n    pass?_split_?"}
{"nl":"Python: Logging TypeError: not all arguments converted during string formatting","code":"logging.info('date={}'.format(date))","relevant":"foo = 'client:user:username:type:1234567'?_split_?vbox.add(image)?_split_?def __del__(self):\n    pass?_split_?"}
{"nl":"In dictionary, converting the value from string to integer","code":"{k: int(v) for k, v in d.items()}","relevant":"self.request = request?_split_?run_thread.start()?_split_?result = [item] * (len(lst) * 2 - 1)?_split_?"}
{"nl":"How can I add the corresponding elements of several lists of numbers?","code":"map(sum, zip(*lists))","relevant":"def handle_event(event):\n    if event.Key in watched_keys:\n        pass?_split_?calculator.show()\nsys.exit(app.exec_())?_split_?l = mpl.pyplot.gca().legend_?_split_?"}
{"nl":"Python: How to convert a string containing hex bytes to a hex string","code":"s.decode('hex')","relevant":"lst.append(triple)?_split_?import pymongo\ndata = pymongo.Connection('localhost', 27017)['mydb']['mycollection']?_split_?def sequence_in(s1, s2):\n    \"\"\"Does `s1` appear in sequence in `s2`?\"\"\"?_split_?"}
{"nl":"Python: How to convert a string containing hex bytes to a hex string","code":"binascii.a2b_hex(s)","relevant":"lst.append(triple)?_split_?import pymongo\ndata = pymongo.Connection('localhost', 27017)['mydb']['mycollection']?_split_?def sequence_in(s1, s2):\n    \"\"\"Does `s1` appear in sequence in `s2`?\"\"\"?_split_?"}
{"nl":"MITM proxy over SSL hangs on wrap_socket with client","code":"connection.send('HTTP\/1.0 200 established\\r\\n\\r\\n')","relevant":"if result_tree is None:\n    all_combos.append(current_combo)\nreturn\nfor word in result_tree:\n    new_current_combo = current_combo[:]\nnew_current_combo.append({'word': word['word']})\nflatten_combinations(word['next'], new_current_combo, all_combos)\nreturn all_combos?_split_?arr?_split_?np.maximum.accumulate((A2 < 0)[:, ::-1], axis=1)[:, ::-1]?_split_?"}
{"nl":"MITM proxy over SSL hangs on wrap_socket with client","code":"connection.send('HTTP\/1.0 200 OK\\r\\n\\r\\n')","relevant":"if result_tree is None:\n    all_combos.append(current_combo)\nreturn\nfor word in result_tree:\n    new_current_combo = current_combo[:]\nnew_current_combo.append({'word': word['word']})\nflatten_combinations(word['next'], new_current_combo, all_combos)\nreturn all_combos?_split_?arr?_split_?np.maximum.accumulate((A2 < 0)[:, ::-1], axis=1)[:, ::-1]?_split_?"}
{"nl":"Set value for particular cell in pandas DataFrame","code":"df['x']['C'] = 10","relevant":"from selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.common.exceptions import *\ndriver = webdriver.Firefox()\nwait = WebDriverWait(driver, 10, poll_frequency=1, ignored_exceptions=[\n    ElementNotVisibleException, ElementNotSelectableException])\nelement = wait.until(EC.element_to_be_clickable((By.XPATH, '\/\/div')))?_split_?for t in legend.get_texts():\n    t.set_ha('right')\nt.set_position((shift, 0))?_split_?f = open('\/etc\/ssh\/sshd_config', 'r')\nstrings = re.search('^\\\\s*[^#]*IgnoreRhosts\\\\s+yes', f.read(), flags=re.\n    MULTILINE)?_split_?"}
{"nl":"Norm along row in pandas","code":"np.sqrt(np.square(df).sum(axis=1))","relevant":"window = NSApp.mainWindow()?_split_?dateutil.parser.parse('Feb 25 2010, 16:19:20 CET').replace(tzinfo=dateutil.\n    tz.gettz('CET'))?_split_?from sklearn.preprocessing import normalize?_split_?"}
{"nl":"How do I remove identical items from a list and sort it in Python?","code":"sorted(set(my_list))","relevant":"from collections import defaultdict\nd = defaultdict(dict)\nfor a, b, c in list_of_tuples:\n    d[a][b] = c?_split_?print(list_end_counter([1, 1, 2, 2, 2, 2]))?_split_?class A(object):\n\n    def __init__(self):\n        pass?_split_?"}
{"nl":"Python Finding Index of Maximum in List","code":"max(enumerate(a), key=lambda x: x[1])[0]","relevant":"def formfield_for_manytomany(self, db_field, request=None, **kwargs):\n    person = kwargs.pop('obj', None)?_split_?for it in iterables:\n    for element in it:\n        yield element?_split_?_m = _m.NextMatch()?_split_?"}
{"nl":"Python Accessing Values in A List of Dictionaries","code":"[d['Name'] for d in thisismylist]","relevant":"std2 = 1.0?_split_?self.log('Re-spawning %s' % ' '.join(args))\nargs.insert(0, sys.executable)\nif sys.platform == 'win32':\n    pass?_split_?ax.xaxis_date()?_split_?"}
{"nl":"Python Accessing Values in A List of Dictionaries","code":"[(d['Name'], d['Age']) for d in thisismylist]","relevant":"std2 = 1.0?_split_?self.log('Re-spawning %s' % ' '.join(args))\nargs.insert(0, sys.executable)\nif sys.platform == 'win32':\n    pass?_split_?ax.xaxis_date()?_split_?"}
{"nl":"How to grab one random item from a database in Django\/postgreSQL?","code":"model.objects.all().order_by('?')[0]","relevant":"print(getattr(matfile['sensors'], field))?_split_?import tensorflow as tf\nc = tf.constant([[1.0, 2.0], [3.0, 4.0]])\nd = tf.constant([[1.0, 1.0], [0.0, 1.0]])\ne = tf.matmul(c, d, name='example')\nwith tf.Session() as sess:\n    test = sess.run(e)\nprint(e.name)\ntest = tf.get_default_graph().get_tensor_by_name('example:0')\nprint(test)?_split_?values = arange(10, 26)\nidx = arange(0, values.size, n)\nidx = roll(idx, -1)?_split_?"}
{"nl":"Run a python script from another python script, passing in args","code":"os.system('script2.py 1')","relevant":"import tensorflow as tf?_split_?logging.getLogger(name)\nprint(effectivehandlers(logger))?_split_?input = [1, 2, 3, 4]\ntested = [i for i in input if i > 2]?_split_?"}
{"nl":"Python Regex for hyphenated words","code":"re.findall('\\\\w+(?:-\\\\w+)+', text)","relevant":"from xml.dom.minidom import parseString\ndom = parseString(\"\"\"<message>\n  <text>\n    Hello!\n  <\/text>\n<\/message>\"\"\")\ndom.childNodes[0].childNodes\ntext = dom.getElementsByTagName('text')[0].childNodes[0]\ntext.data = text.data.replace('Hello', 'Hello world')\nprint(dom.toxml())?_split_?class programmers(company):\n    pass?_split_?y = np.sin(np.pi * x * n) \/ (np.pi * x * n)?_split_?"}
{"nl":"Create variable key\/value pairs with argparse (python)","code":"parser.add_argument('--conf', nargs=2, action='append')","relevant":"print(\"I've got a lovely bunch of coconuts\")?_split_?os.execv('\/usr\/bin\/ssh', ['\/usr\/bin\/ssh', 'localhost'])?_split_?smart_cmd = smart_str(cmd)?_split_?"}
{"nl":"How do you pick \"x\" number of unique numbers from a list in Python?","code":"random.sample(list(range(1, 16)), 3)","relevant":"return True?_split_?names = ['YT4.11', '4.3', 'YT4.2', '4.10', 'PT2.19', 'PT2.9']?_split_?def big2(func):\n    pass?_split_?"}
{"nl":"Sort a list of strings based on regular expression match or something similar","code":"strings.sort(key=lambda str: re.sub('.*%(.).*', '\\\\1', str))","relevant":"diag_elems = A.data[idx_begin:idx_end]?_split_?my_array = np.random.randint(1, 10, (4, 5))\npos = np.where(my_array > 5)\nmy_array[pos]?_split_?output_buf_size = 0?_split_?"}
{"nl":"Sort a list of strings based on regular expression match or something similar","code":"strings.sort(key=lambda str: re.sub('.*%', '', str))","relevant":"diag_elems = A.data[idx_begin:idx_end]?_split_?my_array = np.random.randint(1, 10, (4, 5))\npos = np.where(my_array > 5)\nmy_array[pos]?_split_?output_buf_size = 0?_split_?"}
{"nl":"Appending to 2D lists in Python","code":"listy = [[] for i in range(3)]","relevant":"def unpack(fmt, astr):\n    \"\"\"\n    Return struct.unpack(fmt, astr) with the optional single * in fmt replaced with\n    the appropriate number, given the length of astr.\n    \"\"\"\ntry:\n    return struct.unpack(fmt, astr)\nexcept struct.error:\n    flen = struct.calcsize(fmt.replace('*', ''))\nalen = len(astr)\nidx = fmt.find('*')?_split_?os.system('gpio write 6 0 && gpio write 5 1')?_split_?float_numbers = map(float, string_numbers)?_split_?"}
{"nl":"Sort NumPy float array column by column","code":"A = np.array(sorted(A, key=tuple))","relevant":"import os, Image\nimport numpy as np\nfiles = os.listdir('.\/')\nimage = Image.open('.\/' + files[0])\nim = np.array(image, dtype=np.float32)\nfor i in range(1, len(files)):\n    currentimage = Image.open('.\/' + files[i])\nim += np.array(currentimage, dtype=np.float32)\nim \/= len(files) * 0.25\nfinal_image = Image.fromarray(np.uint8(im.clip(0, 255)))\nfinal_image.save('all_averaged.jpg', 'JPEG')?_split_?[s for s in (square(x) for x in range(12)) if s > 50]?_split_?x = x + 2?_split_?"}
{"nl":"Python list comprehension for loops","code":"[(x + y) for x in '12345' for y in 'ab']","relevant":"data_files = DATA_FILES,\noptions = {'py2app': OPTIONS},\nsetup_requires = ['py2app'],?_split_?index = dict((tuple([n]), i) for i, n in enumerate(leaves))?_split_?for i in json_obj['team']:\n    pass?_split_?"}
{"nl":"Trimming a string","code":"' Hello '.strip()","relevant":"numpy_fillna(data)?_split_?CONSTANT1 = 'value1'?_split_?x?_split_?"}
{"nl":"Trimming a string","code":"myString.strip()","relevant":"numpy_fillna(data)?_split_?CONSTANT1 = 'value1'?_split_?x?_split_?"}
{"nl":"Trimming a string","code":"' Hello '.strip()","relevant":"numpy_fillna(data)?_split_?CONSTANT1 = 'value1'?_split_?x?_split_?"}
{"nl":"Trimming a string","code":"' Hello'.strip()","relevant":"numpy_fillna(data)?_split_?CONSTANT1 = 'value1'?_split_?x?_split_?"}
{"nl":"Trimming a string","code":"'Bob has a cat'.strip()","relevant":"numpy_fillna(data)?_split_?CONSTANT1 = 'value1'?_split_?x?_split_?"}
{"nl":"Trimming a string","code":"'          Hello        '.strip()","relevant":"numpy_fillna(data)?_split_?CONSTANT1 = 'value1'?_split_?x?_split_?"}
{"nl":"Trimming a string","code":"str.strip()","relevant":"numpy_fillna(data)?_split_?CONSTANT1 = 'value1'?_split_?x?_split_?"}
{"nl":"Trimming a string","code":"myString.strip('\\n')","relevant":"numpy_fillna(data)?_split_?CONSTANT1 = 'value1'?_split_?x?_split_?"}
{"nl":"Trimming a string","code":"myString.lstrip('\\n\\r')","relevant":"numpy_fillna(data)?_split_?CONSTANT1 = 'value1'?_split_?x?_split_?"}
{"nl":"Trimming a string","code":"myString.rstrip('\\n\\t')","relevant":"numpy_fillna(data)?_split_?CONSTANT1 = 'value1'?_split_?x?_split_?"}
{"nl":"Trimming a string","code":"'  Hello\\n'.strip(' ')","relevant":"numpy_fillna(data)?_split_?CONSTANT1 = 'value1'?_split_?x?_split_?"}
{"nl":"Sort a list of tuples depending on two elements","code":"sorted(unsorted, key=lambda element: (element[1], element[2]))","relevant":"intersected = set(range(first, second + 1))?_split_?with open('result.txt', 'w') as result:\n    for file_ in files:\n        for line in open(file_, 'r'):\n            result.write(line)?_split_?class Poll(models.Model):\n\n    def __unicode__(self):\n        return self.question\n\n\nclass Choice(models.Model):\n\n    def __unicode__(self):\n        pass?_split_?"}
{"nl":"Python, Encoding output to UTF-8","code":"print(content.decode('utf8'))","relevant":"from setuptools.extension import Extension\nfrom Cython.Build import cythonize\nextensions = [Extension('myPackage.myModule', ['myPackage\/myModule.pyx'],\n    include_dirs=['\/some\/path\/to\/include\/'], libraries=['fftw3', 'fftw3f',\n    'fftw3l', 'fftw3_threads', 'fftw3f_threads', 'fftw3l_threads'],\n    library_dirs=['\/some\/path\/to\/include\/'])]?_split_?with open('file2.txt') as protein:\n    with open('file1.txt') as position:\n        with open('test.result', 'r+') as fallout:\n            writer = csv.writer(fallout, delimiter=' ')\nfor rowinprot in csv.reader(protein, delimiter=' '):\n    position.seek(0)\nvalid = True\nfor rowinpos in csv.reader(position, delimiter=' '):\n    if rowinprot[2] == rowinpos[0]:\n        if not (int(rowinprot[4]) < int(rowinpos[1]) or int(rowinprot[3]) >\n            int(rowinpos[2])):\n            valid = False\nif valid:\n    writer.writerow(rowinprot)?_split_?import libvirt\nconn = libvirt.open('qemu:\/\/\/system')?_split_?"}
{"nl":"How do I vectorize this loop in numpy?","code":"np.ma.array(np.tile(arr, 2).reshape(2, 3), mask=~cond).argmax(axis=1)","relevant":"def validate_unique(self, *args, **kwargs):\n    super(Room, self).validate_unique(*args, **kwargs)?_split_?loop = asyncio.get_event_loop()\nloop.run_until_complete(main())?_split_?if not os.path.exists(playbook_path):\n    print('[INFO] The playbook does not exist')\nsys.exit()\nOptions = namedtuple('Options', ['listtags', 'listtasks', 'listhosts',\n    'syntax', 'connection', 'module_path', 'forks', 'remote_user',\n    'private_key_file', 'ssh_common_args', 'ssh_extra_args',\n    'sftp_extra_args', 'scp_extra_args', 'become', 'become_method',\n    'become_user', 'verbosity', 'check'])\noptions = Options(listtags=False, listtasks=False, listhosts=False, syntax=\n    False, connection='ssh', module_path=None, forks=100, remote_user=\n    'slotlocker', private_key_file=None, ssh_common_args=None,\n    ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=\n    True, become_method=None, become_user='root', verbosity=None, check=False)\nvariable_manager.extra_vars = {'hosts': 'mywebserver'}\npasswords = {}\npbex = PlaybookExecutor(playbooks=[playbook_path], inventory=inventory,\n    variable_manager=variable_manager, loader=loader, options=options,\n    passwords=passwords)\nresults = pbex.run()?_split_?"}
{"nl":"How to convert efficiently a dataframe column of string type into datetime in Python?","code":"pd.to_datetime(df.ID.str[1:-3])","relevant":"foo(*values)?_split_?with open('\/tmp\/spam.txt') as f:\n    for line in f:\n        pass?_split_?authenticate(bytearray(creds))?_split_?"}
{"nl":"How to gracefully fallback to `NaN` value while reading integers from a CSV with Pandas?","code":"df = pd.read_csv('my.csv', dtype={'my_column': np.float64}, na_values=['n\/a'])","relevant":"wait_process.start()?_split_?uniq.append(max(scores, key=itemgetter('score')))?_split_?heapq.nlargest(3, list(dct.items()), key=itemgetter(1))\nmap(itemgetter(0), _)?_split_?"}
{"nl":"How to gracefully fallback to `NaN` value while reading integers from a CSV with Pandas?","code":"df = pd.read_csv('my.csv', na_values=['n\/a'])","relevant":"wait_process.start()?_split_?uniq.append(max(scores, key=itemgetter('score')))?_split_?heapq.nlargest(3, list(dct.items()), key=itemgetter(1))\nmap(itemgetter(0), _)?_split_?"}
{"nl":"All combinations of a list of lists","code":"list(itertools.product(*a))","relevant":"'\\u043c\\u0430\\u0440\\u0442\\u0430',?_split_?sum += distance(str1, str2)?_split_?def standard_date(dt):\n    \"\"\"Takes a naive datetime stamp, tests if time ago is > than 1 year,\n       determines user's local timezone, outputs stamp formatted and at local time.\"\"\"\nnow = datetime.utcnow()\ndiff = now - dt\nif diff.days \/ 365 >= 1:\n    fmt = \"%b %d '%y @ %I:%M%p\"\nelse:\n    fmt = '%b %d @ %I:%M%p'\nusers_tz = tz.tzlocal()\nutc_dt = dt.replace(tzinfo=pytz.utc)\nloc_dt = utc_dt.astimezone(users_tz)\nf = loc_dt.strftime(fmt)\nreturn f?_split_?"}
{"nl":"How to extract all UPPER from a string? Python","code":"re.sub('[^A-Z]', '', s)","relevant":"reversed_stripped_self = (j.lower() for j in self[::-1] if j not in ' ,.;:?!')\nreturn all(self_char == reversed_char for self_char, reversed_char in\n    itertools.zip_longest(stripped_self, reversed_stripped_self))?_split_?col.append(len(df[col_name].sp_values) * [i])?_split_?c = [x.pop(0) for x in random.sample([a] * len(a) + [b] * len(b), len(a) +\n    len(b))]?_split_?"}
{"nl":"Get date from ISO week number in Python","code":"datetime.strptime('2011221', '%Y%W%w')","relevant":"x = 0\n\ndef outer():\n    x = 1\n\ndef inner():\n    global x\nx = 2\nprint(('inner:', x))\ninner()\nprint(('outer:', x))\nouter()\nprint(('global:', x))?_split_?import os\nfilename = 'C:\/test\/media\/blog_images\/2013\/06\/15\/yay.gif'\nblog_images = 'C:\/test\/media\/blog_images\/'\nos.path.relpath(filename, blog_images)?_split_?integer = 97097114103104?_split_?"}
{"nl":"How to read a \"C source, ISO-8859 text\"","code":"codecs.open('myfile', 'r', 'iso-8859-1').read()","relevant":"import tkinter, tkinter.filedialog\nroot = tkinter.Tk()\nfilez = tkinter.filedialog.askopenfilenames(parent=root, title='Choose a file')?_split_?\"\"\"=> '2', '3', default \"\"\"?_split_?q = gdata.docs.client.DocsQuery(title='EFD', title_exact='true',\n    show_collections='true')\nfolder = client.GetResources(q=q).entry[0]?_split_?"}
{"nl":"List Comprehensions in Python : efficient selection in a list","code":"[f(x) for x in list]","relevant":"return [push(D, k, K) for K, D in list(c.items())]?_split_?data = base64.urlsafe_b64decode(s + '==')?_split_?pass?_split_?"}
{"nl":"Regex matching 5-digit substrings not enclosed with digits","code":"re.findall('(?<!\\\\d)\\\\d{5}(?!\\\\d)', s)","relevant":"def solve(matrix, size):\n    pass?_split_?import textwrap?_split_?setuptools.__version__?_split_?"}
{"nl":"filtering elements from list of lists in Python?","code":"[item for item in a if sum(item) > 10]","relevant":"df.loc[[0, 3], 'Value'] = 'good'?_split_?a\nkeys = ['b', 'c']\nprint({key: a[key] for key in a if key not in keys})?_split_?with tokenize.open('testmod.py') as f:\n    code = f.read()?_split_?"}
{"nl":"python: how to convert currency to decimal?","code":"cents_int = int(round(float(dollars.strip('$')) * 100))","relevant":"class WindowsMacAddress(models.Model):\n    address = models.TextField(unique=True)\nmapping = models.ForeignKey('imaging.WindowsMapping', related_name=\n    'macAddresses')\n\ndef __str__(self):\n    return self.address\n\n\nclass WindowsCompleteMappingSerializer(serializers.Serializer):\n    id = serializers.Field()\nmacAddresses = serializers.RelatedField(many=True)\nclientId = serializers.Field()?_split_?stuff.py?_split_?6?_split_?"}
{"nl":"Remove final characters from string recursively - What's the best way to do this?","code":"\"\"\"\"\"\".join(dropwhile(lambda x: x in bad_chars, example_line[::-1]))[::-1]","relevant":"u = list[tmp - 1] + l?_split_?idx = list(classes).index(var)\nidx = np.where(classes == var)?_split_?return self.get_iter_at_mark(self.get_insert())?_split_?"}
{"nl":"Creating an empty list","code":"l = []","relevant":"a.somefield = somevalue?_split_?text = \"\"\"-> 1 Pig ~ 150 kg\n-> Butching => 80 to 100 kg meat\"\"\"\nfor il, l in enumerate(text.split('\\n')):\n    plt.text(4, 400 - 80 * il, l)?_split_?ax = plt.Axes(fig, [0.0, 0.0, 1.0, 1.0])?_split_?"}
{"nl":"Creating an empty list","code":"l = list()","relevant":"a.somefield = somevalue?_split_?text = \"\"\"-> 1 Pig ~ 150 kg\n-> Butching => 80 to 100 kg meat\"\"\"\nfor il, l in enumerate(text.split('\\n')):\n    plt.text(4, 400 - 80 * il, l)?_split_?ax = plt.Axes(fig, [0.0, 0.0, 1.0, 1.0])?_split_?"}
{"nl":"Creating an empty list","code":"list()","relevant":"a.somefield = somevalue?_split_?text = \"\"\"-> 1 Pig ~ 150 kg\n-> Butching => 80 to 100 kg meat\"\"\"\nfor il, l in enumerate(text.split('\\n')):\n    plt.text(4, 400 - 80 * il, l)?_split_?ax = plt.Axes(fig, [0.0, 0.0, 1.0, 1.0])?_split_?"}
{"nl":"Creating an empty list","code":"[]","relevant":"a.somefield = somevalue?_split_?text = \"\"\"-> 1 Pig ~ 150 kg\n-> Butching => 80 to 100 kg meat\"\"\"\nfor il, l in enumerate(text.split('\\n')):\n    plt.text(4, 400 - 80 * il, l)?_split_?ax = plt.Axes(fig, [0.0, 0.0, 1.0, 1.0])?_split_?"}
{"nl":"How to properly quit a program in python","code":"sys.exit(0)","relevant":"div.xpath('.\/\/p[@class=\"class-name\"]\/text()').extract()\nmap(str.strip, div.xpath('.\/\/p[@class=\"class-name\"]\/text()').extract())?_split_?for x, _, _ in points:\n    pass?_split_?client.connect()\nclient.put('test.txt', 'Hello world\\n')?_split_?"}
{"nl":"Add string in a certain position in Python","code":"s[:4] + '-' + s[4:]","relevant":"p = len(a) \/\/ k?_split_?a = 'Hello', 'goodbye'?_split_?def __enter__(self):\n    sys.path.insert(0, self.path)\n\ndef __exit__(self, exc_type, exc_value, traceback):\n    sys.path.pop(0)?_split_?"}
{"nl":"Python : how to append new elements in a list of list?","code":"[[] for i in range(3)]","relevant":"list(dict(((x[0], x[1]), x) for x in L).values())?_split_?from bokeh.plotting import *\nfrom bokeh.models import CustomJS?_split_?df3?_split_?"}
{"nl":"Python : how to append new elements in a list of list?","code":"a = [[] for i in range(3)]","relevant":"list(dict(((x[0], x[1]), x) for x in L).values())?_split_?from bokeh.plotting import *\nfrom bokeh.models import CustomJS?_split_?df3?_split_?"}
{"nl":"Changing the referrer URL in python requests","code":"requests.get(url, headers={'referer': my_referer})","relevant":"from binascii import unhexlify, hexlify?_split_?p4in.close()?_split_?if sys.modules.get('pandas'):\n    pass?_split_?"}
{"nl":"Python, Matplotlib, subplot: How to set the axis range?","code":"pylab.ylim([0, 1000])","relevant":"import tweepy?_split_?columns_non_unique = indices[1]\nunique_columns = sorted(set(columns_non_unique))\nX.tocsc()[:, (unique_columns)]?_split_?allowed_domains = ['www.wikipedia.org']?_split_?"}
{"nl":"Pandas convert a column of list to dummies","code":"pd.get_dummies(s.apply(pd.Series).stack()).sum(level=0)","relevant":"def foo():\n    y = x\nprint('globals=', globals())\nprint('locals=', locals())\nprint(y)?_split_?x = ['foo', [1, 2, 3], 10.4]\ny = list(x)\ny[0] = 'fooooooo'?_split_?from subprocess import check_output\n\ndef get_pid(name):\n    return map(int, check_output(['pidof', name]).split())?_split_?"}
{"nl":"Finding the largest delta between two integers in a list in python","code":"max(abs(x - y) for x, y in zip(values[1:], values[:-1]))","relevant":"print('mymodule path', mymodule)?_split_?pass?_split_?import datetime\ndates = [datetime.datetime.strptime(ts, '%Y-%m-%d') for ts in timestamps]\ndates.sort()\nsorteddates = [datetime.datetime.strftime(ts, '%Y-%m-%d') for ts in dates]\nsorteddates?_split_?"}
{"nl":"How to convert hex string to integer in Python?","code":"y = str(int(x, 16))","relevant":"for row in DictReader(f, quoting=csv.QUOTE_NONE):\n    yield {k: parse_value(k, v) for k, v in row.items()}?_split_?mylist = ['10', '12', '14']?_split_?def has_delete_permission(self, request, obj=None):\n    pass?_split_?"}
{"nl":"check if a string is a number (float)","code":"a.isdigit()","relevant":"from collections import defaultdict?_split_?pd.concat([df.reindex([2, 0, 1]), df.iloc[3:]])?_split_?cartes([False, True], repeat=3)?_split_?"}
{"nl":"check if a string is a number","code":"isdigit()","relevant":"from collections import defaultdict?_split_?pd.concat([df.reindex([2, 0, 1]), df.iloc[3:]])?_split_?cartes([False, True], repeat=3)?_split_?"}
{"nl":"check if a string is a number","code":"b.isdigit()","relevant":"from collections import defaultdict?_split_?pd.concat([df.reindex([2, 0, 1]), df.iloc[3:]])?_split_?cartes([False, True], repeat=3)?_split_?"}
{"nl":"pandas.read_csv: how to skip comment lines","code":"pd.read_csv(StringIO(s), sep=',', comment='#')","relevant":"for key in a:\n    if key in counter:\n        counter[key] += 1\nelse:\n    counter[key] = 1?_split_?print('# p: (x-1)^p for small p')?_split_?ExistingSession | Disconnect - PSSession | Out - Null?_split_?"}
{"nl":"Pandas: how to change all the values of a column?","code":"df['Date'] = df['Date'].apply(lambda x: int(str(x)[-4:]))","relevant":"ScheduleConn.Open()?_split_?from lxml import etree\nxml_str = '<parent><child>text<\/child><child>other text<\/child><\/parent>'\nroot = etree.fromstring(xml_str)?_split_?tagged_sentences = [nltk.pos_tag(sentence) for sentence in tokenized_sentences]?_split_?"}
{"nl":"sum a list of numbers in Python","code":"sum(list_of_nums)","relevant":"class TestOneForManager(unittest.TestCase):\n\n    def testAddingBlah(self):\n        manager = Manager()?_split_?self.setPlainText(text)?_split_?out = []?_split_?"}
{"nl":"how to get the index of dictionary with the highest value in a list of dictionary","code":"max(lst, key=lambda x: x['score'])","relevant":"del X\n__all__ = ['x']?_split_?(1)[65]?_split_?db = SQLAlchemy(app)?_split_?"}
{"nl":"Get data from the meta tags using BeautifulSoup","code":"soup.findAll(attrs={'name': 'description'})","relevant":"fig.autofmt_xdate()\nplt.savefig('figure.pdf')?_split_?def tempdir(prefix='tmp'):\n    \"\"\"A context manager for creating and then deleting a temporary directory.\"\"\"\ntmpdir = tempfile.mkdtemp(prefix=prefix)\ntry:\n    yield tmpdir\nfinally:\n    shutil.rmtree(tmpdir)?_split_?return [x[1] for x in links if x[0] == node]?_split_?"}
{"nl":"Python: how to get rid of spaces in str(dict)?","code":"str({'a': 1, 'b': 'as df'}).replace(': ', ':').replace(', ', ',')","relevant":"import gdata.spreadsheet.service?_split_?srcdir = ['the.big.bang.theory s1e1', 'the.big.bang.theory s1e2',\n    'dexter s2e01']?_split_?plt.show()?_split_?"}
{"nl":"Python: how to get rid of spaces in str(dict)?","code":"'{' + ','.join('{0!r}:{1!r}'.format(*x) for x in list(dct.items())) + '}'","relevant":"import gdata.spreadsheet.service?_split_?srcdir = ['the.big.bang.theory s1e1', 'the.big.bang.theory s1e2',\n    'dexter s2e01']?_split_?plt.show()?_split_?"}
{"nl":"Python- insert a character into a string","code":"\"\"\"\"\"\".join(parts[1:])","relevant":"print('stderr: ', stderr.readlines())?_split_?_f_values = [[1, 4, 3], [2, 8, 6], [0, 7, 5]]?_split_?import pandas as pd\n\ndef strip(text):\n    pass?_split_?"}
{"nl":"Python- insert a character into a string","code":"\"\"\",+\"\"\".join(c.rsplit('+', 1))","relevant":"print('stderr: ', stderr.readlines())?_split_?_f_values = [[1, 4, 3], [2, 8, 6], [0, 7, 5]]?_split_?import pandas as pd\n\ndef strip(text):\n    pass?_split_?"}
{"nl":"How do I delete a row in a numpy array which contains a zero?","code":"a[np.all(a != 0, axis=1)]","relevant":"r = np.zeros((rows, rows))?_split_?super(DateDialog, self).__init__(parent)?_split_?from operator import mul?_split_?"}
{"nl":"Extracting only characters from a string in Python","code":"\"\"\" \"\"\".join(re.split('[^a-zA-Z]*', 'your string'))","relevant":"cache[key] = value?_split_?data = np.random.random((50, 50))\ndf = pd.DataFrame(data)\nrow_colors = [('b' if random.random() > 0.2 else 'r') for i in range(0, 50)]\ncmap = sns.diverging_palette(133, 10, n=7, as_cmap=True)\nresult = sns.clustermap(df, row_colors=row_colors, col_cluster=False, cmap=\n    cmap, linewidths=0)\nprint(dir(result))\nax = result.ax_heatmap\nax.plot([5, 30], [5, 5], 'k-', lw=10)\nplt.show()?_split_?print() \nval[key, value] = 1?_split_?"}
{"nl":"Extracting only characters from a string in Python","code":"re.split('[^a-zA-Z]*', 'your string')","relevant":"cache[key] = value?_split_?data = np.random.random((50, 50))\ndf = pd.DataFrame(data)\nrow_colors = [('b' if random.random() > 0.2 else 'r') for i in range(0, 50)]\ncmap = sns.diverging_palette(133, 10, n=7, as_cmap=True)\nresult = sns.clustermap(df, row_colors=row_colors, col_cluster=False, cmap=\n    cmap, linewidths=0)\nprint(dir(result))\nax = result.ax_heatmap\nax.plot([5, 30], [5, 5], 'k-', lw=10)\nplt.show()?_split_?print() \nval[key, value] = 1?_split_?"}
{"nl":"Create Union of All Values Contained in Multiple Lists","code":"results_union = set().union(*results_list)","relevant":"re.sub('\\\\((\\\\w+)\\\\)', '\\\\1', s)?_split_?r = re.compile('\\\\d+')?_split_?emoji_symbols_pictograms = re.compile('[\\U0001f300-\\U0001f5ff]')?_split_?"}
{"nl":"Create Union of All Values Contained in Multiple Lists","code":"return list(set(itertools.chain(*result_list)))","relevant":"re.sub('\\\\((\\\\w+)\\\\)', '\\\\1', s)?_split_?r = re.compile('\\\\d+')?_split_?emoji_symbols_pictograms = re.compile('[\\U0001f300-\\U0001f5ff]')?_split_?"}
{"nl":"python: check if an numpy array contains any element of another array","code":"np.any(np.in1d(a1, a2))","relevant":"x, y = line.get_xydata()[1]?_split_?self.SetIcon(plane.GetIcon())?_split_?for c in '\"Isn\\'t,\" she said.':\n    pass?_split_?"}
{"nl":"Removing control characters from a string in python","code":"return ''.join(ch for ch in s if unicodedata.category(ch)[0] != 'C')","relevant":"import os\nimport time\nwhile True:\n    pass?_split_?print('{0:.2f}'.format(your_number))?_split_?a = np.genfromtxt('bigfile.csv', dtype=str, usecols=0)?_split_?"}
{"nl":"How to compare two lists in python","code":"all(i < j for i, j in zip(a, b))","relevant":"then = datetime.strptime(inp, '%Y\/%m\/%d %H:%M:%S')?_split_?column_names = df.columns\nsm = sparse.csc_matrix(df.values)?_split_?random_function('argument_data')?_split_?"}
{"nl":"python selenium click on button","code":"driver.find_element_by_css_selector('.button.c_button.s_button').click()","relevant":"for i, line_b in enumerate(B):\n    pass?_split_?from scipy.spatial import ConvexHull?_split_?li = soup.find('li')\nmytext = li.text.replace(li.find('span').text, '')?_split_?"}
{"nl":"python selenium click on button","code":"driver.find_element_by_css_selector('.button .c_button .s_button').click()","relevant":"for i, line_b in enumerate(B):\n    pass?_split_?from scipy.spatial import ConvexHull?_split_?li = soup.find('li')\nmytext = li.text.replace(li.find('span').text, '')?_split_?"}
{"nl":"Is it possible to kill a process on Windows from within Python?","code":"os.system('taskkill \/im make.exe')","relevant":"def __getitem__(self, key):\n    return self._dictionary[key]?_split_?def hello():\n    client_ip = request.environ.get('REMOTE_ADDR')\nreturn ['Your IP is: {}\\n'.format(client_ip)]\napp.run(host='0.0.0.0', port=8080)?_split_?def send(self):\n    self.state = 'sent'\nentretien_send_email = self.env.ref('module_name.entretien_send_email')\nif entretien_send_email:\n    entretien_send_email.send_mail(self.id)?_split_?"}
{"nl":"How to get current date and time from DB using SQLAlchemy","code":"print(select([my_table, func.current_date()]).execute())","relevant":"it = iter(map(label_colors.__getitem__, d['ivl'])[-2::-1])?_split_?pip - -version?_split_?with session.no_autoflush:\n    parent = Parent('my parent')\ndb_session.add(parent)\nchild = Child('my child', parent)?_split_?"}
{"nl":"Remove duplicate chars using regex?","code":"re.sub('([a-z])\\\\1+', '\\\\1', 'ffffffbbbbbbbqqq')","relevant":"y = [6.0, 5.0, 4.0, 2.5, 3.0, 2.0, 1.0, 2.0, 2.5, 2.5]\nax.plot(x_normalised, y, 'bo')?_split_?url('^register-by-token\/(?P<backend>[^\/]+)\/$', views.register_by_access_token),?_split_?step = -1 if b < a else 1?_split_?"}
{"nl":"Regex to remove periods in acronyms?","code":"re.sub('(?<!\\\\w)([A-Z])\\\\.', '\\\\1', s)","relevant":"plt.figure(figsize=(4.5, 2.5))\nplt.plot(list(range(5)))\nfor i in range(5):\n    plt.text(i, i, '\\\\pdftooltip{o}{(%d,%d)}' % (i, i))?_split_?def floor_float(x, index):\n    sx = str(x)\nsx = sx[:index] + str(math.floor(float(sx[index] + '.' + sx[index + 1])))?_split_?for jid, mem, unit in zip(job_IDs, memory_used, memory_units):\n    pass?_split_?"}
{"nl":"how to parse a list or string into chunks of fixed length","code":"split_list = [the_list[i:i + n] for i in range(0, len(the_list), n)]","relevant":"text = [ast.literal_eval(line) for line in f]?_split_?float_cols = [c for c in df_test if df_test[c].dtype == 'float64']\nfloat32_cols = {c: np.float32 for c in float_cols}\ndf = pd.read_csv(filename, engine='c', dtype=float32_cols)?_split_?import argparse?_split_?"}
{"nl":"replacing all regex matches in single line","code":"re.sub('\\\\b(this|string)\\\\b', '<markup>\\\\1<\/markup>', 'this is my string')","relevant":"colnames = ['year', 'name', 'city', 'latitude', 'longitude']\ndata = pandas.read_csv('test.csv', names=colnames)?_split_?canvas.bind('<Button-1>', canvas_mouse_click)\ncanvas.pack()?_split_?import logging\nfrom django.test.simple import DjangoTestSuiteRunner\nfrom django.conf import settings\n\n\nclass MyOwnTestRunner(DjangoTestSuiteRunner):\n\n    def run_tests(self, test_labels, extra_tests=None, **kwargs):\n        logging.disable(logging.CRITICAL)\nreturn super(MyOwnTestRunner, self).run_tests(test_labels, extra_tests, **\n    kwargs)?_split_?"}
{"nl":"Output data from all columns in a dataframe in pandas","code":"pandas.set_option('display.max_columns', 7)","relevant":"print(self.server_address)?_split_?xmlparser = etree.XMLParser(schema=schema)\nfilenames = ['input1.xml', 'input2.xml', 'input3.xml']\nfor filename in filenames:\n    if validate(xmlparser, filename):\n        print('%s validates' % filename)\nelse:\n    print(\"%s doesn't validate\" % filename)?_split_?def OnRecognition(self, _1, _2, _3, Result):\n    \"\"\"Callback whenever something is recognized.\"\"\"?_split_?"}
{"nl":"Output data from all columns in a dataframe in pandas","code":"pandas.set_option('display.max_columns', None)","relevant":"print(self.server_address)?_split_?xmlparser = etree.XMLParser(schema=schema)\nfilenames = ['input1.xml', 'input2.xml', 'input3.xml']\nfor filename in filenames:\n    if validate(xmlparser, filename):\n        print('%s validates' % filename)\nelse:\n    print(\"%s doesn't validate\" % filename)?_split_?def OnRecognition(self, _1, _2, _3, Result):\n    \"\"\"Callback whenever something is recognized.\"\"\"?_split_?"}
{"nl":"Modifying a subset of rows in a pandas dataframe","code":"df.ix[df.A == 0, 'B'] = np.nan","relevant":"a_names = list(attrs.keys())?_split_?for xxx in range(100):\n    pass?_split_?for child in prop.findall('*'):\n    if 'name' in child.tag:\n        key = child.text\nif 'value' in child.tag:\n    val = child.text\nif val and key:\n    mapping[key] = val\nreturn mapping\npomFile = xml.parse('pom.xml')\nroot = pomFile.getroot()\nmappings = getMappings(root)\nprint(mappings)?_split_?"}
{"nl":"Selecting Element followed by text with Selenium WebDriver","code":"driver.find_element_by_xpath(\"\/\/li\/label\/input[contains(..,'polishpottery')]\")","relevant":"with open(file, 'r') as f:\n    pass?_split_?next(i for i, j in enumerate(lst) if j)?_split_?done.appen(task)?_split_?"}
{"nl":"Ordering a list of dictionaries in python","code":"mylist.sort(key=operator.itemgetter('weight', 'factor'))","relevant":"d = np.repeat(b, a.shape[0], axis=0)?_split_?fig, axs = plt.subplots(figsize=(9, 4), nrows=2, ncols=rowlength)?_split_?pp(list(sections()))?_split_?"}
{"nl":"Ordering a list of dictionaries in python","code":"mylist.sort(key=lambda d: (d['weight'], d['factor']))","relevant":"d = np.repeat(b, a.shape[0], axis=0)?_split_?fig, axs = plt.subplots(figsize=(9, 4), nrows=2, ncols=rowlength)?_split_?pp(list(sections()))?_split_?"}
{"nl":"From a list of lists to a dictionary","code":"{x[1]: x for x in lol}","relevant":"if len(s1) == 0 or len(s2) == 0:\n    pass?_split_?import pika?_split_?joined.fillna(-1, inplace=True)\njoined_orig_types = joined.apply(lambda x: x.astype(orig[x.name]))?_split_?"}
{"nl":"Sorting dictionary keys based on their values","code":"sorted(d, key=lambda k: d[k][1])","relevant":"source.dockerfile?_split_?print(average_function[welcomeString](numbers))?_split_?import pyglet\nsound = pyglet.media.load('mysound.mp3', streaming=False)?_split_?"}
{"nl":"Python: How to round 123 to 100 instead of 100.0?","code":"int(round(123, -2))","relevant":"os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings.dev')?_split_?-autobus?_split_?def some_function(**kwargs):\n    pass?_split_?"}
{"nl":"How do I create a file in python without overwriting an existing file","code":"fd = os.open('x', os.O_WRONLY | os.O_CREAT | os.O_EXCL)","relevant":"ax[2].imshow(np.random.rand(30, 30), interpolation='none', cmap=cmap3)\nax[3].imshow(np.random.rand(30, 30), interpolation='none', cmap=cmap4)?_split_?def my_callback_handler(msg):\n    pass?_split_?text = \"\"\"And the Lord God said unto the serpent,\nBecause thou hast done this, thou art\ncursed above all cattle, and above every\nbeast of the field; upon thy belly shalt\nthou go, and dust shalt thou eat all the\ndays of thy life: And I will put enmity\nbetween thee and the woman, and between\nthy seed and her seed; it shall bruise\nthy head, and thou shalt bruise his\nheel.\n3:15-King James\n\"\"\"?_split_?"}
{"nl":"How to slice a list of strings with space delimiter?","code":"new_list = [x.split()[-1] for x in Original_List]","relevant":"y[(5, 7), (3, 5)] = 3, 5?_split_?d['set1']['name']?_split_?[git]\nintree = True?_split_?"}
{"nl":"Reverse a string","code":"'hello world'[::(-1)]","relevant":"toolz.valmap(f, my_list)?_split_?fig = figure()\nax = fig.add_subplot(1, 1, 1, polar=True)?_split_?list(myseries[myseries == 7].index)?_split_?"}
{"nl":"Reverse a string","code":"s[::(-1)]","relevant":"toolz.valmap(f, my_list)?_split_?fig = figure()\nax = fig.add_subplot(1, 1, 1, polar=True)?_split_?list(myseries[myseries == 7].index)?_split_?"}
{"nl":"Reverse a string","code":"''.join(reversed('foo'))","relevant":"toolz.valmap(f, my_list)?_split_?fig = figure()\nax = fig.add_subplot(1, 1, 1, polar=True)?_split_?list(myseries[myseries == 7].index)?_split_?"}
{"nl":"Reverse a string","code":"''.join(reversed(string))","relevant":"toolz.valmap(f, my_list)?_split_?fig = figure()\nax = fig.add_subplot(1, 1, 1, polar=True)?_split_?list(myseries[myseries == 7].index)?_split_?"}
{"nl":"Reverse a string","code":"'foo'[::(-1)]","relevant":"toolz.valmap(f, my_list)?_split_?fig = figure()\nax = fig.add_subplot(1, 1, 1, polar=True)?_split_?list(myseries[myseries == 7].index)?_split_?"}
{"nl":"Reverse a string","code":"a_string[::(-1)]","relevant":"toolz.valmap(f, my_list)?_split_?fig = figure()\nax = fig.add_subplot(1, 1, 1, polar=True)?_split_?list(myseries[myseries == 7].index)?_split_?"}
{"nl":"Reverse a string","code":"def reversed_string(a_string):\n    return a_string[::(-1)]","relevant":"toolz.valmap(f, my_list)?_split_?fig = figure()\nax = fig.add_subplot(1, 1, 1, polar=True)?_split_?list(myseries[myseries == 7].index)?_split_?"}
{"nl":"Reverse a string","code":"''.join(reversed(s))","relevant":"toolz.valmap(f, my_list)?_split_?fig = figure()\nax = fig.add_subplot(1, 1, 1, polar=True)?_split_?list(myseries[myseries == 7].index)?_split_?"}
{"nl":"Generate a sequence of numbers in Python","code":"\"\"\",\"\"\".join(str(i) for i in range(100) if i % 4 in (1, 2))","relevant":"import re\n\ndef natural_key(string_):\n    \"\"\"See http:\/\/www.codinghorror.com\/blog\/archives\/001018.html\"\"\"\nreturn [(int(s) if s.isdigit() else s) for s in re.split('(\\\\d+)', string_)]?_split_?builder = gtk.Builder()?_split_?root.xpath('\/\/tr\/td\/\/text()')?_split_?"}
{"nl":"How to convert this list into a dictionary","code":"dict([(e[0], int(e[1])) for e in lst])","relevant":"observer = startLogging(stdout, setStdout=False)\ngetLogger().addHandler(StreamHandler(stream=logfile))\ngetLogger().log(100, 'Hello')?_split_?for i in range(10):\n    if i % 2 == 0:\n        evens.append(i)\nelse:\n    odds.append(i)?_split_?import testpackage\nimport testpackage.testmod?_split_?"}
{"nl":"sorting a list of tuples in Python","code":"sorted(list_of_tuples, key=lambda tup: tup[::-1])","relevant":"title = content.split('<title>')[1].split('<\/title>')[0].strip()?_split_?it = iter(seq)?_split_?def capitalizeMatch(m):\n    return m.group(0).capitalize()\n\ndef capitalizeWords(s):\n    pass?_split_?"}
{"nl":"sorting a list of tuples in Python","code":"sorted(list_of_tuples, key=lambda tup: tup[1])","relevant":"title = content.split('<title>')[1].split('<\/title>')[0].strip()?_split_?it = iter(seq)?_split_?def capitalizeMatch(m):\n    return m.group(0).capitalize()\n\ndef capitalizeWords(s):\n    pass?_split_?"}
{"nl":"Concatenating two one-dimensional NumPy arrays","code":"numpy.concatenate([a, b])","relevant":"if __name__ == '__main__':\n    generate_app(options.environment)?_split_?it = iter(it)\nreturn ([next(it) for _ in _range(s)] for s in count(1))?_split_?url = urllib.parse.quote('Tan\\u0131m'.encode('utf8'))?_split_?"}
{"nl":"Writing a list to a file with Python","code":"for item in thelist:\n    thefile.write(('%s\\n' % item))","relevant":"if len(data) == 0:\n    data['field'] = initial_value?_split_?readIncoming(data.subarray(4 + size))?_split_?def check_range(to_test, valid_range):\n    pass?_split_?"}
{"nl":"Writing a list to a file with Python","code":"for item in thelist:\n    pass","relevant":"if len(data) == 0:\n    data['field'] = initial_value?_split_?readIncoming(data.subarray(4 + size))?_split_?def check_range(to_test, valid_range):\n    pass?_split_?"}
{"nl":"Writing a list to a file with Python","code":"pickle.dump(itemlist, outfile)","relevant":"if len(data) == 0:\n    data['field'] = initial_value?_split_?readIncoming(data.subarray(4 + size))?_split_?def check_range(to_test, valid_range):\n    pass?_split_?"}
{"nl":"Writing a list to a file with Python","code":"outfile.write('\\n'.join(itemlist))","relevant":"if len(data) == 0:\n    data['field'] = initial_value?_split_?readIncoming(data.subarray(4 + size))?_split_?def check_range(to_test, valid_range):\n    pass?_split_?"}
{"nl":"SQLAlchemy: a better way for update with declarative?","code":"session.query(User).filter_by(id=123).update({'name': 'Bob Marley'})","relevant":"p = subprocess.Popen(['node'], stdin=subprocess.PIPE, stdout=subprocess.PIPE)\nstdout, stderr = p.communicate(data)\nprint(stdout)?_split_?['e', '1000', 'c']?_split_?dic = {}?_split_?"}
{"nl":"How to send cookies in a post request with the Python Requests library?","code":"r = requests.post('http:\/\/wikipedia.org', cookies=cookie)","relevant":"posy = np.digitize(ydat, locy)?_split_?rx.findall('.1 .12 9.1 98.1 1. 12. 1 12')\nrx.findall('-1 +1 2e9 +2E+09 -2e-9')?_split_?import collections?_split_?"}
{"nl":"How to include third party Python libraries in Google App Engine?","code":"sys.path.insert(0, 'libs')","relevant":"def get_mock_super(tp, obj):\n\n\n    class mock_super(object):\n        pass?_split_?return '\\n'.join(xml)?_split_?def mean(a, axis=None):\n    if a.mask is numpy.ma.nomask:\n        pass?_split_?"}
{"nl":"get current time","code":"datetime.datetime.now()","relevant":"from decorator import decorator\n\ndef convertparameters(*types):\n    pass?_split_?import numpy as np\na = np.array([[0, 1], [0, 2], [0, 3], [0, 4], [1, 5], [1, 6], [1, 7], [2, 8\n    ], [2, 9]])\n_, i = np.unique(a[:, (0)], return_index=True)\nb = np.delete(a, i, axis=0)?_split_?br.show()?_split_?"}
{"nl":"get current time","code":"datetime.datetime.now().time()","relevant":"from decorator import decorator\n\ndef convertparameters(*types):\n    pass?_split_?import numpy as np\na = np.array([[0, 1], [0, 2], [0, 3], [0, 4], [1, 5], [1, 6], [1, 7], [2, 8\n    ], [2, 9]])\n_, i = np.unique(a[:, (0)], return_index=True)\nb = np.delete(a, i, axis=0)?_split_?br.show()?_split_?"}
{"nl":"get current time","code":"strftime('%Y-%m-%d %H:%M:%S', gmtime())","relevant":"from decorator import decorator\n\ndef convertparameters(*types):\n    pass?_split_?import numpy as np\na = np.array([[0, 1], [0, 2], [0, 3], [0, 4], [1, 5], [1, 6], [1, 7], [2, 8\n    ], [2, 9]])\n_, i = np.unique(a[:, (0)], return_index=True)\nb = np.delete(a, i, axis=0)?_split_?br.show()?_split_?"}
{"nl":"get current time","code":"str(datetime.now())","relevant":"from decorator import decorator\n\ndef convertparameters(*types):\n    pass?_split_?import numpy as np\na = np.array([[0, 1], [0, 2], [0, 3], [0, 4], [1, 5], [1, 6], [1, 7], [2, 8\n    ], [2, 9]])\n_, i = np.unique(a[:, (0)], return_index=True)\nb = np.delete(a, i, axis=0)?_split_?br.show()?_split_?"}
{"nl":"get current time","code":"datetime.datetime.time(datetime.datetime.now())","relevant":"from decorator import decorator\n\ndef convertparameters(*types):\n    pass?_split_?import numpy as np\na = np.array([[0, 1], [0, 2], [0, 3], [0, 4], [1, 5], [1, 6], [1, 7], [2, 8\n    ], [2, 9]])\n_, i = np.unique(a[:, (0)], return_index=True)\nb = np.delete(a, i, axis=0)?_split_?br.show()?_split_?"}
{"nl":"Converting hex to int in python","code":"ord('\\xff')","relevant":"for row in DictReader(f, quoting=csv.QUOTE_NONE):\n    yield {k: parse_value(k, v) for k, v in row.items()}?_split_?mylist = ['10', '12', '14']?_split_?def has_delete_permission(self, request, obj=None):\n    pass?_split_?"}
{"nl":"Python Pandas Identify Duplicated rows with Additional Column","code":"df.groupby(['PplNum', 'RoomNum']).cumcount() + 1","relevant":"def areGrayNeighbors(a, b):\n    pass?_split_?output = [(len(new_string[0]), new_string) for new_string in output]?_split_?self.poles.set_text('4')?_split_?"}
{"nl":"How to get UTC time in Python?","code":"datetime.utcnow()","relevant":"content_type, body = MultipartFormdataEncoder().encode(fields, files)?_split_?SearchQuerySet().models(job_opening).filter(recipe_ingredient__in=[\n    'ingredient1', 'ingredient2', 'ingredient3'])?_split_?tables = soup.findAll('table')?_split_?"}
{"nl":"Python: Make last item of array become the first","code":"a[-1:] + a[:-1]","relevant":"import pip?_split_?mystr = mystr[:mystr.find('\"') + 1]?_split_?class SearchForm(forms.Form):\n    pass?_split_?"}
{"nl":"pandas: how to run a pivot with a multi-index?","code":"df.set_index(['year', 'month', 'item']).unstack(level=-1)","relevant":"friends = json.loads(urllib.request.urlopen(request).read()).get('data')\nfor friend in friends:\n    pass?_split_?c = sum(floor(x \/ d) for x in a)\nreturn d?_split_?return number\nwords = ['hello', 'world', 'test', 'word', 'another test']\nnumbers = [1, 2, 3, 4, 5]\npool = ThreadPool(5)\nresults = []\nfor i in range(0, len(words)):\n    results.append(pool.apply_async(foo, args=(words[i], numbers[i])))\npool.close()\npool.join()\nresults = [r.get() for r in results]\nprint(results)?_split_?"}
{"nl":"pandas: how to run a pivot with a multi-index?","code":"df.pivot_table(values='value', index=['year', 'month'], columns='item')","relevant":"friends = json.loads(urllib.request.urlopen(request).read()).get('data')\nfor friend in friends:\n    pass?_split_?c = sum(floor(x \/ d) for x in a)\nreturn d?_split_?return number\nwords = ['hello', 'world', 'test', 'word', 'another test']\nnumbers = [1, 2, 3, 4, 5]\npool = ThreadPool(5)\nresults = []\nfor i in range(0, len(words)):\n    results.append(pool.apply_async(foo, args=(words[i], numbers[i])))\npool.close()\npool.join()\nresults = [r.get() for r in results]\nprint(results)?_split_?"}
{"nl":"How to print\/show an expression in rational number form in python","code":"print('\\n\\x1b[4m' + '3' + '\\x1b[0m' + '\\n2')","relevant":"from selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.support.ui import Select?_split_?with localcontext() as ctx:\n    pass?_split_?\"\"\"\"\"\".join(['X is ', x.__format__('')])?_split_?"}
{"nl":"What is the best way to sort list with custom sorting parameters in Python?","code":"li1.sort(key=lambda x: not x.startswith('b.'))","relevant":"import json?_split_?s = ['sa', 'shi', 'su', 'se', 'so']?_split_?result = []?_split_?"}
{"nl":"How to loop backwards in python?","code":"range(10, 0, -1)","relevant":"def set_country(text):\n    is_change_currency_displayed = driver1.find_element_by_id(\n        'siteSelectorList').is_displayed()\nif not is_change_currency_displayed:\n    one = WebDriverWait(driver1, 10).until(EC.element_to_be_clickable((By.\n        CLASS_NAME, 'selected-currency')))\none.click()\ndiv = WebDriverWait(driver1, 10).until(EC.visibility_of_element_located((By\n    .CLASS_NAME, 'site-selector-list')))\na_tags = div.find_elements_by_tag_name('a')\nfor a in a_tags:\n    pass?_split_?def diff_if_bigger(x, y):\n    return y - x if y > x else 0\ndiff_if_bigger(np.array([5.6, 7.0]), 8)?_split_?result[word] += 1?_split_?"}
{"nl":"Get Element value with minidom with Python","code":"name[0].firstChild.nodeValue","relevant":"bytes = struct.pack('<I', 2029977770)\nprint([hex(ord(byte)) for byte in bytes])\n['0xaa', '0x0', '0xff', '0x78']?_split_?directories = [self._root.template_path],\nimports = ['from utils.view import handle_unicode'],?_split_?import numpy as np?_split_?"}
{"nl":"Simple threading in Python 2.6 using thread.start_new_thread()","code":"thread.start_new_thread(myfunction, ('MyStringHere', 1))","relevant":"with open(to_file, 'w') as out_file:\n    pass?_split_?print(result.get(timeout=1))?_split_?a = A()?_split_?"}
{"nl":"Simple threading in Python 2.6 using thread.start_new_thread()","code":"thread.start_new_thread(myfunction, ('MyStringHere', 1))","relevant":"with open(to_file, 'w') as out_file:\n    pass?_split_?print(result.get(timeout=1))?_split_?a = A()?_split_?"}
{"nl":"How to find all positions of the maximum value in a list?","code":"a.index(max(a))","relevant":"logger_2 = logging.getLogger('log2')?_split_?list(od.values())[:3]\nlist(od.items())[:3]?_split_?if 'same_field_name' in line:\n    h = line.split(',')\nbreak\nf.close()\nf = islice(open(i, 'r'), n, None)\nreader = csv.DictReader(f, fieldnames=h)?_split_?"}
{"nl":"Regex add character to matched string","code":"re.sub('\\\\.(?=[^ .])', '. ', para)","relevant":"df['Body'] = df['Body'].apply(lambda x: [item for item in x if item not in\n    stop])?_split_?foo = Foo()\nfoo.bar(1, 2)\nFoo.__dict__['bar'].__get__(foo, type(foo))(1, 2)?_split_?subst = '\"\\x02\"'\nresult = re.sub(p, subst, test_str)?_split_?"}
{"nl":"how to turn a string of letters embedded in squared brackets into embedded lists","code":"[i.split() for i in re.findall('\\\\[([^\\\\[\\\\]]+)\\\\]', a)]","relevant":"x = np.linspace(0, 10, 41)\ny = np.sin(x)\nplt.plot(x, y)\nplt.grid(b=True, which='major', color='k', linestyle='-')\nplt.grid(b=True, which='minor', color='r', linestyle='-', alpha=0.2)\nplt.minorticks_on()\nplt.show()?_split_?success_list = map(count_success, args)\nprint(sum(success_list))\nprint(sum(success_list))?_split_?G.add_edge(3, 4, color='g', weight=6)\npos = nx.circular_layout(G)?_split_?"}
{"nl":"extract item from list of dictionaries","code":"[d for d in a if d['name'] == 'pluto']","relevant":"import re\ndata = (\n    'part 1;\"this is ; part 2;\";\\'this is ; part 3\\';part 4;this \"is ; part\" 5'\n    )\nPATTERN = re.compile('((?:[^;\"\\']|\"[^\"]*\"|\\'[^\\']*\\')+)')\nprint(PATTERN.split(data)[1::2])?_split_?id = Column(Integer, primary_key=True)?_split_?self.assertListEqual(expected_urls, css_urls)?_split_?"}
{"nl":"extract item from list of dictionaries","code":"[d for d in a if d['name'] == 'pluto']","relevant":"import re\ndata = (\n    'part 1;\"this is ; part 2;\";\\'this is ; part 3\\';part 4;this \"is ; part\" 5'\n    )\nPATTERN = re.compile('((?:[^;\"\\']|\"[^\"]*\"|\\'[^\\']*\\')+)')\nprint(PATTERN.split(data)[1::2])?_split_?id = Column(Integer, primary_key=True)?_split_?self.assertListEqual(expected_urls, css_urls)?_split_?"}
{"nl":"Python: simplest way to get list of values from dict?","code":"list(d.values())","relevant":"class ApiCallHandler(handler.ApiCallHandler):\n\n    def CheckIsAdmin(self):\n        \"\"\"Determine if admin access should be granted based on the\n           auth cookie passed with the request.\"\"\"\nlogin_cookie = self.request.cookies.get('dev_appserver_login', '')\nmatch = cookie_re.search(login_cookie)\nif match and match.group(1\n    ) == MY_SECRET_KEY and 'X-appcfg-api-version' in self.request.headers:\n    return True\nelse:\n    self.redirect('\/_ah\/login')\nreturn False?_split_?ca.add_collection(p)\nplt.savefig('test.pdf')?_split_?def incremental_range(start, stop, step, inc):\n    value = start\nwhile value < stop:\n    yield value\nvalue += step\nstep += inc\nlist(incremental_range(0, 20, 1, 1))\n[0, 1, 3, 6, 10, 15]?_split_?"}
{"nl":"String manipulation in Cython","code":"re.sub(' +', ' ', s)","relevant":"s.dropna().plot()?_split_?soup = BeautifulSoup(data)\nprint([elm['data-js'] for elm in soup.find_all(attrs={'data-js': True})])?_split_?return {n: g.drop('_merge', 1) for n, g in df3.groupby('_merge')}?_split_?"}
{"nl":"Set execute bit for a file using python","code":"os.chmod('my_script.sh', 484)","relevant":"usage()?_split_?from PIL import Image?_split_?robjects.r('source(\"some_file.R\")')?_split_?"}
{"nl":"Pandas to_csv call is prepending a comma","code":"df.to_csv('c:\\\\data\\\\t.csv', index=False)","relevant":"for x in seq:\n    if bar(x):\n        result.append(foo(x))?_split_?data_dict[el[0]].append(el[1])?_split_?def _getconv(dtype):\n    typ = dtype.type\nif issubclass(typ, np.bool_):\n    return lambda x: bool(int(x))?_split_?"}
{"nl":"Python regex to remove all words which contains number","code":"re.sub('\\\\w*\\\\d\\\\w*', '', words).strip()","relevant":"sys.path.insert(0, os.path.join(SITE_ROOT, 'app_name'))\nMEDIA_ROOT = os.path.join(SITE_ROOT, 'media')?_split_?def pairs(lst):\n    i = iter(lst)\nfirst = prev = item = next(i)\nfor item in i:\n    yield prev, item\nprev = item\nyield item, first?_split_?os.system('python')\ndir()\nquit()\ndir()?_split_?"}
{"nl":"How can I control the keyboard and mouse with Python?","code":"dogtail.rawinput.click(100, 100)","relevant":"authhandler = urllib.request.HTTPBasicAuthHandler(passman)\nopener = urllib.request.build_opener(authhandler)\nurllib.request.install_opener(opener)\npagehandle = urllib.request.urlopen(theurl)?_split_?{'oranges': 'big', 'apples': 'green', 'bananas': 'rotten'}?_split_?os.chdir('..')?_split_?"}
{"nl":"How to parse dates with -0400 timezone string in python?","code":"datetime.strptime('2009\/05\/13 19:19:30 -0400', '%Y\/%m\/%d %H:%M:%S %z')","relevant":"def render(self, context):\n    names = self.cyclevars.resolve(context)?_split_?text = \"\"\"\nval: \"hello\\\\n\\\\rnew line\\\"\n\"\"\"\ntext\ndata = yaml.load(text)\ndata?_split_?now = datetime.datetime.now()?_split_?"}
{"nl":"Python - Locating the position of a regex match in a string?","code":"re.search('\\\\bis\\\\b', String).start()","relevant":"item[name] = value?_split_?conn = boto.ec2.connect_to_region('eu-west-1')\nreservations = conn.get_all_instances()\nfor res in reservations:\n    for inst in res.instances:\n        if 'Name' in inst.tags:\n            print('%s (%s) [%s]' % (inst.tags['Name'], inst.id, inst.state))\nelse:\n    print('%s [%s]' % (inst.id, inst.state))?_split_?cursor = conn.cursor()?_split_?"}
{"nl":"Python - Locating the position of a regex match in a string?","code":"re.search('is', String).start()","relevant":"item[name] = value?_split_?conn = boto.ec2.connect_to_region('eu-west-1')\nreservations = conn.get_all_instances()\nfor res in reservations:\n    for inst in res.instances:\n        if 'Name' in inst.tags:\n            print('%s (%s) [%s]' % (inst.tags['Name'], inst.id, inst.state))\nelse:\n    print('%s [%s]' % (inst.id, inst.state))?_split_?cursor = conn.cursor()?_split_?"}
{"nl":"How to input an integer tuple from user?","code":"tuple(map(int, input().split(',')))","relevant":"import scipy.ndimage\nmask = data > 20\nlabels, num_labels = scipy.ndimage.label(mask)\ncusters = scipy.ndimage.find_objects(labels)?_split_?link.retrbinary('RETR ' + filename, downloaded.write)?_split_?ps.apply('{:,}'.format)\nps?_split_?"}
{"nl":"How to input an integer tuple from user?","code":"tuple(int(x.strip()) for x in input().split(','))","relevant":"import scipy.ndimage\nmask = data > 20\nlabels, num_labels = scipy.ndimage.label(mask)\ncusters = scipy.ndimage.find_objects(labels)?_split_?link.retrbinary('RETR ' + filename, downloaded.write)?_split_?ps.apply('{:,}'.format)\nps?_split_?"}
{"nl":"How to replace unicode characters in string with something else python?","code":"str.decode('utf-8').replace('\\u2022', '*').encode('utf-8')","relevant":"itemgetter(5, 13, 25)(a)?_split_?@pytest.fixture(params=['a', pytest.mark.skipif(True, reason='reason')('b'),\n    'c'])\ndef fx1(request):\n    return request.param\n\ndef test_spam(fx1):\n    assert fx1?_split_?from bokeh.models import ColumnDataSource?_split_?"}
{"nl":"How to replace unicode characters in string with something else python?","code":"str.decode('utf-8').replace('\\u2022', '*')","relevant":"itemgetter(5, 13, 25)(a)?_split_?@pytest.fixture(params=['a', pytest.mark.skipif(True, reason='reason')('b'),\n    'c'])\ndef fx1(request):\n    return request.param\n\ndef test_spam(fx1):\n    assert fx1?_split_?from bokeh.models import ColumnDataSource?_split_?"}
{"nl":"How to convert ndarray to array?","code":"np.zeros((3, 3)).ravel()","relevant":"if __name__ == '__main__':\n    futures = []\nfor x in range(10):\n    futures.append(pool.apply_async(requests.get, ['http:\/\/example.com\/']))\nfor future in futures:\n    pass?_split_?if getattr(cls, '_decl_class_registry', None) is None:\n    pass?_split_?import random\nx = {(1): 3, (4): 5, (6): 7}\nx = {(1): 3, (4): 5, (6): 7, 'a': 9, 'z': 'x'}\nk = random.choice(list(x.keys()))\nx[k]?_split_?"}
{"nl":"What OS am I running on","code":"import platform\nplatform.system()","relevant":"import sys?_split_?self.name = name?_split_?image.save('hsvwheel_txt.png')?_split_?"}
{"nl":"What OS am I running on","code":"import platform\nplatform.release()","relevant":"import sys?_split_?self.name = name?_split_?image.save('hsvwheel_txt.png')?_split_?"}
{"nl":"What OS am I running on","code":"print(os.name)","relevant":"import sys?_split_?self.name = name?_split_?image.save('hsvwheel_txt.png')?_split_?"}
{"nl":"What is the most pythonic way to exclude elements of a list that start with a specific character?","code":"[x for x in my_list if not x.startswith('#')]","relevant":"somestring = re.sub(' rec$', '', somestring)?_split_?child2 = Blueprint('child2', __name__)?_split_?from operator import itemgetter?_split_?"}
{"nl":"Python string formatting when string contains \"%s\" without escaping","code":"\"\"\"Day old bread, 50% sale {0}\"\"\".format('today')","relevant":"limit = radius ** 2 + epsilon\nfor x, y, z in it.product(list(range(-radius, radius + 1)), repeat=3):\n    if x ** 2 + y ** 2 + z ** 2 <= limit:\n        yield x + x0, y + y0, z + z0?_split_?x = ax.get_xlim()?_split_?soup.select('table.drug-table.data-table.table.table-condensed.table-bordered')?_split_?"}
{"nl":"List of Tuples (string, float)with NaN How to get the min value?","code":"min(list, key=lambda x: float('inf') if math.isnan(x[1]) else x[1])","relevant":"config.read('config.ini')\nprint(config.get('job1', 'mailto'))?_split_?url_dev = 'localhost:8080'?_split_?DEBUG = False?_split_?"}
{"nl":"Python: Finding average of a nested list","code":"a = [(sum(x) \/ len(x)) for x in zip(*a)]","relevant":"a[-2:] = [0, 4]\nm = a != 0\n(m[1:] > m[:-1]).sum() + m[0]?_split_?df.xs('size', axis=1, level=1)?_split_?pass?_split_?"}
{"nl":"How do I add custom field to Python log format string?","code":"logging.info('Log message', extra={'app_name': 'myapp'})","relevant":"s = s[:-1]?_split_?depart = ctx.exp(-3) * p?_split_?set_query_parameter('\/scr.cgi?q=1&ln=0', 'SOMESTRING', 1)?_split_?"}
{"nl":"finding non-numeric rows in dataframe in pandas?","code":"df.applymap(lambda x: isinstance(x, (int, float)))","relevant":"leg = plt.legend(bbox_to_anchor=(1.005, 1), loc=2, borderaxespad=0.0)\nfor l in leg.get_lines():\n    pass?_split_?def myfunc():\n    for i in range(1, 1001):\n        for i2 in range(i, 1001):\n            pass?_split_?print(f(a=3, b=5))\nprint(f(a=3, b=5, *[1, 2, 3]))?_split_?"}
{"nl":"Sort list of mixed strings based on digits","code":"sorted(l, key=lambda x: int(re.search('\\\\d+', x).group(0)))","relevant":"cdvirtualenv?_split_?unittest.main()?_split_?if len(sys.argv) >= 2:\n    sm.ReadConfig(Filename=sys.argv[1])\ndel sys.argv[1]?_split_?"}
{"nl":"Function to close the window in Tkinter","code":"self.root.destroy()","relevant":"tokens = [word for sent in sent_tokenize(text) for word in word_tokenize(sent)]?_split_?mpl.rcParams['path.simplify'] = False?_split_?captcha_count = CaptchaStore.objects.count()\nself.assertEqual(captcha_count, 1)?_split_?"}
{"nl":"Calcuate mean for selected rows for selected columns in pandas data frame","code":"df.iloc[:, ([2, 5, 6, 7, 8])].mean(axis=1)","relevant":"self.data = [1, 2, 3]?_split_?import numpy as np\na = list(range(1000))?_split_?db = sqlite3.connect('.\/foo.db')?_split_?"}
{"nl":"How to filter by sub-level index in Pandas","code":"df[df.index.map(lambda x: x[1].endswith('0630'))]","relevant":"from dateutil.parser import parse?_split_?pass?_split_?sqrt(2)\nimport math\nmath.sqrt(2)?_split_?"}
{"nl":"Deleting row with Flask-SQLAlchemy","code":"db.session.delete(page)","relevant":"a ^ b?_split_?bars\nbars[2].date?_split_?df.apply(lambda r: pd.Series({'mean': r.mean(), 'std': r.std()})).transpose()?_split_?"}
{"nl":"How do I convert a unicode to a string at the Python level?","code":"\"\"\"\"\"\".join(chr(ord(c)) for c in 'Andr\\xc3\\xa9')","relevant":"from google.appengine.ext import db?_split_?while last < len(seq):\n    pass?_split_?globs[modname] = m?_split_?"}
{"nl":"How do I convert a unicode to a string at the Python level?","code":"\"\"\"\"\"\".join(chr(ord(c)) for c in 'Andr\\xc3\\xa9').decode('utf8')","relevant":"from google.appengine.ext import db?_split_?while last < len(seq):\n    pass?_split_?globs[modname] = m?_split_?"}
{"nl":"Directory listing","code":"for (dirname, dirnames, filenames) in os.walk('.'):\n    for subdirname in dirnames:\n        print(os.path.join(dirname, subdirname))\n    for filename in filenames:\n        pass","relevant":"fig = plt.figure()\nax = fig.add_subplot(111)?_split_?[map(dict.get, list(range(1, 6))) for _ in range(10)]?_split_?return 'Lists are of different length.'?_split_?"}
{"nl":"Directory listing","code":"os.listdir(path)","relevant":"fig = plt.figure()\nax = fig.add_subplot(111)?_split_?[map(dict.get, list(range(1, 6))) for _ in range(10)]?_split_?return 'Lists are of different length.'?_split_?"}
{"nl":"How to rename all folders?","code":"os.rename(dir, dir + '!')","relevant":"request_token = get_request_token()?_split_?def otherfunc():\n    now()?_split_?variance = round(sum(dataSample) \/ len(dataSample))?_split_?"}
{"nl":"Pythonic way to insert every 2 elements in a string","code":"\"\"\"-\"\"\".join(a + b for a, b in zip(s[::2], s[1::2]))","relevant":"A[A <= 0] += 1?_split_?def parse_datetime(a_datetime, account):\n    dt = parser.parse(a_datetime)\nif dt.tzinfo is None:\n    tz = pytz.timezone(account.timezone_name)\ndt = tz.localize(dt)\nreturn dt?_split_?m.load()\nencoding = m.buffer(blob)?_split_?"}
{"nl":"Printing numbers in python","code":"print('%.3f' % 3.1415)","relevant":"def register():\n    pass?_split_?tup = [1, 2, 3], [7, 8, 9]?_split_?all_keys = set(chain.from_iterable(dict_list))?_split_?"}
{"nl":"Add element to a json in python","code":"data[0]['f'] = var","relevant":"for a in dir(MyClass):\n    pass?_split_?import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(style='whitegrid')?_split_?print(df.to_latex(index=None, column_format='rrr'))?_split_?"}
{"nl":"Retrieving python module path","code":"print(a_module.__file__)","relevant":"s = 'this is a long line with a bunch of text for sure and goes on and on ..'\nbrk = s.find(' ', 45)\nif brk == -1:\n    pass?_split_?d = dict(input().split() for _ in range(n))\nprint(d)?_split_?root.title('MyApp')?_split_?"}
{"nl":"Retrieving python module path","code":"print(os.getcwd())","relevant":"s = 'this is a long line with a bunch of text for sure and goes on and on ..'\nbrk = s.find(' ', 45)\nif brk == -1:\n    pass?_split_?d = dict(input().split() for _ in range(n))\nprint(d)?_split_?root.title('MyApp')?_split_?"}
{"nl":"Retrieving python module path","code":"path = os.path.abspath(amodule.__file__)","relevant":"s = 'this is a long line with a bunch of text for sure and goes on and on ..'\nbrk = s.find(' ', 45)\nif brk == -1:\n    pass?_split_?d = dict(input().split() for _ in range(n))\nprint(d)?_split_?root.title('MyApp')?_split_?"}
{"nl":"Padding a list in python with particular value","code":"self.myList.extend([0] * (4 - len(self.myList)))","relevant":"image_file = open('image_file.jpeg')?_split_?[x for x in data if x['site'] == 'Superuser']?_split_?last_index = word.index(letter, last_index + 1)?_split_?"}
{"nl":"Fastest Way to Drop Duplicated Index in a Pandas DataFrame","code":"df[~df.index.duplicated()]","relevant":"return render(request, 'mytemplate.html', {'form': form})?_split_?session.add(ed_user)\nsession.commit()?_split_?t = Tree('*', [Tree('1'), Tree('2'), Tree('+', [Tree('3'), Tree('4')])])?_split_?"}
{"nl":"Is there a more pythonic way of exploding a list over a function's arguments?","code":"foo(*i)","relevant":"b.mask = np.zeros(500)\nb.mask[498] = True\nt = timeit.Timer(\n    'c=b.view(np.ndarray)[~b.mask[:,0]]; np.apply_along_axis(test, 1, c)',\n    'from __main__ import test, b, ma, np')?_split_?edges = hull_points[1:] - hull_points[:-1]?_split_?return Counter(pop_flat).most_common()\nmost_pop([(1920, 1939), (1911, 1944), (1920, 1955), (1938, 1939)])[0]?_split_?"}
{"nl":"Generate list of numbers in specific format","code":"[('%.2d' % i) for i in range(16)]","relevant":"max = []\nwhile not q.empty():\n    pass?_split_?products = Product.objects.all()[:10]?_split_?for i in codecs.open(file, 'r', 'utf8').readlines():\n    pass?_split_?"}
{"nl":"Summarizing a dictionary of arrays in Python","code":"sorted(iter(mydict.items()), key=lambda tup: sum(tup[1]), reverse=True)[:3]","relevant":"p = 1?_split_?action = run_once(my_function)\nwhile 1:\n    if predicate:\n        action()?_split_?b = np.repeat(888, a.shape)\nb[indices] = a[indices]?_split_?"}
{"nl":"Summarizing a dictionary of arrays in Python","code":"heapq.nlargest(3, iter(mydict.items()), key=lambda tup: sum(tup[1]))","relevant":"p = 1?_split_?action = run_once(my_function)\nwhile 1:\n    if predicate:\n        action()?_split_?b = np.repeat(888, a.shape)\nb[indices] = a[indices]?_split_?"}
{"nl":"get index of character in python list","code":"['a', 'b'].index('b')","relevant":"2, 0, 68, 9, 1, 48, 40, 5, 64, 176, 23?_split_?if not name:\n    pass?_split_?max_validation = lambda x: x[0] < x[1] < x[2] and len(x) == 3?_split_?"}
{"nl":"How to set font size of Matplotlib axis Legend?","code":"plt.setp(legend.get_title(), fontsize='xx-small')","relevant":"o.foo = x\no.save()?_split_?ax.get_xaxis().set_visible(False)\nax.get_yaxis().set_visible(False)\nplt.subplots_adjust(hspace=0.0)\nouter = gridspec.GridSpec(2, 1, height_ratios=[1, 6])\ngs1 = gridspec.GridSpecFromSubplotSpec(1, 1, subplot_spec=outer[0])\ngs2 = gridspec.GridSpecFromSubplotSpec(2, 1, subplot_spec=outer[1], hspace=0.05\n    )\nfor cell in gs1:\n    do_stuff(cell)\nfor cell in gs2:\n    do_stuff(cell)\nplt.show()?_split_?import datetime?_split_?"}
{"nl":"Python: Convert a string to an integer","code":"int('  23  ')","relevant":"false = False?_split_?t1.start()\nt2.start()\nt1.join()\nt2.join()?_split_?return np.asarray(res)?_split_?"}
{"nl":"How to extract the n-th elements from a list of tuples in python?","code":"[x[1] for x in elements]","relevant":"setattr(self, attr_name, fn(self))?_split_?def test(id):\n    self.done.append('Test ' + id)?_split_?return all(A[p] < A[i] for i in get_neighbors(p, len(A)))?_split_?"}
{"nl":"getting the opposite diagonal of a numpy array","code":"np.diag(np.rot90(array))","relevant":"numpy.save(file=f, arr=my_array)?_split_?import numpy as np\ndf = pd.DataFrame({'listcol': [[1, 2, 3], [4, 5, 6]]})\nX = pd.concat([pd.DataFrame(v, index=np.repeat(k, len(v))) for k, v in list(df.\n    listcol.to_dict().items())])?_split_?array([[0, 1, 2, 3, 4, 5], [6, 7, 8, 9, 10, 11], [12, 13, 14, 15, 16, 17],\n    [18, 19, 20, 21, 22, 23], [24, 25, 26, 27, 28, 29], [30, 31, 32, 33, 34,\n    35]])?_split_?"}
{"nl":"Convert list of tuples to list?","code":"list(chain.from_iterable(a))","relevant":"def rreload(module):\n    \"\"\"Recursively reload modules.\"\"\"?_split_?print(a.my_member)\nprint(MyClass.my_member)?_split_?next((i for i, v in enumerate(a) if i == 666), None)?_split_?"}
{"nl":"Removing white space from txt with python","code":"re.sub('\\\\s{2,}', '|', line.strip())","relevant":"return format_string.format(quotient, unit)?_split_?raise Exception('No valid solution exists!')?_split_?fig = plt.figure()\nplt.clf()?_split_?"}
{"nl":"Limiting floats to two decimal points","code":"print(('%.2f' % a))","relevant":"my_cursor = my_db.cursor()?_split_?assert_array_equal(b, c)?_split_?aTag = pyparsing.makeHTMLTags('a')[0]\ntarget = embedTag + pyparsing.Optional(aTag)\nresult = target.searchString(\n    \"\"\".....   \n    <object....><embed>.....<\/embed><\/object><br \/><a href=\"blah\">blah<\/a>\n    \"\"\"\n    )\nprint(result.dump())?_split_?"}
{"nl":"Limiting floats to two decimal points","code":"print(('{0:.2f}'.format(a)))","relevant":"my_cursor = my_db.cursor()?_split_?assert_array_equal(b, c)?_split_?aTag = pyparsing.makeHTMLTags('a')[0]\ntarget = embedTag + pyparsing.Optional(aTag)\nresult = target.searchString(\n    \"\"\".....   \n    <object....><embed>.....<\/embed><\/object><br \/><a href=\"blah\">blah<\/a>\n    \"\"\"\n    )\nprint(result.dump())?_split_?"}
{"nl":"Limiting floats to two decimal points","code":"print(('{0:.2f}'.format(round(a, 2))))","relevant":"my_cursor = my_db.cursor()?_split_?assert_array_equal(b, c)?_split_?aTag = pyparsing.makeHTMLTags('a')[0]\ntarget = embedTag + pyparsing.Optional(aTag)\nresult = target.searchString(\n    \"\"\".....   \n    <object....><embed>.....<\/embed><\/object><br \/><a href=\"blah\">blah<\/a>\n    \"\"\"\n    )\nprint(result.dump())?_split_?"}
{"nl":"Limiting floats to two decimal points","code":"print(('%.2f' % round(a, 2)))","relevant":"my_cursor = my_db.cursor()?_split_?assert_array_equal(b, c)?_split_?aTag = pyparsing.makeHTMLTags('a')[0]\ntarget = embedTag + pyparsing.Optional(aTag)\nresult = target.searchString(\n    \"\"\".....   \n    <object....><embed>.....<\/embed><\/object><br \/><a href=\"blah\">blah<\/a>\n    \"\"\"\n    )\nprint(result.dump())?_split_?"}
{"nl":"Limiting floats to two decimal points","code":"('%.2f' % 13.9499999)","relevant":"my_cursor = my_db.cursor()?_split_?assert_array_equal(b, c)?_split_?aTag = pyparsing.makeHTMLTags('a')[0]\ntarget = embedTag + pyparsing.Optional(aTag)\nresult = target.searchString(\n    \"\"\".....   \n    <object....><embed>.....<\/embed><\/object><br \/><a href=\"blah\">blah<\/a>\n    \"\"\"\n    )\nprint(result.dump())?_split_?"}
{"nl":"Limiting floats to two decimal points","code":"('%.2f' % 3.14159)","relevant":"my_cursor = my_db.cursor()?_split_?assert_array_equal(b, c)?_split_?aTag = pyparsing.makeHTMLTags('a')[0]\ntarget = embedTag + pyparsing.Optional(aTag)\nresult = target.searchString(\n    \"\"\".....   \n    <object....><embed>.....<\/embed><\/object><br \/><a href=\"blah\">blah<\/a>\n    \"\"\"\n    )\nprint(result.dump())?_split_?"}
{"nl":"Limiting floats to two decimal points","code":"float('{0:.2f}'.format(13.95))","relevant":"my_cursor = my_db.cursor()?_split_?assert_array_equal(b, c)?_split_?aTag = pyparsing.makeHTMLTags('a')[0]\ntarget = embedTag + pyparsing.Optional(aTag)\nresult = target.searchString(\n    \"\"\".....   \n    <object....><embed>.....<\/embed><\/object><br \/><a href=\"blah\">blah<\/a>\n    \"\"\"\n    )\nprint(result.dump())?_split_?"}
{"nl":"Limiting floats to two decimal points","code":"'{0:.2f}'.format(13.95)","relevant":"my_cursor = my_db.cursor()?_split_?assert_array_equal(b, c)?_split_?aTag = pyparsing.makeHTMLTags('a')[0]\ntarget = embedTag + pyparsing.Optional(aTag)\nresult = target.searchString(\n    \"\"\".....   \n    <object....><embed>.....<\/embed><\/object><br \/><a href=\"blah\">blah<\/a>\n    \"\"\"\n    )\nprint(result.dump())?_split_?"}
{"nl":"How to I load a tsv file into a Pandas DataFrame?","code":"DataFrame.from_csv('c:\/~\/trainSetRel3.txt', sep='\\t')","relevant":"import numpy as np?_split_?class Foo:\n\n    def bar(self):\n        print('bar')\nreturn 7?_split_?raw_data['Mycol'] = pd.to_datetime(raw_data['Mycol'], format=\n    '%d%b%Y:%H:%M:%S.%f')?_split_?"}
{"nl":"How to set UTC offset for datetime?","code":"dateutil.parser.parse('2013\/09\/11 00:17 +0900')","relevant":"first, remainder = l.split(None, maxsplit=1)?_split_?receiver = lambda film=film: self.onFilmSet(self, film)\nself.connect(menuItem_Film, SIGNAL('triggered()'), receiver)?_split_?axis.set_minor_locator(ticker.NullLocator())?_split_?"}
{"nl":"Passing list of parameters to SQL in psycopg2","code":"cur.mogrify('SELECT * FROM table WHERE column IN %s;', ((1, 2, 3),))","relevant":"app.connect('doctree-resolved', do_something)?_split_?d_with_str_keys = dict((str(k), v) for k, v in d.items())?_split_?[x for x in result if x['filesize'] > 1024 and x['filesize'] < 4096]?_split_?"}
{"nl":"How would I sum a multi-dimensional array in the most succinct python?","code":"sum([sum(x) for x in [[1, 2, 3, 4], [2, 4, 5, 6]]])","relevant":"import netifaces\ngateway_info = netifaces.gateways()\nprint(gateway_info)?_split_?for i in range(1, len(input) + 1):\n    els = [list(itertools.chain.from_iterable(x)) for x in itertools.\n        combinations(input, i)]\ncombs.extend(els)?_split_?s = pd.Series(np.arange(10))?_split_?"}
{"nl":"Access an arbitrary element in a dictionary in Python","code":"next(iter(dict.values()))","relevant":"return wrappingFunc?_split_?with open(os.path.join(path, filename), 'r') as f:\n    for line in f:\n        pass?_split_?super(Immutable, self).__setattr__('value', value)?_split_?"}
{"nl":"Access an arbitrary element in a dictionary in Python","code":"next(iter(list(dict.values())))","relevant":"return wrappingFunc?_split_?with open(os.path.join(path, filename), 'r') as f:\n    for line in f:\n        pass?_split_?super(Immutable, self).__setattr__('value', value)?_split_?"}
{"nl":"Pandas: aggregate based on filter on another column","code":"df.groupby(['Month', 'Fruit']).sum().unstack(level=0)","relevant":"class Question(Base):\n    pass?_split_?def get_id(toParse):\n    pass?_split_?shelf = shelve.open(filename)\nshelf['users'] = ['David', 'Abraham']?_split_?"}
{"nl":"sorting list of tuples by arbitrary key","code":"sorted(mylist, key=lambda x: order.index(x[1]))","relevant":"set(a) & set(xyz)\nset([0, 9, 4, 6, 7])?_split_?self.assertEqual(list(device.get_ips()), [ip1, ip2, ip3])?_split_?title = content.split('<title>')[1].split('<\/title>')[0].strip()?_split_?"}
{"nl":"Python - Sort a list of dics by value of dict`s dict value","code":"sorted(persons, key=lambda x: x['passport']['birth_info']['date'])","relevant":"yield ' ' * (i - above) + line?_split_?def on_epoch_end(self, batch, logs={}):\n    self.losses.append(logs.get('loss'))?_split_?assert datetime.datetime.now() == FAKE_TIME?_split_?"}
{"nl":"How can I remove the fragment identifier from a URL?","code":"urlparse.urldefrag('http:\/\/www.address.com\/something#something')","relevant":"CallbackVar = namedtuple('CallbackVar', ['change_callback', 'read_callback'])?_split_?herear = numpy.asarray(here)?_split_?r = tree.xpath('bar')\nr[0].tag?_split_?"}
{"nl":"How to download to a specific directory with Python?","code":"urllib.request.urlretrieve('http:\/\/example.com\/file.ext', '\/path\/to\/dir\/filename.ext')","relevant":"list_display = 'species', 'latin_name', 'family', 'status'\nsearch_fields = ['species', 'latin_name']\nprepopulated_fields = {'slug': ['species']}?_split_?result.replace('\\\\', '')?_split_?def FILE(back=0):\n    return sys._getframe(back + 1).f_code.co_filename\n\ndef FUNC(back=0):\n    return sys._getframe(back + 1).f_code.co_name\n\ndef WHERE(back=0):\n    frame = sys._getframe(back + 1)\nreturn '%s\/%s %s()' % (os.path.basename(frame.f_code.co_filename), frame.\n    f_lineno, frame.f_code.co_name)?_split_?"}
{"nl":"removing duplicates of a list of sets","code":"list(set(frozenset(item) for item in L))","relevant":"istitle = word.istitle()?_split_?s = 'abc\\\\u20ac\\\\U00010302\\\\U0010fffd'\nlen(s)\nfor c in s:\n    pass?_split_?if hasattr(module, 'deinit'):\n    pass?_split_?"}
{"nl":"removing duplicates of a list of sets","code":"[set(item) for item in set(frozenset(item) for item in L)]","relevant":"istitle = word.istitle()?_split_?s = 'abc\\\\u20ac\\\\U00010302\\\\U0010fffd'\nlen(s)\nfor c in s:\n    pass?_split_?if hasattr(module, 'deinit'):\n    pass?_split_?"}
{"nl":"How to terminate process from Python using pid?","code":"p.terminate()","relevant":"i0 = select?_split_?def stream_response(request):\n    return StreamingHttpResponse(stream_response_generator())?_split_?QWebPage.__init__(self)?_split_?"}
{"nl":"Delete all objects in a list","code":"del mylist[:]","relevant":"template_name = 'your_app_name\/questions.html'?_split_?import urllib.request?_split_?t = timespec()?_split_?"}
{"nl":"How to throw an error window in Python in Windows","code":"ctypes.windll.user32.MessageBoxW(0, 'Error', 'Error', 0)","relevant":"import fileinput\nfor l in fileinput.input('names.txt', inplace=1):\n    if l != 'tom\\n':\n        pass?_split_?with open(input_csv, 'w') as csvfile:\n    csv_writer = csv.writer(csvfile, delimiter=',')?_split_?prod_id in [1, 3]\nfrom_date = '2010-01-01 00:00:00'?_split_?"}
{"nl":"Remove empty strings from a list of strings","code":"str_list = list([_f for _f in str_list if _f])","relevant":"\"\"\"Calculates the population standard deviation.\"\"\"?_split_?main()?_split_?return '#%02X%02X%02X' % (r, g, b)?_split_?"}
{"nl":"How to remove whitespace in BeautifulSoup","code":"re.sub('[\\\\ \\\\n]{2,}', '', yourstring)","relevant":"import pdb\npdb.set_trace()?_split_?ax.plot(theta, mapr(r))\nax.set_yticks(list(range(0, 90, 10)))?_split_?m = imaplib.IMAP4_SSL('imap.gmail.com')?_split_?"}
{"nl":"Dot notation string manipulation","code":"re.sub('\\\\.[^.]+$', '', s)","relevant":"listy[2].append(1)\nlisty?_split_?pd.DataFrame(df.values * df2.values, columns=df.columns, index=df.index)?_split_?it1 = iter(lst)\nit2 = iter(lst)\nnext(it1)\nnext(it2)\nlist(it1)\nnext(it2)?_split_?"}
{"nl":"Removing elements from an array that are in another array","code":"A[np.all(np.any(A - B[:, (None)], axis=2), axis=0)]","relevant":"from mom.codec import base85?_split_?print(a)?_split_?df.index.get_loc('2015-04-25')?_split_?"}
{"nl":"write to csv from DataFrame python pandas","code":"a.to_csv('test.csv', cols=['sum'])","relevant":"list(map(lambda x: x.__setitem__(1, -2), lol))?_split_?dateutil.parser.parse(date_string)?_split_?class MySpider(scrapy.Spider):\n    pass?_split_?"}
{"nl":"call a Python script from another Python script","code":"exec(compile(open('test2.py').read(), 'test2.py', 'exec'))","relevant":"cPickle.dump(root.config(), f, -1)\ncPickle.dump(root.sclX.config(), f, -1)?_split_?def mul(self, y):\n    pass?_split_?o = C2()?_split_?"}
{"nl":"call a Python script from another Python script","code":"subprocess.call('test1.py', shell=True)","relevant":"cPickle.dump(root.config(), f, -1)\ncPickle.dump(root.sclX.config(), f, -1)?_split_?def mul(self, y):\n    pass?_split_?o = C2()?_split_?"}
{"nl":"How do I sort a zipped list in Python?","code":"sorted(zipped, key=lambda x: x[1])","relevant":"row = cursor.fetchmany(size=1)\nwhile row is not None:\n    row = cursor.fetchmany(size=1)?_split_?while sys.argv:\n    arg = sys.argv.pop(0)?_split_?return math.floor(f * 10 ** n) \/ 10 ** n?_split_?"}
{"nl":"How do I sort a zipped list in Python?","code":"zipped.sort(key=lambda t: t[1])","relevant":"row = cursor.fetchmany(size=1)\nwhile row is not None:\n    row = cursor.fetchmany(size=1)?_split_?while sys.argv:\n    arg = sys.argv.pop(0)?_split_?return math.floor(f * 10 ** n) \/ 10 ** n?_split_?"}
{"nl":"Sorting a dictionary by value then by key","code":"sorted(list(y.items()), key=lambda x: (x[1], x[0]), reverse=True)","relevant":"gen.shuffle(y.T)\nprint(np.sort(np.partition(y, -10, axis=1)[:, -10:], axis=1))?_split_?my_user.username?_split_?__all__.append(name)?_split_?"}
{"nl":"Using BeautifulSoup to select div blocks within HTML","code":"soup.find_all('div', class_='crBlock ')","relevant":"vowels = {'A', 'I', 'O', 'U', 'E', 'a', 'i', 'o', 'u', 'e'}?_split_?x = x ^ y\ny = y ^ x?_split_?while True:\n    pixels = list(imdata.next()[:3] + imdata.next()[:3] + imdata.next()[:3])\nbyte = 0\nfor c in range(7):\n    pass?_split_?"}
{"nl":"Remove list of indices from a list in Python","code":"[element for i, element in enumerate(centroids) if i not in index]","relevant":"print('*****')?_split_?{k: v for k, v in zip(list(range(1, 5)), list(range(7, 11)))}\n{x: (x + 6) for x in range(1, 5)}?_split_?ax2.plot(x, y, 'bo')?_split_?"}
{"nl":"Comparing two lists in Python","code":"list(set(listA) & set(listB))","relevant":"for i in np.arange(totfigs):\n    x = np.random.random(50)\nboxes.append(x)\nplt.boxplot(boxes, vert=0)\nplt.show()?_split_?import random\nwith open('file.txt') as f:\n    pass?_split_?text2save = str(text.get(1.0, END))\nf.write(text2save)?_split_?"}
{"nl":"http file downloading and saving","code":"testfile = urllib.request.URLopener()\ntestfile.retrieve('http:\/\/randomsite.com\/file.gz', 'file.gz')","relevant":"DBHOST = 'localhost'?_split_?while 1:\n    _, frame = cap.read()\nhsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\nlower_white = np.array([0, 0, 0], dtype=np.uint8)\nupper_white = np.array([0, 0, 255], dtype=np.uint8)\nmask = cv2.inRange(hsv, lower_white, upper_white)\nres = cv2.bitwise_and(frame, frame, mask=mask)\ncv2.imshow('frame', frame)\ncv2.imshow('mask', mask)\ncv2.imshow('res', res)\nk = cv2.waitKey(5) & 255\nif k == 27:\n    break\ncv2.destroyAllWindows()?_split_?raise EverythingLostException('we are doomed!')?_split_?"}
{"nl":"http file downloading and saving","code":"urllib.request.urlretrieve('http:\/\/randomsite.com\/file.gz', 'file.gz')","relevant":"DBHOST = 'localhost'?_split_?while 1:\n    _, frame = cap.read()\nhsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\nlower_white = np.array([0, 0, 0], dtype=np.uint8)\nupper_white = np.array([0, 0, 255], dtype=np.uint8)\nmask = cv2.inRange(hsv, lower_white, upper_white)\nres = cv2.bitwise_and(frame, frame, mask=mask)\ncv2.imshow('frame', frame)\ncv2.imshow('mask', mask)\ncv2.imshow('res', res)\nk = cv2.waitKey(5) & 255\nif k == 27:\n    break\ncv2.destroyAllWindows()?_split_?raise EverythingLostException('we are doomed!')?_split_?"}
{"nl":"http file downloading and saving","code":"file_name = wget.download(file_url)","relevant":"DBHOST = 'localhost'?_split_?while 1:\n    _, frame = cap.read()\nhsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\nlower_white = np.array([0, 0, 0], dtype=np.uint8)\nupper_white = np.array([0, 0, 255], dtype=np.uint8)\nmask = cv2.inRange(hsv, lower_white, upper_white)\nres = cv2.bitwise_and(frame, frame, mask=mask)\ncv2.imshow('frame', frame)\ncv2.imshow('mask', mask)\ncv2.imshow('res', res)\nk = cv2.waitKey(5) & 255\nif k == 27:\n    break\ncv2.destroyAllWindows()?_split_?raise EverythingLostException('we are doomed!')?_split_?"}
{"nl":"Accented characters in Matplotlib","code":"ax.set_yticklabels(['\\xe9', '\\xe3', '\\xe2'])","relevant":"df.loc[df['guest'] < df['home'], 'winner'] = df['home_name']\ndf.loc[df['guest'] == df['home'], 'winner'] = 'tie'?_split_?opener.addheaders = [('User-agent', 'Mozilla\/5.0')]?_split_?img = cv2.imdecode(array, 1)\ncv2.imshow('window', img)?_split_?"}
{"nl":"How to get a list of all integer points in an n-dimensional cube using python?","code":"list(itertools.product(list(range(-x, y)), repeat=dim))","relevant":"another_matrix = numpy.load('output.mat')?_split_?buffer = cStringIO.StringIO()\ncodecinfo = codecs.lookup('utf8')\nwrapper = codecs.StreamReaderWriter(buffer, codecinfo.streamreader,\n    codecinfo.streamwriter)\nwrapper.writelines(['list of', 'unicode strings'])?_split_?col_list = list(df)\nprint(col_list[2:5])\n['C', 'D', 'E']?_split_?"}
{"nl":"How can I convert a unicode string into string literals in Python 2.7?","code":"print(s.encode('unicode_escape'))","relevant":"n -= 1?_split_?for k, v in sorted(od.items()):\n    if isinstance(v, dict):\n        pass?_split_?ulist.append(utest)?_split_?"}
{"nl":"python - How to format variable number of arguments into a string?","code":"'Hello %s' % ', '.join(my_args)","relevant":"self.image.fill(Color('#DDDDDD'))?_split_?urllib.request.install_opener(urllib.request.build_opener(urllib.request.HTTPHandler(debuglevel=1)))\nurllib.request.urlopen(url)?_split_?x = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])?_split_?"}
{"nl":"Python regex search AND split","code":"re.split('(ddd)', 'aaa bbb ccc ddd eee fff', 1)","relevant":"def transform_coeff_struct(main_list):\n    new_list = []\nfor ii, inner_list in enumerate(main_list):\n    for jj, some_tuple in enumerate(inner_list):\n        if ii == 0:\n            new_list.append([some_tuple])\nelse:\n    new_list[jj].append(some_tuple)\nreturn new_list?_split_?l.append('')?_split_?return self.end_time + 86400000?_split_?"}
{"nl":"Python regex search AND split","code":"re.split('(d(d)d)', 'aaa bbb ccc ddd eee fff', 1)","relevant":"def transform_coeff_struct(main_list):\n    new_list = []\nfor ii, inner_list in enumerate(main_list):\n    for jj, some_tuple in enumerate(inner_list):\n        if ii == 0:\n            new_list.append([some_tuple])\nelse:\n    new_list[jj].append(some_tuple)\nreturn new_list?_split_?l.append('')?_split_?return self.end_time + 86400000?_split_?"}
{"nl":"Convert list of dictionaries to Dataframe","code":"pd.DataFrame(d)","relevant":"prefixes = {'aa': 4, 'ca': 6, 'ja': 9, 'du': 10, 'zz': 1}?_split_?min_distance = distance(fList[0], fList[1])\nfor p0, p1 in itertools.combinations(fList, 2):\n    min_distance = min(min_distance, distance(p0, p1))?_split_?z = \"{1:xxxx}{2:xxxx}{3:{10:xxxx}}{4:'xxxx'}\"?_split_?"}
{"nl":"How to split string into words that do not contain whitespaces in python?","code":"\"\"\"This is a string\"\"\".split()","relevant":"df = df.stack(cols).reset_index(cols).rename(columns={(0): 'value'})\ndf.info()?_split_?class MyPlayer(game_engine.Player, Base):\n    pass?_split_?for path in sys.path:\n    if os.path.exists(path) and os.path.isdir(path):\n        fileName = os.path.join(path, file)?_split_?"}
{"nl":"How to split string into words that do not contain whitespaces in python?","code":"\"\"\"This     is a     string\"\"\".split()","relevant":"df = df.stack(cols).reset_index(cols).rename(columns={(0): 'value'})\ndf.info()?_split_?class MyPlayer(game_engine.Player, Base):\n    pass?_split_?for path in sys.path:\n    if os.path.exists(path) and os.path.isdir(path):\n        fileName = os.path.join(path, file)?_split_?"}
{"nl":"python pandas: apply a function with arguments to a series","code":"my_series.apply(your_function, args=(2, 3, 4), extra_kw=1)","relevant":"for i in range(3):\n    newurl[i] = parsed[i]\nfor i in range(4, 6):\n    newurl[i] = ''\nprint(urlparse.urlunparse(newurl))?_split_?import urllib.request, urllib.parse, urllib.error\nimport gzip\nimport io\nreq = urllib.request.urlopen('http:\/\/www.stream-urls.de\/webradio')\nbuf = io.StringIO(req.read())\nf = gzip.GzipFile(fileobj=buf)\nhtml = f.read()\nprint(html)?_split_?stoks = pd.Index(['s{:04d}'.format(i) for i in range(4000)])?_split_?"}
{"nl":"Python: How to remove all duplicate items from a list","code":"woduplicates = list(set(lseperatedOrblist))","relevant":"post_login_url = 'http:\/\/0.0.0.0:8080\/'?_split_?import pandas?_split_?d.update(('@' + k, v) for k, v in t.attrib.items())\nd['text'] = t.text\nreturn d?_split_?"}
{"nl":"Sum of product of combinations in a list","code":"sum([(i * j) for i, j in list(itertools.combinations(l, 2))])","relevant":"if serializer.is_valid():\n    serializer.save()?_split_?import csv\ninfname = 'csv.csv'\noutfname = 'csv_stripped.csv'\ncols = ['col1', 'col2', 'col3']\nwith open(infname) as inf:\n    with open(outfname, 'w+') as outf:\n        reader = csv.DictReader(inf)\nwriter = csv.DictWriter(outf, cols, extrasaction='ignore')\nwriter.writeheader()\nfor line in reader:\n    writer.writerow(line)?_split_?getcontext().prec = 6\nDecimal('3.0')\nDecimal('3.1415926535')\nDecimal('3.1415926535') + Decimal('2.7182818285')\ngetcontext().rounding = ROUND_UP\nDecimal('3.1415926535') + Decimal('2.7182818285')?_split_?"}
{"nl":"Using variables in Python regular expression","code":"re.compile('{}-\\\\d*'.format(user))","relevant":"print(p.parse('<foo>BAR<foo>BAZ<\/foo><\/foo>'))?_split_?buffer = ''?_split_?H, xedges, yedges = np.histogram2d(x2, y2)\nxedges, yedges = np.meshgrid(xedges[:-1], yedges[:-1])?_split_?"}
{"nl":"In Python, how do I convert all of the items in a list to floats?","code":"[float(i) for i in lst]","relevant":"for i in range(int_start, int_end):\n    yield i * increment?_split_?def __init__(self):\n    pass?_split_?ans = -(-x) ** (1.0 \/ 3.0)?_split_?"}
{"nl":"How can I multiply all items in a list together with Python?","code":"from functools import reduce\nreduce(lambda x, y: x * y, [1, 2, 3, 4, 5, 6])","relevant":"inds = {e: i for i, e in enumerate(unique)}\nB = np.vectorize(inds.get)(A)?_split_?def is_valid_response(type_whitelist, content_type_header):\n    for type_regex in type_whitelist:\n        if re.search(type_regex, content_type_header):\n            return True\nreturn False\n\ndef process_response(self, request, response, spider):\n    \"\"\"\n        Only allow HTTP response types that that match the given list of \n        filtering regexs\n        \"\"\"\ntype_whitelist = getattr(spider, 'response_type_whitelist', None)\ncontent_type_header = response.headers.get('content-type', None)?_split_?return json.dumps(recursive_asdict(data))?_split_?"}
{"nl":"How to write a tuple of tuples to a CSV file using Python","code":"writer.writerow(A)","relevant":"lst = []?_split_?df['cumsum'] = df['reset'].cumsum()\ndf['des'] = df.groupby(['cumsum'])['val'].cumsum()\nprint(df)\ndf = df.drop(['desired_col', 'cumsum'], axis=1)?_split_?from datetime import date?_split_?"}
{"nl":"How to write a tuple of tuples to a CSV file using Python","code":"writer.writerows(A)","relevant":"lst = []?_split_?df['cumsum'] = df['reset'].cumsum()\ndf['des'] = df.groupby(['cumsum'])['val'].cumsum()\nprint(df)\ndf = df.drop(['desired_col', 'cumsum'], axis=1)?_split_?from datetime import date?_split_?"}
{"nl":"python, format string","code":"\"\"\"{} %s {}\"\"\".format('foo', 'bar')","relevant":"window = AccessibleObjectFromWindow(FindWindow('My Window'))?_split_?df.set_index('A')?_split_?k = int(eval(input()))\nprint(ashton(s, k))?_split_?"}
{"nl":"Replace a string in list of lists","code":"example = [x.replace('\\r\\n', '') for x in example]","relevant":"cloud = np.random.rand(50, 3)?_split_?f.write(data)?_split_?graph = GraphAPI(data['access_token'][0])?_split_?"}
{"nl":"Python: split elements of a list","code":"[i.partition('\\t')[-1] for i in l if '\\t' in i]","relevant":"cpplib.call_callback(callback)?_split_?from http.cookiejar import CookieJar?_split_?B = np.array([[7, 8, 9], [10, 11, 12]])?_split_?"}
{"nl":"Splitting a string by using two substrings in Python","code":"re.search('Test(.*)print', testStr, re.DOTALL)","relevant":"def __lt__(self, other):\n    return self.defaultorder() < other.defaultorder()?_split_?result[::2] = list1?_split_?with open('trialWrite1.py', 'wb') as fileobj:\n    newFile = csv.writer(fileobj)\nfor row in zip(firstNames, midterm1Scores):\n    newFile.writerow(row)?_split_?"}
{"nl":"python, locating and clicking a specific button with selenium","code":"next = driver.find_element_by_css_selector('li.next>a')","relevant":"@blueprint.context_processor\ndef additional_context():\n    if request.endpoint not in sidebar_data_views:\n        return {}\nvar1, var2, var3 = generate_sidebar_data()\nreturn {'var1': var1, 'var2': var2, 'var3': var3}\n\n@blueprint.route('\/')\n@include_sidebar_data\ndef frontpage():\n    return render_template('template.html')?_split_?arr = np.array([1, 2, 1, 2, 3, 6, 9])\n(2 < arr) & (arr < 6)\n(2 < arr) | (arr < 6)\n(2 < arr) ^ (arr < 6)?_split_?dc.SetPen(wx.Pen('GREEN', 4))?_split_?"}
{"nl":"Getting file size in Python?","code":"os.stat('C:\\\\Python27\\\\Lib\\\\genericpath.py').st_size","relevant":"46?_split_?for row in array:\n    for i, col in enumerate(row):\n        col_size[i] = max(col_size.get(i, 0), len(col))\nncols = len(col_size)\nresult = []\nfor row in array:\n    row = list(row) + [''] * (ncols - len(row))\nfor i, col in enumerate(row):\n    row[i] = col.ljust(col_size[i])\nresult.append(row)\nreturn result?_split_?pass?_split_?"}
{"nl":"how do i return a string from a regex match in python","code":"imtag = re.match('<img.*?>', line).group(0)","relevant":"Window.geometry('500x500+80+80')?_split_?a\naa\na\na?_split_?for i in range(1, len(remainder)):\n    pass?_split_?"}
{"nl":"How to change folder names in python?","code":"os.rename('Joe Blow', 'Blow, Joe')","relevant":"with opener(fname) as f:\n    pass?_split_?s = 'aabbccdd'\n\"\"\"-\"\"\".join(s[i:i + 2] for i in range(0, len(s), 2))?_split_?response = requests.get(url, stream=True)\nresponse.raw.decode_content = True\nevents = ElementTree.iterparse(response.raw)\nfor event, elem in events:\n    pass?_split_?"}
{"nl":"How to find overlapping matches with a regexp?","code":"re.findall('(?=(\\\\w\\\\w))', 'hello')","relevant":"b = np.array(a)?_split_?app.test_client_class = TestClient?_split_?np.allclose(a, collapse_dims(a))?_split_?"}
{"nl":"express binary literals","code":"bin(173)","relevant":"with open('myfile.tmx', 'w') as f:\n    f.write(\n        '<?xml version=\"1.0\" encoding=\"UTF-8\" ?><!DOCTYPE tmx SYSTEM \"tmx14a.dtd\">'\n        )\nElementTree.ElementTree(tree).write(f, 'utf-8')?_split_?return len(msg.split())?_split_?\"\"\"Parse main category search page and extract subcategory search link.\"\"\"?_split_?"}
{"nl":"express binary literals","code":"int('01010101111', 2)","relevant":"with open('myfile.tmx', 'w') as f:\n    f.write(\n        '<?xml version=\"1.0\" encoding=\"UTF-8\" ?><!DOCTYPE tmx SYSTEM \"tmx14a.dtd\">'\n        )\nElementTree.ElementTree(tree).write(f, 'utf-8')?_split_?return len(msg.split())?_split_?\"\"\"Parse main category search page and extract subcategory search link.\"\"\"?_split_?"}
{"nl":"express binary literals","code":"int('010101', 2)","relevant":"with open('myfile.tmx', 'w') as f:\n    f.write(\n        '<?xml version=\"1.0\" encoding=\"UTF-8\" ?><!DOCTYPE tmx SYSTEM \"tmx14a.dtd\">'\n        )\nElementTree.ElementTree(tree).write(f, 'utf-8')?_split_?return len(msg.split())?_split_?\"\"\"Parse main category search page and extract subcategory search link.\"\"\"?_split_?"}
{"nl":"express binary literals","code":"int('0b0010101010', 2)","relevant":"with open('myfile.tmx', 'w') as f:\n    f.write(\n        '<?xml version=\"1.0\" encoding=\"UTF-8\" ?><!DOCTYPE tmx SYSTEM \"tmx14a.dtd\">'\n        )\nElementTree.ElementTree(tree).write(f, 'utf-8')?_split_?return len(msg.split())?_split_?\"\"\"Parse main category search page and extract subcategory search link.\"\"\"?_split_?"}
{"nl":"express binary literals","code":"bin(21)","relevant":"with open('myfile.tmx', 'w') as f:\n    f.write(\n        '<?xml version=\"1.0\" encoding=\"UTF-8\" ?><!DOCTYPE tmx SYSTEM \"tmx14a.dtd\">'\n        )\nElementTree.ElementTree(tree).write(f, 'utf-8')?_split_?return len(msg.split())?_split_?\"\"\"Parse main category search page and extract subcategory search link.\"\"\"?_split_?"}
{"nl":"express binary literals","code":"int('11111111', 2)","relevant":"with open('myfile.tmx', 'w') as f:\n    f.write(\n        '<?xml version=\"1.0\" encoding=\"UTF-8\" ?><!DOCTYPE tmx SYSTEM \"tmx14a.dtd\">'\n        )\nElementTree.ElementTree(tree).write(f, 'utf-8')?_split_?return len(msg.split())?_split_?\"\"\"Parse main category search page and extract subcategory search link.\"\"\"?_split_?"}
{"nl":"Delete digits in Python (Regex)","code":"re.sub('$\\\\d+\\\\W+|\\\\b\\\\d+\\\\b|\\\\W+\\\\d+$', '', s)","relevant":"def __init__(self, id, **attr):\n    self.id = id?_split_?import sys?_split_?return [(key, other) for key in keys for other in prefixes[key[1:]]]?_split_?"}
{"nl":"Delete digits in Python (Regex)","code":"re.sub('\\\\b\\\\d+\\\\b', '', s)","relevant":"def __init__(self, id, **attr):\n    self.id = id?_split_?import sys?_split_?return [(key, other) for key in keys for other in prefixes[key[1:]]]?_split_?"}
{"nl":"Delete digits in Python (Regex)","code":"s = re.sub('^\\\\d+\\\\s|\\\\s\\\\d+\\\\s|\\\\s\\\\d+$', ' ', s)","relevant":"def __init__(self, id, **attr):\n    self.id = id?_split_?import sys?_split_?return [(key, other) for key in keys for other in prefixes[key[1:]]]?_split_?"}
{"nl":"Python Split String","code":"s.split(':', 1)[1]","relevant":"from scipy import misc?_split_?strs = \"\"\"c:\\\\desktop\notebook\"\"\"\nprint(strs)\nstrs = 'c:\\\\desktop\\\\notebook'\nprint(strs)\nprint(repr(strs))?_split_?for l in range(0, length1):\n    count = sum(f != f1 for f, f1 in zip(fragement, islice(Text, 1, l + k)))\nif count <= Num_mismatches:\n    count2[i] += 1?_split_?"}
{"nl":"How can I split this comma-delimited string in Python?","code":"print(s.split(','))","relevant":"from django.db.models import Count?_split_?print(arith.parseString('A+B+C*D+E')[0])?_split_?ds1 = set([tuple(values) for values in df1.values.tolist()])\nds2 = set([tuple(values) for values in df2.values.tolist()])\nds1.symmetric_difference(ds2)\nprint(df1, '\\n\\n')\nprint(df2, '\\n\\n')\nprint(pd.DataFrame(list(ds1.difference(ds2))), '\\n\\n')\nprint(pd.DataFrame(list(ds2.difference(ds1))), '\\n\\n')?_split_?"}
{"nl":"How can I split this comma-delimited string in Python?","code":"mystring.split(',')","relevant":"from django.db.models import Count?_split_?print(arith.parseString('A+B+C*D+E')[0])?_split_?ds1 = set([tuple(values) for values in df1.values.tolist()])\nds2 = set([tuple(values) for values in df2.values.tolist()])\nds1.symmetric_difference(ds2)\nprint(df1, '\\n\\n')\nprint(df2, '\\n\\n')\nprint(pd.DataFrame(list(ds1.difference(ds2))), '\\n\\n')\nprint(pd.DataFrame(list(ds2.difference(ds1))), '\\n\\n')?_split_?"}
{"nl":"How to remove parentheses only around single words in a string","code":"re.sub('\\\\((\\\\w+)\\\\)', '\\\\1', s)","relevant":"with db:\n    pass?_split_?c[1], np.cross(a[1], b[1])?_split_?\"\"\"hello {name}, how are you {name}, welcome {name}\"\"\".format(name='john')?_split_?"}
{"nl":"how to open a url in python","code":"webbrowser.open_new(url)","relevant":"losses = tf.reshape(tf.concat(1, losses), [-1, size])?_split_?1012337203685477580 \/ 2\n1012337203685477580 \/\/ 2?_split_?photos = glob.glob('photos\/*.jpg')?_split_?"}
{"nl":"how to open a url in python","code":"webbrowser.open('http:\/\/example.com')","relevant":"losses = tf.reshape(tf.concat(1, losses), [-1, size])?_split_?1012337203685477580 \/ 2\n1012337203685477580 \/\/ 2?_split_?photos = glob.glob('photos\/*.jpg')?_split_?"}
{"nl":"PyQt QPushButton Background color","code":"self.pushButton.setStyleSheet('background-color: red')","relevant":"if request.method == 'GET' and self.url_social.match(request.path):\n    return redirect('\/')?_split_?return Decimal.from_float(other)?_split_?class Connection(connection.SSHConnection):\n\n    def serviceStarted(self):\n        Channel = forwarding.SSHListenClientForwardingChannel\nFactory = forwarding.SSHListenForwardingFactory\nfactory = Factory(self, (REMOTEHOST, REMOTEPORT), Channel)\ns = reactor.listenTCP(LOCALPORT, factory)?_split_?"}
{"nl":"Zip and apply a list of functions over a list of values in Python","code":"[x(y) for x, y in zip(functions, values)]","relevant":"for p in procs:\n    pass?_split_?for grp in re.findall('\"[^\"]*\\\\.\"|(\"[^\"]*\")*([^\".]*\\\\.)', text):\n    pass?_split_?encoded = '&'.join('%s=%s' % (key, quote(parameters[key], safe='+')) for\n    key in ordered(list(parameters.keys())))?_split_?"}
{"nl":"How do I modify the width of a TextCtrl in wxPython?","code":"wx.TextCtrl(self, -1, size=(300, -1))","relevant":"offset = transforms.ScaledTranslation(0.0, 0.5, fig.dpi_scale_trans)?_split_?class Device(models.Model):\n    pass?_split_?import os?_split_?"}
{"nl":"Displaying a grayscale Image","code":"imshow(imageArray, cmap='Greys_r')","relevant":"def convert_pbtxt_to_graphdef(filename):\n    \"\"\"Returns a `tf.GraphDef` proto representing the data in the given pbtxt file.\n  Args:\n    filename: The name of a file containing a GraphDef pbtxt (text-formatted\n      `tf.GraphDef` protocol buffer data).\n  Returns:\n    A `tf.GraphDef` protocol buffer.\n  \"\"\"\nwith tf.gfile.FastGFile(filename, 'r') as f:\n    graph_def = tf.GraphDef()\nfile_content = f.read()\ntext_format.Merge(file_content, graph_def)?_split_?filtered = img.copy()?_split_?r.clipboard_append('i can has clipboardz?')\nr.destroy()?_split_?"}
{"nl":"How can I replace all the NaN values with Zero's in a column of a pandas dataframe","code":"df.fillna(0)","relevant":"plt.show()?_split_?from twisted.python.log import startLogging\nstartLogging(stdout)?_split_?from itertools import starmap?_split_?"}
{"nl":"how to export a table dataframe in pyspark to csv?","code":"df.toPandas().to_csv('mycsv.csv')","relevant":"url_adapter = appctx.url_adapter?_split_?from OpenGL.GL import *?_split_?user = User.objects.get(pk=uid)\nprint(user.username, user.get_full_name(), user.email)?_split_?"}
{"nl":"how to export a table dataframe in pyspark to csv?","code":"df.write.csv('mycsv.csv')","relevant":"url_adapter = appctx.url_adapter?_split_?from OpenGL.GL import *?_split_?user = User.objects.get(pk=uid)\nprint(user.username, user.get_full_name(), user.email)?_split_?"}
{"nl":"Sum the second value of each tuple in a list","code":"sum(x[1] for x in structure)","relevant":"return os.access(dirname, os.W_OK)?_split_?wb = xlwt.Workbook()?_split_?my_list = np.zeros((3,), dtype=np.object)?_split_?"}
{"nl":"How to sum the nlargest() integers in groupby","code":"df.groupby('STNAME')['COUNTY_POP'].agg(lambda x: x.nlargest(3).sum())","relevant":"class Meta:\n    pass?_split_?file_names = [fn for fn in os.listdir(relevant_path) if any(fn.endswith(ext\n    ) for ext in included_extensions)]?_split_?arr = [6, 4, 2, 1]\nfor i in range(len(arr)):\n    if i < 2:\n        pass?_split_?"}
{"nl":"what would be the python code to add time to a specific timestamp?","code":"datetime.strptime('21\/11\/06 16:30', '%d\/%m\/%y %H:%M')","relevant":"my_string = 'ABC_123_SPEED_X 123'?_split_?a = np.arange(1, 26).astype('float32')\na.shape = 5, 5\na[1:4, 1:4] = np.nan\na\na[np.isfinite(a)]?_split_?foo = list(range(100))?_split_?"}
{"nl":"How to properly determine current script directory in Python?","code":"os.path.dirname(os.path.abspath(__file__))","relevant":"mytime = datetime(2013, 6, 11, 6, 0, 0)\ndiff_seconds = (mytime - since).total_seconds()?_split_?for x in xs:\n    pass?_split_?print(map(hex, a))?_split_?"}
{"nl":"How can I do multiple substitutions using regex in python?","code":"re.sub('(.)', '\\\\1\\\\1', text.read(), 0, re.S)","relevant":"max_im = Image.fromarray(maxi)?_split_?cjson.decode(obj)?_split_?blah = models.CharField('blah', max_length=200)\n\ndef save(self, force_insert=False, force_update=False):\n    if not self.blah:\n        self.blah = 'hello'?_split_?"}
{"nl":"Python convert tuple to string","code":"\"\"\"\"\"\".join(('a', 'b', 'c', 'd', 'g', 'x', 'r', 'e'))","relevant":"res = urllib.request.urlopen(req)?_split_?iterator = (i * i for i in range(100) if i % 3 == 0)?_split_?xd.sheet_names\ndf = xd.parse(xd.sheet_names[-1], header=None)\ndf?_split_?"}
{"nl":"How to get full path of current file's directory in Python?","code":"os.path.dirname(os.path.abspath(__file__))","relevant":"data.append(curRow)?_split_?prev = next(itercars)\nfor car in itercars:\n    prev = car?_split_?pipe = r.pipeline()\nfor availability in availabilities:\n    pass?_split_?"}
{"nl":"variable number of digit in format string","code":"\"\"\"{0:.{1}%}\"\"\".format(value, digits)","relevant":"class Capturer:\n\n    def capture(self, s_url, s_filename):\n        s_file_out, httpmessage = urllib.request.urlretrieve(s_url, s_filename,\n            self.report)\n\ndef report(self, i_count, i_chunk, i_size):\n    print('retrived %5d of %5d bytes' % (i_count * i_chunk, i_size))\n\ndef test():\n    pass?_split_?ss.shutdown()?_split_?print(b['indices']['client_ind_2']['index'])?_split_?"}
{"nl":"Get current URL in Python","code":"self.request.url","relevant":"df?_split_?def Implementation(request):\n    pass?_split_?unq, unq_idx = np.unique(A[0], return_inverse=True)\nunq_sum = np.bincount(unq_idx, weights=A[1])\nunq_counts = np.bincount(unq_idx)\nunq_avg = unq_sum \/ unq_counts\nunq\nunq_avg?_split_?"}
{"nl":"Print a variable selected by a random number","code":"random_choice = random.choice(choices)","relevant":"names = load_names()?_split_?for sub_elem in json_obj:\n    pass?_split_?movie.formats.append(format)?_split_?"}
{"nl":"Python: Sum string lengths","code":"length = sum(len(s) for s in strings)","relevant":"font_names = [f.name for f in font_objects]\nprint(font_names)?_split_?sys.stdout.flush()?_split_?if p.x == 1 and p.y == 1:\n    del p_list[idx]?_split_?"}
{"nl":"Sort a list by multiple attributes?","code":"s = sorted(s, key=lambda x: (x[1], x[2]))","relevant":"FileName = input('Please input a Valid File Name : ')\nif os.path.isfile('C:\/Users\/Brads\/Documents\/' + FileName + '.txt'):\n    pass?_split_?a = np.arange(1, 26).astype('float32')?_split_?max(v1 - v0 for v0, v1 in zip(values[:-1], values[1:]))\nmax(v1 - v0 for v0, v1 in zip(values, islice(values, 1, None)))?_split_?"}
{"nl":"Sort a list by multiple attributes?","code":"s.sort(key=operator.itemgetter(1, 2))","relevant":"FileName = input('Please input a Valid File Name : ')\nif os.path.isfile('C:\/Users\/Brads\/Documents\/' + FileName + '.txt'):\n    pass?_split_?a = np.arange(1, 26).astype('float32')?_split_?max(v1 - v0 for v0, v1 in zip(values[:-1], values[1:]))\nmax(v1 - v0 for v0, v1 in zip(values, islice(values, 1, None)))?_split_?"}
{"nl":"How to disable query cache with mysql.connector","code":"con.commit()","relevant":"session.rollback()?_split_?conn = psycopg2.connect('host=localhost4 port=5432 dbname=cpn')?_split_?def parse_pure_int(s):\n    pass?_split_?"}
{"nl":"Filtering a list of strings based on contents","code":"[k for k in lst if 'ab' in k]","relevant":"ax.set_xticklabels([])?_split_?with open('data.pickle', 'wb') as f:\n    pickle.dump(a, f)?_split_?driver.get('http:\/\/www.nbe.gov.in\/asr\/neet_pdf\/')?_split_?"}
{"nl":"How do I find the first letter of each word?","code":"output = ''.join(item[0].upper() for item in input.split())","relevant":"y?_split_?if not os.path.exists(file_path):\n    pass?_split_?from functools import reduce\n[reduce(int.__mul__, (l[k] for k in range(len(l)) if 2 ** k & n + (n + n.\n    bit_length()).bit_length())) for n in range(1, 2 ** len(l) - len(l))]?_split_?"}
{"nl":"Get name of primary field of Django model","code":"CustomPK._meta.pk.name","relevant":"cur = col.find()\ncur\nfor doc in cur:\n    pass?_split_?result, unans = traceroute(target, maxttl=32)?_split_?xdiff = [(x[n] - x[n - 1]) for n in range(1, len(x))]\nxdiff?_split_?"}
{"nl":"How to count the number of words in a sentence?","code":"len(s.split())","relevant":"data = urllib.request.urlopen('http:\/\/aol.com').read()\nd = pq(data)\nfirst_ul = d('ul:first')?_split_?def application(environ, start_response):\n    status = '200 OK'?_split_?ets = pd.date_range(start, end, freq='D')?_split_?"}
{"nl":"numpy matrix vector multiplication","code":"np.einsum('ji,i->j', a, b)","relevant":"import numpy as np\na, b = 1, 1\nn = 7\nr = 3\ny, x = np.ogrid[-a:n - a, -b:n - b]\nmask = x * x + y * y <= r * r\narray = np.ones((n, n))\narray[mask] = 255?_split_?class Foobar(object):\n    pass?_split_?my_dict = DictWithPWL('en_US', 'mywords.txt')\nmy_checker = SpellChecker(my_dict)\nmy_checker.set_text('This is sme sample txt with erors.')\nfor error in my_checker:\n    pass?_split_?"}
{"nl":"check what version of Python is running","code":"sys.version","relevant":"['592-650', '448-527', '382-447', '264-318', '319-381', '118-198',\n    '528-591', '728-798', '54-117', '199-263', '651-727']?_split_?leadingzerocounts = [0] * m?_split_?n_nodes = 10?_split_?"}
{"nl":"check what version of Python is running","code":"sys.version_info","relevant":"['592-650', '448-527', '382-447', '264-318', '319-381', '118-198',\n    '528-591', '728-798', '54-117', '199-263', '651-727']?_split_?leadingzerocounts = [0] * m?_split_?n_nodes = 10?_split_?"}
{"nl":"Format number using LaTeX notation in Python","code":"print('\\\\num{{{0:.2g}}}'.format(1000000000.0))","relevant":"left, right = ax.get_xlim()?_split_?ret['imageurl'] = '\/images\/notfound.png'?_split_?PADDING = '{'?_split_?"}
{"nl":"Python initializing a list of lists","code":"x = [[] for i in range(3)]","relevant":"__metaclass__ = ValidateType?_split_?eastern.localize(datetime(2002, 10, 27, 1, 30, 0), is_dst=None)?_split_?lon = [(float(x) \/ float(y)) for x, y in a['GPSInfo'][4]]?_split_?"}
{"nl":"How to apply django\/jinja2 template filters 'escape' and 'linebreaks' correctly?","code":"{{my_variable | forceescape | linebreaks}}","relevant":"idxes = [idx for idx, val in enumerate(s) if val in letters]?_split_?import random?_split_?soup = BeautifulSoup(urllib.request.urlopen(url).read())?_split_?"}
{"nl":"Split a list of tuples into sub-lists of the same tuple field","code":"zip(*[(1, 4), (2, 5), (3, 6)])","relevant":"r = ''?_split_?class MyApp(App):\n\n    def build(self):\n        return MyWidget()\nif __name__ == '__main__':\n    MyApp().run()?_split_?def do_the_robot_thing(m, n):\n    pass?_split_?"}
{"nl":"Split a list of tuples into sub-lists of the same tuple field","code":"[list(group) for key, group in itertools.groupby(data, operator.itemgetter(1))]","relevant":"r = ''?_split_?class MyApp(App):\n\n    def build(self):\n        return MyWidget()\nif __name__ == '__main__':\n    MyApp().run()?_split_?def do_the_robot_thing(m, n):\n    pass?_split_?"}
{"nl":"How can I turn a string into a list in Python?","code":"list('hello')","relevant":"kernelIn = numpy.array([[0, -2, 0], [-2, 11, -2], [0, -2, 0]])\ninKSize = len(kernelIn)?_split_?fp.set_preference('general.useragent.override', 'whater_useragent')\nfp.update_preferences()?_split_?upform = UserProfileForm(instance=user.get_profile())?_split_?"}
{"nl":"pandas dataframe create new columns and fill with calculated values from same df","code":"df['A_perc'] = df['A'] \/ df['sum']","relevant":"'\/bin\/bash',\n'-c',?_split_?def delete(self):\n    files = WidgetFile.objects.filter(widget=self)\nif files:\n    for file in files:\n        file.delete()\nsuper(Widget, self).delete()?_split_?from .. import fruit?_split_?"}
{"nl":"Getting a list of all subdirectories in the current directory","code":"os.walk(directory)","relevant":"def carmanufacturers(self):\n    pass?_split_?logger = logging.getLogger(__name__)?_split_?format(1.679, '.2f')?_split_?"}
{"nl":"Getting a list of all subdirectories in the current directory","code":"[x[0] for x in os.walk(directory)]","relevant":"def carmanufacturers(self):\n    pass?_split_?logger = logging.getLogger(__name__)?_split_?format(1.679, '.2f')?_split_?"}
{"nl":"How to filter a dictionary in Python?","code":"{i: 'updated' for i, j in list(d.items()) if j != 'None'}","relevant":"from sqlalchemy.orm import sessionmaker?_split_?sel.click(\"\/\/*[contains(@id,'linkout')]\")?_split_??_split_?"}
{"nl":"How to filter a dictionary in Python?","code":"dict((k, 'updated') for k, v in d.items() if v is None)","relevant":"from sqlalchemy.orm import sessionmaker?_split_?sel.click(\"\/\/*[contains(@id,'linkout')]\")?_split_??_split_?"}
{"nl":"How to filter a dictionary in Python?","code":"dict((k, 'updated') for k, v in d.items() if v != 'None')","relevant":"from sqlalchemy.orm import sessionmaker?_split_?sel.click(\"\/\/*[contains(@id,'linkout')]\")?_split_??_split_?"}
{"nl":"How to count number of rows in a group in pandas group by object?","code":"df.groupby(key_columns).size()","relevant":"session.commit()?_split_?frontier.append((neighbor, repeat_count))?_split_?self.fields['checkbox_field'].queryset = qs?_split_?"}
{"nl":"python sum the values of lists of list","code":"result = [sum(b) for b in a]","relevant":"df2 = pd.DataFrame({'A': np.random.rand(1440).cumsum()}, index=pd.\n    date_range('1\/1\/2015', periods=1440, freq='1min'))\ndf2.A.plot()\nplt.gca().xaxis.set_major_locator(dates.HourLocator())\nplt.gca().xaxis.set_major_formatter(dates.DateFormatter('%H:%M'))\nplt.show()?_split_?for i in range(length):\n    pass?_split_?df = df.set_index('names')?_split_?"}
{"nl":"What's the best way to search for a Python dictionary value in a list of dictionaries?","code":"any(d['site'] == 'Superuser' for d in data)","relevant":"def __init__(self):\n    self.index = 0?_split_?[l[i:i + 7] for i in range(0, len(l), 7)]?_split_?soup = BeautifulSoup(urllib.open(url).read())?_split_?"}
{"nl":"2D array of objects in Python","code":"nodes = [[Node() for j in range(cols)] for i in range(rows)]","relevant":"from dateutil.parser import parse\nfrom dateutil.tz import tzoffset\ndt = parse('2011-08-24 13:39:00 +0800')\ndt.astimezone(tzoffset(None, 3600))?_split_?results.insert(0, 'pir1', 0)?_split_?def error():\n    return next(i for i in range(3) if i == 10)\nall(error() for i in range(2))?_split_?"}
{"nl":"How to replace (or strip) an extension from a filename in Python?","code":"print(os.path.splitext('\/home\/user\/somefile.txt')[0] + '.jpg')","relevant":"os.environ['TERM'] = 'dumb'?_split_?sub_len = len(sb)\nfor i in range(len(s)):\n    pass?_split_?print(myline + ' - ' + line)?_split_?"}
{"nl":"How to get the resolution of a monitor in Pygame?","code":"pygame.display.set_mode((0, 0), pygame.FULLSCREEN)","relevant":"a = {'a': 0, 'b': 1}?_split_?for choice in new_choices:\n    network_select['menu'].add_command(label=choice, command=tk._setit(var,\n        choice))\nnetwork_select = tk.OptionMenu(root, var, *choices)\nnetwork_select.grid()\ntk.Button(root, text='Refresh', command=refresh).grid()\nroot.mainloop()?_split_?raise GIFError('unknown block type')?_split_?"}
{"nl":"How can I format a float using matplotlib's LaTeX formatter?","code":"ax.set_title('$%s \\\\times 10^{%s}$' % ('3.5', '+20'))","relevant":"d = ['da', 'du', 'de', 'do']?_split_?print(lines[0].shape)?_split_?def __enter__(self):\n    self.start = self.timer()\n\ndef __exit__(self, ty, val, tb):\n    end = self.timer()\nprint('%s : %0.3f seconds' % (self.name, end - self.start))\nreturn False?_split_?"}
{"nl":"Print file age in seconds using Python","code":"print(os.path.getmtime('\/tmp'))","relevant":"print(multiprocessing.current_process())?_split_?ftp_proxy = 'ftp:\/\/10.10.1.10:3128'\nproxyDict = {'http': http_proxy, 'https': https_proxy, 'ftp': ftp_proxy}?_split_?x_a = points[..., :-1][..., (mask)]?_split_?"}
{"nl":"(Django) how to get month name?","code":"today.strftime('%B')","relevant":"root.text, root.tail = xml.text, xml.tail\nprint(et.tostring(tree, xml_declaration=True, encoding='utf-8'))?_split_?raise StatisticsError('no mode for empty data')?_split_?f.write(''.join(lines))?_split_?"}
{"nl":"(Django) how to get month name?","code":"today.strftime('%B')","relevant":"root.text, root.tail = xml.text, xml.tail\nprint(et.tostring(tree, xml_declaration=True, encoding='utf-8'))?_split_?raise StatisticsError('no mode for empty data')?_split_?f.write(''.join(lines))?_split_?"}
{"nl":"join list of lists in python","code":"[j for i in x for j in i]","relevant":"cartesian = [stack_arrays((a, b), usemask=False) for a in A for b in B]?_split_?print([x.encode('ascii') for x in my_list])\nprint(type(my_list)(x.encode('ascii') for x in my_list))?_split_?print('first resize: ' + str((x, y)))\nif y > maxheight:\n    y = maxheight\nx = float(maxheight) \/ float(height) * width\nprint('second resize: ' + str((x, y)))\nxscale = float(x) \/ svg.props.width\nyscale = float(y) \/ svg.props.height\nsurface = cairo.ImageSurface(cairo.FORMAT_ARGB32, x, y)\ncontext = cairo.Context(surface)\ncontext.scale(xscale, yscale)\nsvg.render_cairo(context)\nsurface.write_to_png(ofile)?_split_?"}
{"nl":"join list of lists in python","code":"print(list(itertools.chain.from_iterable(a)))","relevant":"cartesian = [stack_arrays((a, b), usemask=False) for a in A for b in B]?_split_?print([x.encode('ascii') for x in my_list])\nprint(type(my_list)(x.encode('ascii') for x in my_list))?_split_?print('first resize: ' + str((x, y)))\nif y > maxheight:\n    y = maxheight\nx = float(maxheight) \/ float(height) * width\nprint('second resize: ' + str((x, y)))\nxscale = float(x) \/ svg.props.width\nyscale = float(y) \/ svg.props.height\nsurface = cairo.ImageSurface(cairo.FORMAT_ARGB32, x, y)\ncontext = cairo.Context(surface)\ncontext.scale(xscale, yscale)\nsvg.render_cairo(context)\nsurface.write_to_png(ofile)?_split_?"}
{"nl":"Convert Date String to Day of Week","code":"datetime.datetime.strptime('January 11, 2010', '%B %d, %Y').strftime('%A')","relevant":"class SinkInto(object):\n\n    def __init__(self, function, *args, **kwargs):\n        self.args = args\nself.kwargs = kwargs\nself.function = function\n\ndef __rrshift__(self, other):\n    return self.function(other, *self.args, **self.kwargs)\n\ndef __repr__(self):\n    return '<SinkInto {} args={} kwargs={}>'.format(self.function, self.\n        args, self.kwargs)\ndf = pd.DataFrame({'one': [1.0, 2.0, 3.0, 4.0, 4.0], 'two': [4.0, 3.0, 2.0,\n    1.0, 3.0]})?_split_?if new_key != key:\n    obj[new_key] = obj[key]?_split_?def get_range(start_day, end_day):\n    pass?_split_?"}
{"nl":"Convert Date String to Day of Week","code":"datetime.datetime.strptime('January 11, 2010', '%B %d, %Y').strftime('%a')","relevant":"class SinkInto(object):\n\n    def __init__(self, function, *args, **kwargs):\n        self.args = args\nself.kwargs = kwargs\nself.function = function\n\ndef __rrshift__(self, other):\n    return self.function(other, *self.args, **self.kwargs)\n\ndef __repr__(self):\n    return '<SinkInto {} args={} kwargs={}>'.format(self.function, self.\n        args, self.kwargs)\ndf = pd.DataFrame({'one': [1.0, 2.0, 3.0, 4.0, 4.0], 'two': [4.0, 3.0, 2.0,\n    1.0, 3.0]})?_split_?if new_key != key:\n    obj[new_key] = obj[key]?_split_?def get_range(start_day, end_day):\n    pass?_split_?"}
{"nl":"delete a list element by value","code":"a.remove('b')","relevant":"engine.speak(theText)?_split_?rval = -1?_split_?from collections import OrderedDict?_split_?"}
{"nl":"delete a list element by value","code":"a.remove(c)","relevant":"engine.speak(theText)?_split_?rval = -1?_split_?from collections import OrderedDict?_split_?"}
{"nl":"delete a list element by value","code":"a.remove(6)","relevant":"engine.speak(theText)?_split_?rval = -1?_split_?from collections import OrderedDict?_split_?"}
{"nl":"delete a list element by value","code":"a.remove(6)","relevant":"engine.speak(theText)?_split_?rval = -1?_split_?from collections import OrderedDict?_split_?"}
{"nl":"delete a list element by value","code":"if (c in a):\n    a.remove(c)","relevant":"engine.speak(theText)?_split_?rval = -1?_split_?from collections import OrderedDict?_split_?"}
{"nl":"delete a list element by value","code":"try:\n    a.remove(c)\nexcept ValueError:\n    pass","relevant":"engine.speak(theText)?_split_?rval = -1?_split_?from collections import OrderedDict?_split_?"}
{"nl":"Python re.findall print all patterns","code":"re.findall('(?=(a.*?a))', 'a 1 a 2 a 3 a 4 a')","relevant":"pool.join()?_split_?args = parser.parse_args('--foo A'.split())?_split_?results.append(result)?_split_?"}
{"nl":"Outer product of each column of a 2D array to form a 3D array - NumPy","code":"np.einsum('ij,kj->jik', X, X)","relevant":"sample_dimensions = 16, 16\nfor box in get_all_corner_combinations(im, sample_dimensions):\n    image_samples.append(im.crop(box))\nclassifier = YourClassifier()\nclassifications = []\nfor sample in image_samples:\n    classifications.append(classifier(sample))\nlabel = fuse_classifications(classifications)?_split_?full_name = fields.CharField(attribute='profile__full_name')?_split_?x = r['B'].describe()[['mean', 'std', 'min', 'max']].reset_index()\nprint(x)?_split_?"}
{"nl":"Getting the last element of a list","code":"some_list[(-1)]","relevant":"plt.plot(x, y, linestyle='-')?_split_?def shuffle_word(word):\n    pass?_split_?if __name__ == '__main__':\n    pass?_split_?"}
{"nl":"Getting the last element of a list","code":"some_list[(-2)]","relevant":"plt.plot(x, y, linestyle='-')?_split_?def shuffle_word(word):\n    pass?_split_?if __name__ == '__main__':\n    pass?_split_?"}
{"nl":"gets the nth-to-last element","code":"some_list[(- n)]","relevant":"a = [2, 3, 1]\nb = a.sort()?_split_?class MockingTestTestCase(unittest.TestCase):\n\n    def test_mock_stubs(self):\n        with patch('app.mocking.get_user_name', return_value=\n            'Mocked This Silly'):\n            ret = test_method()\nself.assertEqual(ret, 'Mocked This Silly')?_split_?ax.text(m[i, 0], m[i, 1], m[i, 2], '%s' % str(i), size=20, zorder=1, color='k')?_split_?"}
{"nl":"Getting the last element of a list","code":"alist[(-1)]","relevant":"plt.plot(x, y, linestyle='-')?_split_?def shuffle_word(word):\n    pass?_split_?if __name__ == '__main__':\n    pass?_split_?"}
{"nl":"Getting the last element of a list","code":"astr[(-1)]","relevant":"plt.plot(x, y, linestyle='-')?_split_?def shuffle_word(word):\n    pass?_split_?if __name__ == '__main__':\n    pass?_split_?"}
{"nl":"Create a list of integers with duplicate values in Python","code":"print([u for v in [[i, i] for i in range(5)] for u in v])","relevant":"def contains_digits(s):\n    return any(char.isdigit() for char in s)?_split_?child.setExpanded(True)?_split_?print(degrees, minutes, seconds)?_split_?"}
{"nl":"Create a list of integers with duplicate values in Python","code":"[0, 0, 1, 1, 2, 2, 3, 3, 4, 4]","relevant":"def contains_digits(s):\n    return any(char.isdigit() for char in s)?_split_?child.setExpanded(True)?_split_?print(degrees, minutes, seconds)?_split_?"}
{"nl":"Create a list of integers with duplicate values in Python","code":"[(i \/\/ 2) for i in range(10)]","relevant":"def contains_digits(s):\n    return any(char.isdigit() for char in s)?_split_?child.setExpanded(True)?_split_?print(degrees, minutes, seconds)?_split_?"}
{"nl":"Fastest way to remove first and last lines from a Python string","code":"s[s.find('\\n') + 1:s.rfind('\\n')]","relevant":"mail_from = str(self.request.POST.get('from'))\nmail_subject = str(self.request.POST.get('subject'))?_split_?d.extendleft(reversed([1, 2, 3]))?_split_?for name in getattr(functions, '__all__', (n for n in vars(functions) if \n    not n[0] == '_')):\n    setattr(outside_code, name, getattr(functions, name))?_split_?"}
{"nl":"Is there a Python dict without values?","code":"{(x ** 2) for x in range(100)}","relevant":"number?_split_?print(('print(%s)' % expr))?_split_?x2 = mu + sigma * np.random.randn(980, 1)\nx3 = mu + sigma * np.random.randn(1000, 1)\nplt.figure()\nplt.hist([x1, x2, x3], bins, stacked=True, normed=True)?_split_?"}
{"nl":"How to zip lists in a list","code":"zip(*[[1, 2], [3, 4], [5, 6]])","relevant":"with PyV8.JSLocker():\n    self.context.enter()\nprint(self.context.eval('1+1'))?_split_?Y[..., (0)] = np.angle(X) \/ (2 * pi) % 1?_split_?f = myplot(t, x)?_split_?"}
{"nl":"How to zip lists in a list","code":"zip(*[[1, 2], [3, 4], [5, 6]])","relevant":"with PyV8.JSLocker():\n    self.context.enter()\nprint(self.context.eval('1+1'))?_split_?Y[..., (0)] = np.angle(X) \/ (2 * pi) % 1?_split_?f = myplot(t, x)?_split_?"}
{"nl":"python http request with token","code":"requests.get('https:\/\/www.mysite.com\/', auth=('username', 'pwd'))","relevant":"RESET = '%s0m' % ESCAPE\nFORMAT = '1;%dm'?_split_?def __init__(self):\n    self.charset = (\n        '\/abcdefghijklmnopqrstuvwxyz-ABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789.')\n\ndef encode(self, url):\n    pass?_split_?df.columns = [(int(col) if type(col) == float else col) for col in df.columns]?_split_?"}
{"nl":"get a new string from the 3rd character to the end of the string","code":"x[2:]","relevant":"pool.map(fn, list(range(10)))?_split_?self.load_trailer(parser)?_split_?user_id = Column(Integer, ForeignKey('users.id'))?_split_?"}
{"nl":"substring a string","code":"x[:2]","relevant":"sess = tf.Session()?_split_?for i in range(len(txt1)):\n    token_dict[i] = txt1[i]\nlen(token_dict)\nprint('\\n Build DTM')?_split_?self.emit('buttonUp', e.pos[0], e.pos[1])?_split_?"}
{"nl":"substring a string","code":"x[:(-2)]","relevant":"sess = tf.Session()?_split_?for i in range(len(txt1)):\n    token_dict[i] = txt1[i]\nlen(token_dict)\nprint('\\n Build DTM')?_split_?self.emit('buttonUp', e.pos[0], e.pos[1])?_split_?"}
{"nl":"substring a string","code":"x[(-2):]","relevant":"sess = tf.Session()?_split_?for i in range(len(txt1)):\n    token_dict[i] = txt1[i]\nlen(token_dict)\nprint('\\n Build DTM')?_split_?self.emit('buttonUp', e.pos[0], e.pos[1])?_split_?"}
{"nl":"substring a string","code":"x[2:(-2)]","relevant":"sess = tf.Session()?_split_?for i in range(len(txt1)):\n    token_dict[i] = txt1[i]\nlen(token_dict)\nprint('\\n Build DTM')?_split_?self.emit('buttonUp', e.pos[0], e.pos[1])?_split_?"}
{"nl":"reversing a string","code":"some_string[::(-1)]","relevant":"fig = figure()\nax = fig.add_subplot(1, 1, 1, polar=True)?_split_?toolz.valmap(f, my_list)?_split_?list(myseries[myseries == 7].index)?_split_?"}
{"nl":"selecting alternate characters","code":"'H-e-l-l-o- -W-o-r-l-d'[::2]","relevant":"if not self.running:\n    self._pending_jobs.append((job, jobstore, replace_existing))?_split_?while i < 10:\n    pass?_split_?setups = []?_split_?"}
{"nl":"substring a string","code":"s = s[beginning:(beginning + LENGTH)]","relevant":"sess = tf.Session()?_split_?for i in range(len(txt1)):\n    token_dict[i] = txt1[i]\nlen(token_dict)\nprint('\\n Build DTM')?_split_?self.emit('buttonUp', e.pos[0], e.pos[1])?_split_?"}
{"nl":"Terminating a Python script","code":"sys.exit()","relevant":"logger2.warning('Jail zesty vixen who grabbed pay from quack.')?_split_?print(delta)\nprint(delta.total_seconds())?_split_?np.exp(exp_A, out=exp_A)?_split_?"}
{"nl":"Terminating a Python script","code":"quit()","relevant":"logger2.warning('Jail zesty vixen who grabbed pay from quack.')?_split_?print(delta)\nprint(delta.total_seconds())?_split_?np.exp(exp_A, out=exp_A)?_split_?"}
{"nl":"Terminating a Python script","code":"sys.exit('some error message')","relevant":"logger2.warning('Jail zesty vixen who grabbed pay from quack.')?_split_?print(delta)\nprint(delta.total_seconds())?_split_?np.exp(exp_A, out=exp_A)?_split_?"}
{"nl":"Transform unicode string in python","code":"data['City'].encode('ascii', 'ignore')","relevant":"from flask import url_for, redirect\n\n@app.route('\/')\ndef home():\n    pass?_split_?import mechanize\nimport http.cookiejar\nbr = mechanize.Browser()\ncj = http.cookiejar.LWPCookieJar()\nbr.set_cookiejar(cj)\nck = http.cookiejar.Cookie(version=0, name='Name', value='1', port=None,\n    port_specified=False, domain='www.example.com', domain_specified=False,\n    domain_initial_dot=False, path='\/', path_specified=True, secure=False,\n    expires=None, discard=True, comment=None, comment_url=None, rest={\n    'HttpOnly': None}, rfc2109=False)\ncj.set_cookie(ck)\nfor index, cookie in enumerate(cj):\n    pass?_split_?structure = np.zeros((3, 3), dtype=np.int)?_split_?"}
{"nl":"get current CPU and RAM usage","code":"psutil.cpu_percent()\npsutil.virtual_memory()","relevant":"for k in range(fdim):\n    fval[k] = fval_buffer[k]?_split_?import os\nimport subprocess\nenv = dict(os.environ)\nenv['JAVA_OPTS'] = 'foo'?_split_?self.update()?_split_?"}
{"nl":"get current CPU and RAM usage","code":"pid = os.getpid()\npy = psutil.Process(pid)\nmemoryUse = (py.memory_info()[0] \/ (2.0 ** 30))","relevant":"for k in range(fdim):\n    fval[k] = fval_buffer[k]?_split_?import os\nimport subprocess\nenv = dict(os.environ)\nenv['JAVA_OPTS'] = 'foo'?_split_?self.update()?_split_?"}
{"nl":"get current CPU and RAM usage","code":"print((psutil.cpu_percent()))\nprint((psutil.virtual_memory()))","relevant":"for k in range(fdim):\n    fval[k] = fval_buffer[k]?_split_?import os\nimport subprocess\nenv = dict(os.environ)\nenv['JAVA_OPTS'] = 'foo'?_split_?self.update()?_split_?"}
{"nl":"Pandas read_csv expects wrong number of columns, with ragged csv file","code":"pd.read_csv('D:\/Temp\/tt.csv', names=list('abcdef'))","relevant":"l_without_empty = [x for x in l if x]?_split_?import json?_split_?temperature_info = w.MSAcpi_ThermalZoneTemperature()[0]\nprint(temperature_info.CurrentTemperature)?_split_?"}
{"nl":"First non-null value per row from a list of Pandas columns","code":"df.stack().groupby(level=0).first()","relevant":"stuff = []?_split_?from functools import reduce\nreturn dict_orig\nnew_dict = reduce(updater, l, dict())?_split_?number, rep = (input().split() + [1])[:2]?_split_?"}
{"nl":"format strings and named arguments in Python","code":"\"\"\"{0} {1}\"\"\".format(10, 20)","relevant":"output[i] = j + 1?_split_?path = os.path.join(desktop, 'some_file.mp3.lnk')?_split_?import datetime?_split_?"}
{"nl":"format strings and named arguments in Python","code":"\"\"\"{1} {ham} {0} {foo} {1}\"\"\".format(10, 20, foo='bar', ham='spam')","relevant":"output[i] = j + 1?_split_?path = os.path.join(desktop, 'some_file.mp3.lnk')?_split_?import datetime?_split_?"}
{"nl":"How to convert strings numbers to integers in a list?","code":"changed_list = [(int(f) if f.isdigit() else f) for f in original_list]","relevant":"w_real = 2.0 * math.cos(2.0 * math.pi * f)?_split_?next(blah)?_split_?image = Images.get(key)\nif image:\n    self.response.headers['Content-Type'] = 'image\/png'?_split_?"}
{"nl":"Add items to a dictionary of lists","code":"dict(zip(keys, zip(*data)))","relevant":"for idate in df.index.get_level_values('date'):\n    pass?_split_?for line in file:\n    line = line.strip()\nllist = line.split()\nif llist and llist[0] == 'NUMS':\n    for line in file:\n        line = line.strip()\nif line == 'END':\n    break\nelse:\n    pass?_split_?cd = 1097 * math.pow(ei, 4) \/ 512?_split_?"}
{"nl":"Python: Converting from ISO-8859-1\/latin1 to UTF-8","code":"apple.decode('iso-8859-1').encode('utf8')","relevant":"b = np.array([[np.real(x), np.imag(x)] for x in atmp])?_split_?s1.add_layout(LinearAxis(y_range_name='NumStations'), 'right')?_split_?sound = AudioSegment.from_wav('\/path\/to\/file.wav')?_split_?"}
{"nl":"How do you remove the column name row from a pandas DataFrame?","code":"df.to_csv('filename.csv', header=False)","relevant":"print(stealth_check[stealth_roll])?_split_?break?_split_?return platform.processor()?_split_?"}
{"nl":"how to get around \"Single '}' encountered in format string\" when using .format and formatting in printing","code":"print('{0}:<15}}{1}:<15}}{2}:<8}}'.format('1', '2', '3'))","relevant":"for _line in data:\n    line = _line.strip().split(':')?_split_?f.close()?_split_?def convert_timestamp_to_datetime(timestamp):\n    pass?_split_?"}
{"nl":"Python list of dicts, get max value index","code":"max(ld, key=lambda d: d['size'])","relevant":"return flask.Response(inner(), mimetype='text\/html')\napp.run(debug=True)?_split_?os = ds.open_array(input_array, 44100)?_split_?equal = P.Literal('=')\nkey_equal = key + equal\nval = ~key_equal + P.delimitedList(P.Word(P.alphanums), ', ', combine=True)\ngr = P.OneOrMore(P.Group(key_equal + val))\nprint(gr.parseString('ids = 12, 13, 14 fields = name, title'))?_split_?"}
{"nl":"Format() in Python Regex","code":"\"\"\"{0}\\\\w{{2}}b{1}\\\\w{{2}}quarter\"\"\".format('b', 'a')","relevant":"array2[:] = array1?_split_?x = np.linspace(0, 600)\nh = ax.plot(x, rv.pdf(x), lw=2)\nplt.show()?_split_?print(row)?_split_?"}
{"nl":"How to use 'User' as foreign key in Django 1.5","code":"user = models.ForeignKey('User', unique=True)","relevant":"s = 'winterbash'\nlist(s)?_split_?thread.start()?_split_?print(t3.timeit(1000) \/ 1000)?_split_?"}
{"nl":"Regex match even number of letters","code":"re.compile('^([^A]*)AA([^A]|AA)*$')","relevant":"distutils.dir_util.copy_tree(src, dst)?_split_?__init__.py?_split_?df['y'] = df['y'].replace({'N\/A': np.nan})?_split_?"}
{"nl":"Combining NumPy arrays","code":"b = np.concatenate((a, a), axis=0)","relevant":"def gener():\n    a = [1, 2, 3, 4, 0, 5, 6, 7, 8, 0, 9]\nfor i in a:\n    pass?_split_?result.append(item)?_split_?if len(args) == 1:\n    start = 0?_split_?"}
{"nl":"How to custom sort an alphanumeric list?","code":"sorted(l, key=lambda x: x.replace('0', 'Z'))","relevant":"s = 0\nwhile i < len(l):\n    if l[i] == 13:\n        i += 1\nelse:\n    s += l[i]\ni += 1\nreturn s?_split_?resp = opener.open(req)?_split_?import urllib.request, urllib.parse, urllib.error\n\ndef urlimport(x):\n    exec(urllib.request.urlopen(x), globals())?_split_?"}
{"nl":"Plot logarithmic axes with matplotlib in python","code":"ax.set_yscale('log')","relevant":"a = 4\nf(3)?_split_?label = encodings.idna.nameprep(str(label))?_split_?def my_app(environ, start_response):\n    session_cookie = SimpleCookie()\nsession_cookie['session'] = 'somedata'?_split_?"}
{"nl":"Access environment variables","code":"os.environ['HOME']","relevant":"if something:\n    pass?_split_?\"\"\"_\"\"\".join(l.lower() for l in re.findall('[A-Z][^A-Z]*',\n    'ThisIsAGoodExample'))?_split_?final_l = []?_split_?"}
{"nl":"Access environment variables","code":"os.environ['HOME']","relevant":"if something:\n    pass?_split_?\"\"\"_\"\"\".join(l.lower() for l in re.findall('[A-Z][^A-Z]*',\n    'ThisIsAGoodExample'))?_split_?final_l = []?_split_?"}
{"nl":"Access environment variables","code":"print(os.environ)","relevant":"if something:\n    pass?_split_?\"\"\"_\"\"\".join(l.lower() for l in re.findall('[A-Z][^A-Z]*',\n    'ThisIsAGoodExample'))?_split_?final_l = []?_split_?"}
{"nl":"Access environment variables","code":"os.environ","relevant":"if something:\n    pass?_split_?\"\"\"_\"\"\".join(l.lower() for l in re.findall('[A-Z][^A-Z]*',\n    'ThisIsAGoodExample'))?_split_?final_l = []?_split_?"}
{"nl":"Access environment variables","code":"print(os.environ.get('KEY_THAT_MIGHT_EXIST'))","relevant":"if something:\n    pass?_split_?\"\"\"_\"\"\".join(l.lower() for l in re.findall('[A-Z][^A-Z]*',\n    'ThisIsAGoodExample'))?_split_?final_l = []?_split_?"}
{"nl":"Access environment variables","code":"print(os.getenv('KEY_THAT_MIGHT_EXIST', default_value))","relevant":"if something:\n    pass?_split_?\"\"\"_\"\"\".join(l.lower() for l in re.findall('[A-Z][^A-Z]*',\n    'ThisIsAGoodExample'))?_split_?final_l = []?_split_?"}
{"nl":"Access environment variables","code":"print(os.environ.get('HOME', '\/home\/username\/'))","relevant":"if something:\n    pass?_split_?\"\"\"_\"\"\".join(l.lower() for l in re.findall('[A-Z][^A-Z]*',\n    'ThisIsAGoodExample'))?_split_?final_l = []?_split_?"}
{"nl":"How to split a string within a list to create key-value pairs in Python","code":"print(dict([s.split('=') for s in my_list]))","relevant":"len(solns8)\n4015?_split_?config.add_section('main')?_split_?bucket = conn.get_bucket(your_bucket)\nfolders = bucket.list('', '\/')\nfor folder in folders:\n    pass?_split_?"}
{"nl":"finding index of an item closest to the value in a list that's not entirely sorted","code":"min(enumerate(a), key=lambda x: abs(x[1] - 11.5))","relevant":"store.close()?_split_?baz = 'quux'?_split_?t2.__sizeof__()?_split_?"}
{"nl":"How to use lxml to find an element by text?","code":"e = root.xpath('.\/\/a[contains(text(),\"TEXT A\")]')","relevant":"rider['a'] = 'b'\nprint(saber)?_split_?def func2():\n    print('func2')?_split_?def some_func(l, n, pad=0):\n    if len(l) >= n:\n        return l[:n]\nreturn l + [pad] * (n - len(l))?_split_?"}
{"nl":"How to use lxml to find an element by text?","code":"e = root.xpath('.\/\/a[starts-with(text(),\"TEXT A\")]')","relevant":"rider['a'] = 'b'\nprint(saber)?_split_?def func2():\n    print('func2')?_split_?def some_func(l, n, pad=0):\n    if len(l) >= n:\n        return l[:n]\nreturn l + [pad] * (n - len(l))?_split_?"}
{"nl":"How to use lxml to find an element by text?","code":"e = root.xpath('.\/\/a[text()=\"TEXT A\"]')","relevant":"rider['a'] = 'b'\nprint(saber)?_split_?def func2():\n    print('func2')?_split_?def some_func(l, n, pad=0):\n    if len(l) >= n:\n        return l[:n]\nreturn l + [pad] * (n - len(l))?_split_?"}
{"nl":"Python: an efficient way to slice a list with a index list","code":"c = [b[i] for i in index]","relevant":"import numpy as np?_split_?from datetime import datetime\nfrom django.shortcuts import render_to_response\n\ndef my_view(request):\n    pass?_split_?np.eye(foo.shape[1]) * foo[:, (np.newaxis)]?_split_?"}
{"nl":"Multiplication of 1d arrays in numpy","code":"np.dot(a[:, (None)], b[(None), :])","relevant":"id = sa.Column(sa.Integer, primary_key=True)\ndescription = sa.Column(sa.UnicodeText, nullable=False, server_default='')\n\n@declared_attr\ndef __table_args__(cls):\n    pass?_split_?def test0(data):\n    pass?_split_?def f2(self):\n    print('original f2')?_split_?"}
{"nl":"Multiplication of 1d arrays in numpy","code":"np.outer(a, b)","relevant":"id = sa.Column(sa.Integer, primary_key=True)\ndescription = sa.Column(sa.UnicodeText, nullable=False, server_default='')\n\n@declared_attr\ndef __table_args__(cls):\n    pass?_split_?def test0(data):\n    pass?_split_?def f2(self):\n    print('original f2')?_split_?"}
{"nl":"Execute a file with arguments in Python shell","code":"subprocess.call(['.\/abc.py', arg1, arg2])","relevant":"__cache = {}?_split_?pop_conn.pass_('password')?_split_?created_at = Colmn(DateTime, nullable=False, default=func.now())\n\n\nclass Post(Base):\n    id = Column(Integer, primary_key=True)\nuser_id = Column(Integer, ForeignKey(User.id), nullable=False)\nuser = relationship(User, backref=backref('posts'))\ntitle = Column(String, nullable=False)\nbody = Column(Text, nullable=False)\ncreated_at = Colmn(DateTime, nullable=False, default=func.now())\nUser.post_query = relationship(Post, lazy='dynamic')?_split_?"}
{"nl":"Pandas: Fill missing values by mean in each group faster than transfrom","code":"df[['value']].fillna(df.groupby('group').transform('mean'))","relevant":"def get_form(self, request, obj=None, **kwargs):\n    form = super(BlogPostAdmin, self).get_form(request, obj, **kwargs)\nauthor = form.base_fields['author']\nauthor.widget.can_add_related = False\nauthor.queryset = User.objects.filter(pk=request.user.pk)\nauthor.initial = request.user.pk?_split_?resource.setrlimit(resource.RLIMIT_STACK, (resource.RLIM_INFINITY, resource\n    .RLIM_INFINITY))?_split_?client = docker.Client()\ncontainer = client.create_container(image='busybox:latest', stdin_open=True,\n    tty=True, command='\/bin\/sh')\nclient.start(container)?_split_?"}
{"nl":"Python regex alternative for join","code":"re.sub('(.)(?=.)', '\\\\1-', s)","relevant":"file = cStringIO.StringIO(urllib.request.urlopen(\n    'http:\/\/stackoverflow.com\/a_nice_image.jpg').read())?_split_?def getData(self):\n    print('PRODUCTION getData called')?_split_?pass\nthread = MyThread()\nthread.daemon = True?_split_?"}
{"nl":"Python regex alternative for join","code":"re.sub('(?<=.)(?=.)', '-', str)","relevant":"file = cStringIO.StringIO(urllib.request.urlopen(\n    'http:\/\/stackoverflow.com\/a_nice_image.jpg').read())?_split_?def getData(self):\n    print('PRODUCTION getData called')?_split_?pass\nthread = MyThread()\nthread.daemon = True?_split_?"}
{"nl":"Index of element in Numpy array","code":"i, j = np.where(a == value)","relevant":"a_set_copy = frozenset([2, 3, 1])?_split_?data = np.random.randint(25, size=(4, 4))\ndata\nstandardized_data = StandardScaler().fit_transform(data)\nstandardized_data?_split_?gn = geocoders.GeoNames()?_split_?"}
{"nl":"Finding the most frequent character in a string","code":"print(collections.Counter(s).most_common(1)[0])","relevant":"for i, p in enumerate(predicates):\n    if p(e):\n        v[i] += 1?_split_?for line in open('really_big_file.dat'):\n    process_data(line)?_split_?a = Question.objects.create()?_split_?"}
{"nl":"How to match beginning of string or character in Python","code":"float(re.findall('(?:^|_)' + par + '(\\\\d+\\\\.\\\\d*)', dir)[0])","relevant":"List, Of, Column, Variables = [Orange.feature.Discrete(x) for x in ['What',\n    'Theyre', 'Called', 'AsStrings']]\nDomain = Orange.data.Domain([List, Of, Column, Variables])\nTable = Orange.data.Table(Domain)?_split_?from distutils.core import setup\nimport py2exe\nsetup(console=['Avril.py'])?_split_?logger.error('this is an ERROR message')?_split_?"}
{"nl":"How to match beginning of string or character in Python","code":"re.findall('[^a]', 'abcd')","relevant":"List, Of, Column, Variables = [Orange.feature.Discrete(x) for x in ['What',\n    'Theyre', 'Called', 'AsStrings']]\nDomain = Orange.data.Domain([List, Of, Column, Variables])\nTable = Orange.data.Table(Domain)?_split_?from distutils.core import setup\nimport py2exe\nsetup(console=['Avril.py'])?_split_?logger.error('this is an ERROR message')?_split_?"}
{"nl":"How to get a list of variables in specific Python module?","code":"print([item for item in dir(adfix) if not item.startswith('__')])","relevant":"super(waypointForm, self).__init__(*args, **kwargs)?_split_?queryset = MyModel.objects.all()?_split_?b = conn.get_bucket('example')?_split_?"}
{"nl":"Get the first element of each tuple in a list in Python","code":"[x[0] for x in rows]","relevant":"d.update({str(i * 2): '1' for i in range(n)})?_split_?def slice_list(input, size):\n    input_size = len(input)\nslice_size = input_size \/ size\nremain = input_size % size\nresult = []\niterator = iter(input)\nfor i in range(size):\n    result.append([])\nfor j in range(slice_size):\n    result[i].append(next(iterator))\nif remain:\n    result[i].append(next(iterator))\nremain -= 1\nreturn result?_split_?university = django_filters.NumberFilter(name='poster__university',\n    lookup_type='exact')\n\n\nclass Meta:\n    model = Task?_split_?"}
{"nl":"Get the first element of each tuple in a list in Python","code":"res_list = [x[0] for x in rows]","relevant":"d.update({str(i * 2): '1' for i in range(n)})?_split_?def slice_list(input, size):\n    input_size = len(input)\nslice_size = input_size \/ size\nremain = input_size % size\nresult = []\niterator = iter(input)\nfor i in range(size):\n    result.append([])\nfor j in range(slice_size):\n    result[i].append(next(iterator))\nif remain:\n    result[i].append(next(iterator))\nremain -= 1\nreturn result?_split_?university = django_filters.NumberFilter(name='poster__university',\n    lookup_type='exact')\n\n\nclass Meta:\n    model = Task?_split_?"}
{"nl":"How to repeat Pandas data frame?","code":"pd.concat([x] * 5, ignore_index=True)","relevant":"class Foo(object):\n\n    def __init__(self, *args, **kwargs):\n        self.some_method = self.some_method\n\n@listen\ndef some_method(self, *args, **kwargs):\n    pass?_split_?for label in np.unique(zones):\n    mask = zones == label?_split_?[x[0] for x in a]?_split_?"}
{"nl":"How to repeat Pandas data frame?","code":"pd.concat([x] * 5)","relevant":"class Foo(object):\n\n    def __init__(self, *args, **kwargs):\n        self.some_method = self.some_method\n\n@listen\ndef some_method(self, *args, **kwargs):\n    pass?_split_?for label in np.unique(zones):\n    mask = zones == label?_split_?[x[0] for x in a]?_split_?"}
{"nl":"Sorting JSON in python by a specific value","code":"sorted_list_of_keyvalues = sorted(list(ips_data.items()), key=item[1]['data_two'])","relevant":"try:\n    with codecs.open(trainfile, 'r', 'utf8') as fin:\n        punkt.train(fin.read(), finalize=False, verbose=False)\nexcept KeyboardInterrupt:\n    print('KeyboardInterrupt: Stopping the reading of the dump early!')\nabbrv_sent = ' '.join([i.strip() for i in codecs.open('abbrev.lex', 'r',\n    'utf8').readlines()])\nabbrv_sent = 'Start' + abbrv_sent + 'End.'\npunkt.train(abbrv_sent, finalize=False, verbose=False)\npunkt.finalize_training(verbose=True)\nmodel = PunktSentenceTokenizer(punkt.get_params())\nwith open(modelfile, mode='wb') as fout:\n    pickle.dump(model, fout, protocol=pickle.HIGHEST_PROTOCOL)\nreturn model?_split_?def r(df):\n    return df.loc[df.name].reset_index(drop=True)\ndata = df.mean().groupby(level=0).apply(r).rename_axis(['grp', 'cat']\n    ).reset_index(name='mu')\nax = sns.barplot(x='grp', y='mu', hue='cat', data=data)\nax.legend_.remove()\nfor i, p in enumerate(ax.patches):\n    height = p.get_height()\nax.text(p.get_x() + 0.05, height + 1, df.columns.levels[1][i])?_split_?return streng?_split_?"}
{"nl":"JSON to pandas DataFrame","code":"pd.read_json(elevations)","relevant":"opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(CookieJar()))\nresponse = opener.open(spreadsheet_url)\nwith open('data.csv', 'wb') as f:\n    f.write(response.read())?_split_?def rps():\n    if player_wins:\n        return True\nreturn False?_split_?fig, axs = plt.subplots(1, 2)?_split_?"}
{"nl":"Generate random numbers with a given (numerical) distribution","code":"numpy.random.choice(numpy.arange(1, 7), p=[0.1, 0.05, 0.05, 0.2, 0.4, 0.2])","relevant":"import re?_split_?fields = ['year', 'month', 'day']?_split_?for value1, value2 in product(my_list, repeat=2):\n    if meets_requirements(value1, value2):\n        to_be_removed.append(value2)?_split_?"}
{"nl":"Find maximum value of a column and return the corresponding row values using Pandas","code":"df.loc[df['Value'].idxmax()]","relevant":"warnings.filterwarnings('error', category=UnicodeWarning)?_split_?mylist = ['aaaa8', 'bb8', 'ccc8', 'dddddd8']\nprint(mylist)\nj = 0\nfor i in mylist:\n    mylist[j] = i.rstrip('8')\nj += 1\nprint(mylist)?_split_?user[:name]?_split_?"}
{"nl":"Finding recurring patterns in a string","code":"re.findall('^(.+?)((.+)\\\\3+)$', '42344343434')[0][:-1]","relevant":"class Foo(object):\n    pass?_split_?d = {'a': 1, 'b': 2, 'c': 3}\nset(['a', 'b']).issubset(d)?_split_?return type.__new__(cls, name, bases, dct)?_split_?"}
{"nl":"convert binary string to numpy array","code":"np.fromstring('\\x00\\x00\\x80?\\x00\\x00\\x00@\\x00\\x00@@\\x00\\x00\\x80@', dtype='<f4')","relevant":"ixlo = set(sample(lo, M - len(ixhi)))?_split_?test3filehandle.write('Line Number:' + str(k) + ' ')?_split_?for line in f:\n    line_count += 1\nprint(line_count)?_split_?"}
{"nl":"convert binary string to numpy array","code":"np.fromstring('\\x00\\x00\\x80?\\x00\\x00\\x00@\\x00\\x00@@\\x00\\x00\\x80@', dtype='>f4')","relevant":"ixlo = set(sample(lo, M - len(ixhi)))?_split_?test3filehandle.write('Line Number:' + str(k) + ' ')?_split_?for line in f:\n    line_count += 1\nprint(line_count)?_split_?"}
{"nl":"How to use variables in SQL statement in Python?","code":"cursor.execute('INSERT INTO table VALUES (?, ?, ?)', (var1, var2, var3))","relevant":"if __name__ == '__main__':\n    im = cv2.imread('blobs.png', cv2.CV_LOAD_IMAGE_GRAYSCALE)\n_, im_binary = cv2.threshold(im, 50, 255, cv2.THRESH_BINARY)\nkernel = np.array([[-1, -1, 1], [-1, 1, 1], [-1, -1, 1]])\nim_mask = np.zeros(im_binary.shape, np.uint8)\nim_mask |= hitmiss(im_binary, kernel)\nim_mask |= hitmiss(im_binary, np.fliplr(kernel))\nim_mask |= hitmiss(im_binary, kernel.T)\nim_mask |= hitmiss(im_binary, np.flipud(kernel.T))\nim_dst = im_binary & (1 - im_mask) * 255\ncv2.imwrite('dst.png', im_dst)?_split_?arcpy.RefreshActiveView()\narcpy.RefreshTOC()\ndel mxd, df, newlayer?_split_?root.resizable(True, False)\nroot.mainloop()?_split_?"}
{"nl":"How to use variables in SQL statement in Python?","code":"cursor.execute('INSERT INTO table VALUES (%s, %s, %s)', (var1, var2, var3))","relevant":"if __name__ == '__main__':\n    im = cv2.imread('blobs.png', cv2.CV_LOAD_IMAGE_GRAYSCALE)\n_, im_binary = cv2.threshold(im, 50, 255, cv2.THRESH_BINARY)\nkernel = np.array([[-1, -1, 1], [-1, 1, 1], [-1, -1, 1]])\nim_mask = np.zeros(im_binary.shape, np.uint8)\nim_mask |= hitmiss(im_binary, kernel)\nim_mask |= hitmiss(im_binary, np.fliplr(kernel))\nim_mask |= hitmiss(im_binary, kernel.T)\nim_mask |= hitmiss(im_binary, np.flipud(kernel.T))\nim_dst = im_binary & (1 - im_mask) * 255\ncv2.imwrite('dst.png', im_dst)?_split_?arcpy.RefreshActiveView()\narcpy.RefreshTOC()\ndel mxd, df, newlayer?_split_?root.resizable(True, False)\nroot.mainloop()?_split_?"}
{"nl":"How to use variables in SQL statement in Python?","code":"cursor.execute('INSERT INTO table VALUES (%s, %s, %s)', (var1, var2, var3))","relevant":"if __name__ == '__main__':\n    im = cv2.imread('blobs.png', cv2.CV_LOAD_IMAGE_GRAYSCALE)\n_, im_binary = cv2.threshold(im, 50, 255, cv2.THRESH_BINARY)\nkernel = np.array([[-1, -1, 1], [-1, 1, 1], [-1, -1, 1]])\nim_mask = np.zeros(im_binary.shape, np.uint8)\nim_mask |= hitmiss(im_binary, kernel)\nim_mask |= hitmiss(im_binary, np.fliplr(kernel))\nim_mask |= hitmiss(im_binary, kernel.T)\nim_mask |= hitmiss(im_binary, np.flipud(kernel.T))\nim_dst = im_binary & (1 - im_mask) * 255\ncv2.imwrite('dst.png', im_dst)?_split_?arcpy.RefreshActiveView()\narcpy.RefreshTOC()\ndel mxd, df, newlayer?_split_?root.resizable(True, False)\nroot.mainloop()?_split_?"}
{"nl":"pandas split string into columns","code":"df['stats'].str[1:-1].str.split(',', expand=True).astype(float)","relevant":"results = cursor.fetchall()?_split_?for key, value in my_dict.items():\n    if conditiion(value):\n        my_dict[key] = new_value?_split_?initialTimeStamp = time.time() + time.clock()?_split_?"}
{"nl":"pandas split string into columns","code":"df['stats'].str[1:-1].str.split(',').apply(pd.Series).astype(float)","relevant":"results = cursor.fetchall()?_split_?for key, value in my_dict.items():\n    if conditiion(value):\n        my_dict[key] = new_value?_split_?initialTimeStamp = time.time() + time.clock()?_split_?"}
{"nl":"pandas split string into columns","code":"df['stats'].apply(pd.Series)","relevant":"results = cursor.fetchall()?_split_?for key, value in my_dict.items():\n    if conditiion(value):\n        my_dict[key] = new_value?_split_?initialTimeStamp = time.time() + time.clock()?_split_?"}
{"nl":"wait for shell command to complete","code":"p.wait()","relevant":"class Meta(ProfileForm.Meta):\n    pass?_split_?axdendro.set_yticks([])?_split_?E = builder.ElementMaker(namespace='http:\/\/www.cs.rpi.edu\/XGMML', nsmap={\n    None: 'http:\/\/www.cs.rpi.edu\/XGMML', 'dc':\n    'http:\/\/purl.org\/dc\/elements\/1.1\/', 'xlink':\n    'http:\/\/www.w3.org\/1999\/xlink', 'rdf':\n    'http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#', 'cy':\n    'http:\/\/www.cytoscape.org'})?_split_?"}
{"nl":"Unescaping escaped characters in a string using Python 3.2","code":"s.encode('utf8')","relevant":"x = f(x)?_split_?ndx = NP.where(NP.sum(M, 0) % 2 == 0)?_split_?with open('names.csv') as csvfile:\n    reader = csv.DictReader(csvfile, delimiter=' ')\nprint(list(reader))?_split_?"}
{"nl":"Parse a string with a date to a datetime object","code":"datetime.datetime.strptime('01-Jan-1995', '%d-%b-%Y')","relevant":"class MyTable(QtGui.QTableWidget):\n    pass?_split_?def b(self):\n    pass?_split_?def main():\n    pass?_split_?"}
{"nl":"copy a file","code":"copyfile(src, dst)","relevant":"from dateutil import parser\ndates = ['30th November 2009', '31st March 2010', '30th September 2010']\nfor date in dates:\n    pass?_split_?\"\"\"#{0:02x}{1:02x}{2:02x}\"\"\".format(clamp(r), clamp(g), clamp(b))?_split_?p = argparse.ArgumentParser()?_split_?"}
{"nl":"copy a file","code":"shutil.copy2('\/dir\/file.ext', '\/new\/dir\/newname.ext')","relevant":"from dateutil import parser\ndates = ['30th November 2009', '31st March 2010', '30th September 2010']\nfor date in dates:\n    pass?_split_?\"\"\"#{0:02x}{1:02x}{2:02x}\"\"\".format(clamp(r), clamp(g), clamp(b))?_split_?p = argparse.ArgumentParser()?_split_?"}
{"nl":"copy a file","code":"shutil.copy2('\/dir\/file.ext', '\/new\/dir')","relevant":"from dateutil import parser\ndates = ['30th November 2009', '31st March 2010', '30th September 2010']\nfor date in dates:\n    pass?_split_?\"\"\"#{0:02x}{1:02x}{2:02x}\"\"\".format(clamp(r), clamp(g), clamp(b))?_split_?p = argparse.ArgumentParser()?_split_?"}
{"nl":"Joining a list that has Integer values with Python","code":"print(', '.join(str(x) for x in list_of_ints))","relevant":"df\ns = df.a[:5]\ndfa, sa = df.align(s, axis=0)\ndfa\nsa?_split_?stats = [100, 98, 102, 100, 108, 23, 120]\nmean = np.mean(stats)\nstd = np.std(stats)\nstats_z = [((s - mean) \/ std) for s in stats]?_split_?x = blist([0])?_split_?"}
{"nl":"how to multiply multiple columns by a column in Pandas","code":"df[['A', 'B']].multiply(df['C'], axis='index')","relevant":"rot = np.rad2deg(np.arctan2(*np.abs(np.gradient(xs)[0][0][::-1])))?_split_?import subprocess\nscript = \"\"\"tell application \"System Events\"\n    activate\n    display dialog \"Hello Cocoa!\" with title \"Sample Cocoa Dialog\" default button 2\nend tell\n\"\"\"\nproc = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE, stdout=\n    subprocess.PIPE)\nstdout_output = proc.communicate(script)[0]?_split_?from django.db import connection?_split_?"}
{"nl":"convert string to hex in python","code":"hex(ord('a'))","relevant":"self.assertTrue(r.zrangebyscore(name, '(1', '(2') == [])\nself.assertTrue(r.zrangebyscore(name, '(1', '(3') == ['two'])?_split_?from urllib.parse import urlencode?_split_?rows.append(row)?_split_?"}
{"nl":"How to sum the values of list to the power of their indices","code":"sum(j ** i for i, j in enumerate(l, 1))","relevant":"df = df.reset_index()\ndf = df.rename(columns=lambda x: x if not 'Unnamed' in str(x) else '')?_split_?webtail?_split_?main()?_split_?"}
{"nl":"Python\/Django: How to remove extra white spaces & tabs from a string?","code":"\"\"\" \"\"\".join(s.split())","relevant":"sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))?_split_?id(0)?_split_?return self.value?_split_?"}
{"nl":"How to strip comma in Python string","code":"s = s.replace(',', '')","relevant":"for i, col in enumerate(row):\n    if col in FIELDS:\n        index.append(i)?_split_?foo[:]\nfoo[1:2]\nfoo[1:2:3]\nfoo[1::3]?_split_?from package.classes import A?_split_?"}
{"nl":"How to resample a dataframe with different functions applied to each column?","code":"frame.resample('1H').agg({'radiation': np.sum, 'tamb': np.mean})","relevant":"a.write(str(f) + os.linesep)?_split_?def iterate(f, x):\n    return ana(lambda x: (x, f(x)), lambda _: False)(x)?_split_?d['first'] = 1\nd['second'] = 2\nd['third'] = 3?_split_?"}
{"nl":"How do I get rid of Python Tkinter root window?","code":"root.destroy()","relevant":"zelib.multiplier(2, 3)?_split_?commonprefix('interspecies interstelar interstate'.split())?_split_?child.close()?_split_?"}
{"nl":"Creating a Pandas dataframe from elements of a dictionary","code":"df = pd.DataFrame.from_dict({k: v for k, v in list(nvalues.items()) if k != 'y3'})","relevant":"from django.db import transaction\n\ndef viewfunc(request):\n    do_stuff()?_split_?yesterday = datetime(2014, 5, 12, 23, 30)\nprint(yesterday)?_split_?@register.filter\ndef modulo(num, val):\n    pass?_split_?"}
{"nl":"How to obtain values of request variables using Python and Flask","code":"first_name = request.args.get('firstname')","relevant":"net = Mininet(topo=None, build=False)?_split_?poller = zmq.Poller()?_split_?counts_copy = counts.copy()?_split_?"}
{"nl":"How to obtain values of request variables using Python and Flask","code":"first_name = request.form.get('firstname')","relevant":"net = Mininet(topo=None, build=False)?_split_?poller = zmq.Poller()?_split_?counts_copy = counts.copy()?_split_?"}
{"nl":"How to read only part of a list of strings in python","code":"[s[:5] for s in buckets]","relevant":"new_func_name = my_func?_split_?for date, events in list(calendar.items()):\n    pass?_split_?return normalized\n\ndef __eq__(self, other):\n    pass?_split_?"}
{"nl":"how to sort by length of string followed by alphabetical order?","code":"the_list.sort(key=lambda item: (-len(item), item))","relevant":"fruitdict = {}\nfruitdict['apple'] = 1\nfruitdict['banana'] = 'f'?_split_?logging.info('testTimer.py: Stuff DONE')?_split_?self.name2class = {'foo': Foo, 'bar': Bar}?_split_?"}
{"nl":"how to slice a dataframe having date field as index?","code":"df = df.set_index(['TRX_DATE'])","relevant":"return func(**filter_dict(kwargs, get_input_names(func)))?_split_?for j in range(m):\n    pass?_split_?s = ['\\xc3\\xa4\\xc3\\xa5\\xc3\\xb6', '\\xc3\\xa4\\xc3\\xa5']\nprint('\\n'.join(s))\nprint(', '.join(s))?_split_?"}
{"nl":"List comprehension with an accumulator","code":"list(accumulate(list(range(10))))","relevant":"input = 8\noutput = list(range(input + 1))\nprint(output)\n[0, 1, 2, 3, 4, 5, 6, 7, 8]?_split_?label = tkinter.Label(tk, text='Window with transparent icon.')\nlabel.pack()\ntk.mainloop()?_split_?previous = next(f, None)?_split_?"}
{"nl":"How to convert a date string to different format","code":"datetime.datetime.strptime('2013-1-25', '%Y-%m-%d').strftime('%m\/%d\/%y')","relevant":"column_names = ['Gender', 'Class', 'Price Bracket']?_split_?print(con.session.headers)?_split_?A = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nA = np.array(A)?_split_?"}
{"nl":"How to convert a date string to different format","code":"datetime.datetime.strptime('2013-1-25', '%Y-%m-%d').strftime('%-m\/%d\/%y')","relevant":"column_names = ['Gender', 'Class', 'Price Bracket']?_split_?print(con.session.headers)?_split_?A = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nA = np.array(A)?_split_?"}
{"nl":"How to remove multiple columns that end with same text in Pandas?","code":"df2 = df.ix[:, (~df.columns.str.endswith('prefix'))]","relevant":"vname = 'Tx_1211'\nstation = 0\nnc = netCDF4.Dataset(url)\nh = nc.variables[vname]\ntimes = nc.variables['time']\njd = netCDF4.num2date(times[:], times.units)\nhs = pd.Series(h[:, (station)], index=jd)\nfig = plt.figure(figsize=(12, 4))\nax = fig.add_subplot(111)\nhs.plot(ax=ax, title='%s at %s' % (h.long_name, nc.id))\nax.set_ylabel(h.units)?_split_?with open('numbers.txt', 'r') as f:\n    pass?_split_?from pylab import *\nx = linspace(0, 10 * pi, 2 ** 10)\ny = sin(x)?_split_?"}
{"nl":"Python - How to extract the last x elements from a list","code":"new_list = my_list[-10:]","relevant":"def use_floordiv(n):\n    return n \/\/ 1?_split_?n = max([dEdtheta1, dEdtheta1, dEdtheta2])\ntheta0 = theta0 - step * dEdtheta0 \/ n\ntheta1 = theta1 - step * dEdtheta1 \/ n\ntheta2 = theta2 - step * dEdtheta2 \/ n?_split_?a[row, col] = a.sum(axis=1) - a[row, col]?_split_?"}
{"nl":"Python - How to extract the last x elements from a list","code":"my_list[-10:]","relevant":"def use_floordiv(n):\n    return n \/\/ 1?_split_?n = max([dEdtheta1, dEdtheta1, dEdtheta2])\ntheta0 = theta0 - step * dEdtheta0 \/ n\ntheta1 = theta1 - step * dEdtheta1 \/ n\ntheta2 = theta2 - step * dEdtheta2 \/ n?_split_?a[row, col] = a.sum(axis=1) - a[row, col]?_split_?"}
{"nl":"How to efficiently convert Matlab engine arrays to numpy ndarray?","code":"np.array(x._data).reshape(x.size[::-1]).T","relevant":"serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nhost = '192.168.1.3'?_split_?vectorizer = TfidfVectorizer(ngram_range=(1, 2))\nX = vectorizer.fit_transform(lectures)?_split_?class Employee(Base):\n    __tablename__ = 'employee'\nid = Column(Integer, primary_key=True)\nname = Column(String(64), nullable=False)\nEmployee.manager_id = Column(Integer, ForeignKey(Employee.id))?_split_?"}
{"nl":"In pandas Dataframe with multiindex how can I filter by order?","code":"df.groupby(level=0, as_index=False).nth(0)","relevant":"import subprocess?_split_?exitcode = proc.returncode\nreturn exitcode, out, err\n\ndef get_title():\n    cmd = 'mplayer -endpos 1 -ao null {url}'.format(url=URL)\nout = get_exitcode_stdout_stderr(cmd)[1]\nfor line in out.split('\\n'):\n    if line.startswith('ICY Info:'):\n        match = re.search(\"StreamTitle='(.*)';StreamUrl=\", line)\ntitle = match.group(1)\nreturn title\n\ndef main():\n    print(get_title())?_split_?keyname, fielditerator = result[1]._formatter_field_name_split()\nkeyname?_split_?"}
{"nl":"How to convert list of numpy arrays into single numpy array?","code":"numpy.concatenate(LIST, axis=0)","relevant":"channel.basic_ack(delivery_tag=method.delivery_tag)\n\ndef on_open(connection):\n    connection.channel(on_channel_open)\n\ndef on_channel_open(channel):\n    channel.basic_consume(callback, queue='queue1')\nchannel.basic_consume(callback, queue='queue2')\nparameters = pika.URLParameters('amqp:\/\/guest:guest@localhost:5672\/%2F')\nconnection = pika.SelectConnection(parameters=parameters, on_open_callback=\n    on_open)\ntry:\n    connection.ioloop.start()\nexcept KeyboardInterrupt:\n    connection.close()?_split_?default_settings = {'LOG_ENABLED': False}\n\ndef short_desc(self):\n    return 'Schedule a run for all available spiders'\n\ndef run(self, args, opts):\n    url = 'http:\/\/localhost:6800\/schedule.json'\nfor s in self.crawler.spiders.list():\n    values = {'project': 'YOUR_PROJECT_NAME', 'spider': s}\ndata = urllib.parse.urlencode(values)\nreq = urllib.request.Request(url, data)\nresponse = urllib.request.urlopen(req)\nlog.msg(response)?_split_?resource_path = os.path.join(os.path.split(__file__)[0], 'resources')?_split_?"}
{"nl":"How can I convert literal escape sequences in a string to the corresponding bytes?","code":"\"\"\"\\\\xc3\\\\x85\u3042\"\"\".encode('utf-8').decode('unicode_escape')","relevant":"module = inspect.getmodule(frame[0])?_split_?\"\"\"{0:.2f}\"\"\".format(150)?_split_?loop.run()\n\n@dbus.service.method('test.helloservice')\ndef hello(self):\n    return 'Hello World!'\n\n\nclass BaseTestCase(unittest.TestCase):\n\n    def setUp(self):\n        pass?_split_?"}
{"nl":"How can I convert literal escape sequences in a string to the corresponding bytes?","code":"\"\"\"\\\\xc3\\\\x85\u3042\"\"\".encode('utf-8')","relevant":"module = inspect.getmodule(frame[0])?_split_?\"\"\"{0:.2f}\"\"\".format(150)?_split_?loop.run()\n\n@dbus.service.method('test.helloservice')\ndef hello(self):\n    return 'Hello World!'\n\n\nclass BaseTestCase(unittest.TestCase):\n\n    def setUp(self):\n        pass?_split_?"}
{"nl":"How do I merge two lists into a single list?","code":"[j for i in zip(a, b) for j in i]","relevant":"import package\nx = package.ClassName()?_split_?retdict = json.loads(content)?_split_?sample(all_data, number_of_items)?_split_?"}
{"nl":"How do I merge two lists into a single list?","code":"[j for i in zip(a, b) for j in i]","relevant":"import package\nx = package.ClassName()?_split_?retdict = json.loads(content)?_split_?sample(all_data, number_of_items)?_split_?"}
{"nl":"Removing character in list of strings","code":"print([s.replace('8', '') for s in lst])","relevant":"a = [(1, 1), (2, 2), (3, 3)]\nb = [(1, 1), (2, 2), (3, 3)]?_split_?input = 'A large chunk of data.'?_split_?id = Column(Integer, primary_key=True)?_split_?"}
{"nl":"How to split a word into letters in Python","code":"\"\"\",\"\"\".join('Hello')","relevant":"__init__.py?_split_?formulae = []?_split_?with open('in', 'r') as in_file:\n    for line in in_file:\n        out_file.write(line.rstrip('\\n') + s + '\\n')?_split_?"}
{"nl":"In Django, how do I select 100 random records from the database?","code":"Content.objects.all().order_by('?')[:100]","relevant":"text = \"\"\"To get to the destination follow this direction\n1. First turn left and then\ntext text text\n2. Secondly you have to some text here\nsome text here\nFor the second instruction follow the text below:\n\u00ab1. some text some text some text\ntext text text.\n2. some text some text text text text.\n3. some text some text text text text.\u00bb\"\"\"?_split_?if line:\n    ref = line.split()?_split_?print_sorted(filename, sort_col)?_split_?"}
{"nl":"Indexing one array by another in numpy","code":"A[np.arange(A.shape[0])[:, (None)], B]","relevant":"b = x[:, 1:, :-1].swapaxes(0, 1)?_split_?class MemoizedObject(object):\n\n    def __init__(self, md5):\n        self.md5 = result_md5\n\ndef get_real_data(self):\n    print('load...')\nreturn load_file(self.md5)\n\ndef __repr__(self):\n    return '{self.__class__.__name__}(md5={self.md5})'.format(self=self)?_split_?url = sys.argv[1]?_split_?"}
{"nl":"pandas pivot table of sales","code":"df.pivot_table(index='saleid', columns='upc', aggfunc='size', fill_value=0)","relevant":"image_size = cv.GetSize(image)?_split_?for k in not_changed:\n    pass?_split_?assert isinstance(sys.meta_path[0], HardenedModulesHook)?_split_?"}
{"nl":"Confusing with the usage of regex in Python","code":"re.findall('([a-z]*)', 'f233op')","relevant":"import pytz?_split_?from tkinter import *\nroot = Tk()\nc = Canvas(root, height=600, width=600)?_split_?bin_n = bin(n)[2:]\nrevbin = bin_n[::-1]\nreturn int(revbin, 2)?_split_?"}
{"nl":"Confusing with the usage of regex in Python","code":"re.findall('([a-z])*', 'f233op')","relevant":"import pytz?_split_?from tkinter import *\nroot = Tk()\nc = Canvas(root, height=600, width=600)?_split_?bin_n = bin(n)[2:]\nrevbin = bin_n[::-1]\nreturn int(revbin, 2)?_split_?"}
{"nl":"Splitting a string based on a certain set of words","code":"re.split('_for_', 'happy_hats_for_cats')","relevant":"df?_split_?os.seteuid(0)\nopen('file3', 'wc')?_split_?for foo in foo_list:\n    pass?_split_?"}
{"nl":"Splitting a string based on a certain set of words","code":"re.split('_(?:for|or|and)_', 'sad_pandas_and_happy_cats_for_people')","relevant":"df?_split_?os.seteuid(0)\nopen('file3', 'wc')?_split_?for foo in foo_list:\n    pass?_split_?"}
{"nl":"Splitting a string based on a certain set of words","code":"[re.split('_(?:f?or|and)_', s) for s in l]","relevant":"df?_split_?os.seteuid(0)\nopen('file3', 'wc')?_split_?for foo in foo_list:\n    pass?_split_?"}
{"nl":"How do I zip keys with individual values in my lists in python?","code":"[dict(zip(k, x)) for x in v]","relevant":"end = datetime(2012, 10, 6)?_split_?parser.add_argument('USER', type=str, help='Grooveshar user name')\nargs = parser.parse_args()?_split_?def __contains__(self, key):\n    \"\"\"True if the key is in the info axis\"\"\"?_split_?"}
{"nl":"Python how to sort this list?","code":"sorted(lst, reverse=True)","relevant":"crypts.append(mask)?_split_?f = urllib.request.urlopen(req)?_split_?nStr = '000123000123'\nnStr.count('123')?_split_?"}
{"nl":"Sorting numpy array on multiple columns in Python","code":"order_array.sort(order=['year', 'month', 'day'])","relevant":"from django.template import Template, Context?_split_?import datetime?_split_?print(self.mistakes)?_split_?"}
{"nl":"Sorting numpy array on multiple columns in Python","code":"df.sort(['year', 'month', 'day'])","relevant":"from django.template import Template, Context?_split_?import datetime?_split_?print(self.mistakes)?_split_?"}
{"nl":"Python: find out whether a list of integers is coherent","code":"return my_list == list(range(my_list[0], my_list[-1] + 1))","relevant":"def __init__(self):\n    pass?_split_?writer.save()?_split_?for key, value in list(dict.items()):\n    pass?_split_?"}
{"nl":"Concatenate rows of pandas DataFrame with same id","code":"df.groupby('id').agg(lambda x: x.tolist())","relevant":"print('this should fail!')?_split_?def wrap_prop(obj, pname):\n    pass?_split_?list = [{'a': 1, 'b': 2}, {'c': 3, 'd': 4}]?_split_?"}
{"nl":"Double-decoding unicode in python","code":"'X\\xc3\\xbcY\\xc3\\x9f'.encode('raw_unicode_escape').decode('utf-8')","relevant":"max(test_string.rfind(i) for i in '([{')?_split_?x = np.linspace(-50, 50, 100)\ny = np.arange(25)\nX, Y = np.meshgrid(x, y)\nZ = np.zeros((len(y), len(x)))\nfor i in range(len(y)):\n    damp = (i \/ float(len(y))) ** 2\nZ[i] = 5 * damp * (1 - np.sqrt(np.abs(x \/ 50)))\nZ[i] += np.random.uniform(0, 0.1, len(Z[i]))\nax.plot_surface(X, Y, Z, rstride=1, cstride=1000, color='w', shade=False,\n    lw=0.5)\nax.set_zlim(0, 5)\nax.set_xlim(-51, 51)\nax.set_zlabel('Intensity')\nax.view_init(20, -120)\nplt.show()?_split_?class BlogComment(models.Model):\n    blog = models.ForeignKey(Blog)?_split_?"}
{"nl":"Parse String to Float or Int","code":"float(a)","relevant":"self.end = end\n\ndef __iter__(self):\n    return self\n\ndef __next__(self):\n    if self.start == self.end:\n        raise StopIteration()\nr = self.seq[self.start]\nself.start += 1\nreturn r?_split_?import re\nresourceProperties = 'test test token test'\nrpAttrs = [['ajgagag', 'knkagga'], ['token', 'knkagga'], ['ajgagag', 'knkagga']\n    ]\nprint('\\n'.join(value[0] for value in rpAttrs if not list(re.finditer(value\n    [0], resourceProperties))))?_split_?m = x >= 0?_split_?"}
{"nl":"Parse String to Float or Int","code":"try:\n    return int(s)\nexcept ValueError:\n    return float(s)","relevant":"self.end = end\n\ndef __iter__(self):\n    return self\n\ndef __next__(self):\n    if self.start == self.end:\n        raise StopIteration()\nr = self.seq[self.start]\nself.start += 1\nreturn r?_split_?import re\nresourceProperties = 'test test token test'\nrpAttrs = [['ajgagag', 'knkagga'], ['token', 'knkagga'], ['ajgagag', 'knkagga']\n    ]\nprint('\\n'.join(value[0] for value in rpAttrs if not list(re.finditer(value\n    [0], resourceProperties))))?_split_?m = x >= 0?_split_?"}
{"nl":"know if an object has an attribute","code":"if hasattr(a, 'property'):\n    pass","relevant":"s = 'his son\\u2019s friend'\nprint(s.encode('utf-8'))?_split_?inc = incgen()?_split_?print(x)?_split_?"}
{"nl":"know if an object has an attribute","code":"if hasattr(a, 'property'):\n    pass","relevant":"s = 'his son\\u2019s friend'\nprint(s.encode('utf-8'))?_split_?inc = incgen()?_split_?print(x)?_split_?"}
{"nl":"know if an object has an attribute","code":"getattr(a, 'property', 'default value')","relevant":"s = 'his son\\u2019s friend'\nprint(s.encode('utf-8'))?_split_?inc = incgen()?_split_?print(x)?_split_?"}
{"nl":"delete every nth row or column in a matrix using Python","code":"np.delete(a, list(range(0, a.shape[1], 8)), axis=1)","relevant":"hf = 1 \/ (2 * np.pi * x \/ N2)\nht = np.real(np.fft.ifft(hf))\nhtrot = np.roll(ht, N2)\nhtwin = htrot * np.hamming(N)\nreturn ht, htrot, htwin?_split_?\"\"\"{d.month}\/{d.day}\/{d.year} {d:%l}:{d.minute:02}{d:%p}\"\"\".format(d=now)\n\"\"\"4\/4\/2014  6:00PM\"\"\"?_split_?first_day = dt.replace(day=1)?_split_?"}
{"nl":"How do I create a datetime in Python from milliseconds?","code":"datetime.datetime.fromtimestamp(ms \/ 1000.0)","relevant":"d = defaultdict(bool)?_split_?pass?_split_?for i in range(len(l)):\n    if l.__index__(i) == X:\n        l.__setitem__(i, Y)?_split_?"}
{"nl":"fastest way to find the magnitude (length) squared of a vector field","code":"np.einsum('...j,...j->...', vf, vf)","relevant":"plt.xlim(0, 1)?_split_?super(ProductForm, self).__init__(*args, **kwargs)?_split_?login_form = soup.find('form', attrs={'name': 'login_form'})?_split_?"}
{"nl":"Simple URL GET\/POST function","code":"r = requests.get(url)","relevant":"idx = ismember_rows(a, b)?_split_?import math?_split_?res = []?_split_?"}
{"nl":"Simple URL GET\/POST function","code":"r = requests.get(url, params=payload)","relevant":"idx = ismember_rows(a, b)?_split_?import math?_split_?res = []?_split_?"}
{"nl":"Simple URL GET\/POST function","code":"r = requests.post(url, data=payload)","relevant":"idx = ismember_rows(a, b)?_split_?import math?_split_?res = []?_split_?"}
{"nl":"Simple URL GET\/POST","code":"post_response = requests.post(url='http:\/\/httpbin.org\/post', json=post_data)","relevant":"if request.user.is_superuser and '__impersonate' in request.GET:\n    pass?_split_?import warnings?_split_?[4, 6, 5, 3, 7, 8], [1, 2]?_split_?"}
{"nl":"Slicing a list in Django template","code":"{{(mylist | slice): '3:8'}}","relevant":"self.f.flush()\nself.tn.write('\\n')?_split_?def export(obj):\n    __all__.append(obj.__name__)\nreturn obj?_split_?outaction = filesParser.add_argument('-o', dest='outformat', default='smi')?_split_?"}
{"nl":"pandas HDFStore - how to reopen?","code":"df1 = pd.read_hdf('\/home\/...\/data.h5', 'firstSet')","relevant":"import re?_split_?if k not in d or sub[1] < d[k][1]:\n    d[k] = sub\nprint(list(d.values()))?_split_?elements = [1.1, 2.2, 3.3]\nprobabilites = [0.2, 0.5, 0.3]\nnp.random.choice(elements, 10, p=probabilities)?_split_?"}
{"nl":"find last occurence of multiple characters in a string in Python","code":"max(test_string.rfind(i) for i in '([{')","relevant":"s = 'Hugely_long_string_not_to_be_copied'\nij = [(0, 3), (6, 9), (12, 18)]?_split_?pk = a_method_that_may_rise_an_exception()?_split_?data = np.loadtxt('datafile')?_split_?"}
{"nl":"How to print Unicode character in Python?","code":"print('here is your checkmark: ' + '\\u2713')","relevant":"tr = [[1, 2, 3], [1, 2, 4], [5, 6, 7]]\n{a[0]: {b[1]: {c[2] for c in [y for y in tr if y[1] == b[1]]} for b in [x for\n    x in tr if x[0] == a[0]]} for a in tr}?_split_?print(grappelli)?_split_?fmt.format('{bond}, {james} {bond}', bond='bond', james='james')?_split_?"}
{"nl":"How to print Unicode character in Python?","code":"print('\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f')","relevant":"tr = [[1, 2, 3], [1, 2, 4], [5, 6, 7]]\n{a[0]: {b[1]: {c[2] for c in [y for y in tr if y[1] == b[1]]} for b in [x for\n    x in tr if x[0] == a[0]]} for a in tr}?_split_?print(grappelli)?_split_?fmt.format('{bond}, {james} {bond}', bond='bond', james='james')?_split_?"}
{"nl":"in python how do I convert a single digit number into a double digits string?","code":"print('{0}'.format('5'.zfill(2)))","relevant":"fftf = numpy.fft.fftn(f)\ntas = time.time() - tas?_split_?__tablename__ = 'students'?_split_?end = datetime(end_year, end_month, 1)\nreturn [(d.month, d.year) for d in rrule(MONTHLY, dtstart=start, until=end)]?_split_?"}
{"nl":"Best \/ most pythonic way to get an ordered list of unique items","code":"sorted(set(itertools.chain.from_iterable(sequences)))","relevant":"import csv\nwith open('\/path\/to\/input\/file') as infile:\n    reader = csv.reader(infile, delimiter=';')?_split_?import imp\npackages = imp.load_source('packages', '\/path\/to\/packages.py')?_split_?code2?_split_?"}
{"nl":"Pandas DataFrame to list","code":"df['a'].values.tolist()","relevant":"comprehended = Timer(setup='lst=( (\"a\",), (\"b\",), (1,), (2,))', stmt=\n    '[i[0] for i in lst]')\ncomprehended.repeat()\nmapped.repeat()?_split_?george = Author.objects.create(name='George')\nringo = Author.objects.create(name='Ringo')\nentry.authors.add(john, paul, george, ringo)?_split_?import file1\nimport imp\nimp.reload(file1)?_split_?"}
{"nl":"Pandas DataFrame to list","code":"df['a'].tolist()","relevant":"comprehended = Timer(setup='lst=( (\"a\",), (\"b\",), (1,), (2,))', stmt=\n    '[i[0] for i in lst]')\ncomprehended.repeat()\nmapped.repeat()?_split_?george = Author.objects.create(name='George')\nringo = Author.objects.create(name='Ringo')\nentry.authors.add(john, paul, george, ringo)?_split_?import file1\nimport imp\nimp.reload(file1)?_split_?"}
{"nl":"Escaping quotes in string","code":"replace('\"', '\\\\\"')","relevant":"client_socket.send(size)?_split_?def main():\n    pass?_split_?(1.0, 1.0, 7085, 427352.9277999997, 4848790.9351),?_split_?"}
{"nl":"How to check if a character is upper-case in Python?","code":"print(all(word[0].isupper() for word in words))","relevant":"run(workon + 'git pull')\nrun(workon + 'do other stuff, etc')?_split_?output = [int(x) for x in '{:08b}'.format(input)]?_split_?+code \/ speed.py?_split_?"}
{"nl":"What is the best way to remove a dictionary item by value in python?","code":"myDict = {key: val for key, val in list(myDict.items()) if val != 42}","relevant":"def parse(self, response):\n    for href in response.css('.link.linkWithHash.detailsLink::attr(href)'):\n        pass?_split_?for line in lines:\n    line = line.strip()?_split_?xs[0] is a and xs[1] is a?_split_?"}
{"nl":"What is the best way to remove a dictionary item by value in python?","code":"{key: val for key, val in list(myDict.items()) if val != 42}","relevant":"def parse(self, response):\n    for href in response.css('.link.linkWithHash.detailsLink::attr(href)'):\n        pass?_split_?for line in lines:\n    line = line.strip()?_split_?xs[0] is a and xs[1] is a?_split_?"}
{"nl":"How can I determine the byte length of a utf-8 encoded string in Python?","code":"return len(s.encode('utf-8'))","relevant":"import socket?_split_?class UserCreateForm(UserCreationForm):\n    email = forms.EmailField(required=True)\n\ndef __init__(self, *args, **kwargs):\n    super(UserCreateForm, self).__init__(*args, **kwargs)\nfor fieldname in ['username', 'password1', 'password2']:\n    self.fields[fieldname].help_text = None?_split_?[8, 9, 10, 11],?_split_?"}
{"nl":"In Python 2.5, how do I kill a subprocess?","code":"os.kill(process.pid, signal.SIGKILL)","relevant":"form_fields = {'data': ['foo', 'bar']}?_split_?def func2(y, a, b):\n    pass?_split_?asking = \"hello! what's your name?\"?_split_?"}
{"nl":"Python Pandas How to select rows with one or more nulls from a DataFrame without listing columns explicitly?","code":"df[pd.isnull(df).any(axis=1)]","relevant":"new_list = map(convert, old_list)?_split_?def newmethod(instance):\n    pass?_split_?for i in range(1, 25, 5):\n    pass?_split_?"}
{"nl":"Strip random characters from url","code":"url.split('&')[-1].replace('=', '') + '.html'","relevant":"from subprocess import call\nstatus = call('mvn clean && mvn compile', cwd='\/users\/foo\/xxx', shell=True)?_split_?ax.spines['bottom'].set_position('zero')?_split_?df = df.sortlevel(level=1, axis=1)?_split_?"}
{"nl":"Expat parsing in python 3","code":"parser.ParseFile(open('sample.xml', 'rb'))","relevant":"p.add_argument('-i', '--ini', metavar='', help='use alternate ini file')\nprint('\\n', p.parse_args())?_split_?l = [50, 2, 1, 9]\nprint(sorted(l, key=functools.cmp_to_key(my_cmp)))?_split_?app.mainloop()?_split_?"}
{"nl":"how do I halt execution in a python script?","code":"sys.exit()","relevant":"{'south_carolina': 'SC', 'north_carolina': 'NC'}?_split_?A = numpy.array([['a', 'b', 'c'], ['d', 'd', 'e']])\nCounter(A.flat).most_common(1)?_split_?copy[alert_status] = copy[alert_status].map(alert_status_dict)?_split_?"}
{"nl":"How to dynamically assign values to class properties in Python?","code":"setattr(self, attr, group)","relevant":"line_counter += 1?_split_?assert False, 'should not have duplicates'?_split_?break?_split_?"}
{"nl":"How to decode a 'url-encoded' string in python","code":"urllib.parse.unquote(urllib.parse.unquote(some_string))","relevant":"import timeit\ntimeit.timeit('map(str.strip, \"QVOD, Baidu Player\".split(\",\"))', number=100000)\ntimeit.timeit('map(stripper, \"QVOD, Baidu Player\".split(\",\"))',\n    'stripper=str.strip', number=100000)\ntimeit.timeit(\"[item.strip() for item in 'QVOD, Baidu Player'.split(',')]\",\n    number=100000)?_split_?something = Thing()?_split_?db.dogs.insert(dog_name='daisy')?_split_?"}
{"nl":"How to decode a 'url-encoded' string in python","code":"urllib.parse.unquote(urllib.parse.unquote('FireShot3%2B%25282%2529.png'))","relevant":"import timeit\ntimeit.timeit('map(str.strip, \"QVOD, Baidu Player\".split(\",\"))', number=100000)\ntimeit.timeit('map(stripper, \"QVOD, Baidu Player\".split(\",\"))',\n    'stripper=str.strip', number=100000)\ntimeit.timeit(\"[item.strip() for item in 'QVOD, Baidu Player'.split(',')]\",\n    number=100000)?_split_?something = Thing()?_split_?db.dogs.insert(dog_name='daisy')?_split_?"}
{"nl":"How to use Flask-Security register view?","code":"app.config['SECURITY_REGISTER_URL'] = '\/create_account'","relevant":"thread.start()?_split_?temp = []\nfor i in zip(a, b):\n    pass?_split_?class resources:\n\n    def __init__(self):\n        self.data = 'at-init'\n\ndef __enter__(self):\n    self.data = 'at-enter'\nreturn self?_split_?"}
{"nl":"IO Error while storing data in pickle","code":"output = open('\/home\/user\/test\/wsservice\/data.pkl', 'wb')","relevant":"d.append({'Player': p, 'Team': p.team, 'Passer Rating': p.passer_rating()})?_split_?random_obj = Model.objects.all()[random_idx]?_split_?fig, axs = plt.subplots(1, 2, figsize=(8, 5))\nfor ax in axs:\n    ax.plot(x, y)\nax.plot(x, y * 2)\nax.plot(x, y * 10)\nax.set_xlim(-10, 10)\nautoscale_y(axs[1])\naxs[0].set_title('Rescaled x-axis')\naxs[1].set_title(\"\"\"Rescaled x-axis\nand used \"autoscale_y\\\"\"\"\")\nplt.show()?_split_?"}
{"nl":"remove an element from a list by index","code":"del a[(-1)]","relevant":"auth = tweepy.OAuthHandler(consumer_key, consumer_secret)?_split_?with open('names.csv') as csvfile:\n    pass?_split_?[0, 1][True]\n[0, 1][False]?_split_?"}
{"nl":"remove an element from a list by index","code":"a.pop(1)","relevant":"auth = tweepy.OAuthHandler(consumer_key, consumer_secret)?_split_?with open('names.csv') as csvfile:\n    pass?_split_?[0, 1][True]\n[0, 1][False]?_split_?"}
{"nl":"remove an element from a list by index","code":"a.pop()","relevant":"auth = tweepy.OAuthHandler(consumer_key, consumer_secret)?_split_?with open('names.csv') as csvfile:\n    pass?_split_?[0, 1][True]\n[0, 1][False]?_split_?"}
{"nl":"remove an element from a list by index","code":"a.pop(index)","relevant":"auth = tweepy.OAuthHandler(consumer_key, consumer_secret)?_split_?with open('names.csv') as csvfile:\n    pass?_split_?[0, 1][True]\n[0, 1][False]?_split_?"}
{"nl":"remove an element from a list by index","code":"del a[index]","relevant":"auth = tweepy.OAuthHandler(consumer_key, consumer_secret)?_split_?with open('names.csv') as csvfile:\n    pass?_split_?[0, 1][True]\n[0, 1][False]?_split_?"}
{"nl":"How do I print a Celsius symbol with matplotlib?","code":"ax.set_xlabel('Temperature (\\u2103)')","relevant":"return [item for item in mylist if item[0][0] == letter]?_split_?filename = traceback.tb_frame.f_code.co_filename?_split_?url = reverse('profile', kwargs={'user_id': user.id})?_split_?"}
{"nl":"How do I print a Celsius symbol with matplotlib?","code":"ax.set_xlabel('Temperature ($^\\\\circ$C)')","relevant":"return [item for item in mylist if item[0][0] == letter]?_split_?filename = traceback.tb_frame.f_code.co_filename?_split_?url = reverse('profile', kwargs={'user_id': user.id})?_split_?"}
{"nl":"'List of lists' to 'list' without losing empty lists from the original list of lists","code":"[''.join(l) for l in list_of_lists]","relevant":"raise forms.ValidationError('Did you mean...')?_split_?new_d = {}?_split_?letter = 'e'?_split_?"}
{"nl":"How do I get a list of all the duplicate items using pandas in python?","code":"pd.concat(g for _, g in df.groupby('ID') if len(g) > 1)","relevant":"def with_open(filename):\n    with open(filename) as f:\n        for line in f:\n            yield line?_split_?root.mainloop()?_split_?strides = a.strides + (a.strides[-1],)\nreturn np.lib.stride_tricks.as_strided(a, shape=shape, strides=strides)?_split_?"}
{"nl":"deleting rows in numpy array","code":"x = numpy.delete(x, 2, axis=1)","relevant":"p6 = np.array([23.691, 9.935, 28.389])?_split_?for item in [1, 2, 3, 4]:\n    pass?_split_?class MySQLCursorDict(mysql.connector.cursor.MySQLCursor):\n\n    def _row_to_python(self, rowdata, desc=None):\n        row = super(MySQLCursorDict, self)._row_to_python(rowdata, desc)\nif row:\n    return dict(zip(self.column_names, row))\nreturn None\ndb = mysql.connector.connect(user='root', database='test')\ncursor = db.cursor(cursor_class=MySQLCursorDict)?_split_?"}
{"nl":"deleting rows in numpy array","code":"x = numpy.delete(x, 0, axis=0)","relevant":"p6 = np.array([23.691, 9.935, 28.389])?_split_?for item in [1, 2, 3, 4]:\n    pass?_split_?class MySQLCursorDict(mysql.connector.cursor.MySQLCursor):\n\n    def _row_to_python(self, rowdata, desc=None):\n        row = super(MySQLCursorDict, self)._row_to_python(rowdata, desc)\nif row:\n    return dict(zip(self.column_names, row))\nreturn None\ndb = mysql.connector.connect(user='root', database='test')\ncursor = db.cursor(cursor_class=MySQLCursorDict)?_split_?"}
{"nl":"Merge DataFrames in Pandas using the mean","code":"pd.concat((df1, df2), axis=1).mean(axis=1)","relevant":"string = [{'name': 'sam'}]?_split_?\"\"\" \"\"\".join(str(part) for part in parts if part is not None)?_split_?template_values = {'value_name_in_html': value_name_in_python}\ntemplate = JINJA_ENVIRONMENT.get_template('file_patch')?_split_?"}
{"nl":"Average values in two Numpy arrays","code":"np.mean(np.array([old_set, new_set]), axis=0)","relevant":"maxDensityValue = np.max(my_pdf(x))\nfor e in new_values:\n    pass?_split_?x = a[:i]?_split_?fs.release()?_split_?"}
{"nl":"Changing marker's size in matplotlib","code":"scatter(x, y, s=500, color='green', marker='h')","relevant":"img.putalpha(ia)\nimg.save('result.png')?_split_?df_starts = df_starts.reindex(full_index, fill_value=0)?_split_?@button.buttonAndHandler(_('Order'))\ndef handleApply(self, action):\n    data, errors = self.extractData()\nif 'address1' in data and 'address2' in data:\n    if len(data['address1']) < 2 and len(data['address2']) < 2:\n        raise ActionExecutionError(Invalid(_(\n            'Please provide a valid address')))\nelif len(data['address1']) < 2 and len(data['address2']) > 10:\n    raise WidgetActionExecutionError('address2', Invalid(\n        'Please put the main part of the address in the first field'))\nif errors:\n    pass?_split_?"}
{"nl":"split items in list","code":"result = [item for word in words for item in word.split(',')]","relevant":"class FILE_HEAD(ctypes.Structure):\n    pass?_split_?frames = wr.readframes(wr.getnframes() - 1)?_split_?minheap.add(maxheap.poll())?_split_?"}
{"nl":"Converting JSON date string to python datetime","code":"datetime.datetime.strptime('2012-05-29T19:30:03.283Z', '%Y-%m-%dT%H:%M:%S.%fZ')","relevant":"dc_files.pop(index)?_split_?d[t.tag].update(('@' + k, v) for k, v in list(t.attrib.items()))?_split_?p = getpass.getpass()\nssh.connect('hostname', username='user', password=p)\nstdin, stdout, stderr = ssh.exec_command('ls')\nprint(stdout.readlines())\nssh.close()?_split_?"}
{"nl":"python comprehension loop for dictionary","code":"sum(item['one'] for item in list(tadas.values()))","relevant":"for elem in seed:\n    newPartials = []\nfor partial in solutions:\n    newPartial = partial[:]\nnewPartial.append(elem)\nnewPartials.append(newPartial)\nsolutions.extend(newPartials)?_split_?is_canceled = Column(Boolean, default=False)?_split_?from collections import defaultdict?_split_?"}
{"nl":"How to base64 encode a PDF file in Python","code":"a = open('pdf_reference.pdf', 'rb').read().encode('base64')","relevant":"r = requests.get('http:\/\/www.hko.gov.hk\/contente.htm')\nhkweather = bs4.BeautifulSoup(r.text)\nprint(hkweather.select('div[class=\"fnd_date\"]'))?_split_?df = pd.DataFrame([[995, 4088], [8, 25], [1, 1]], index=pd.Index(['ABCD',\n    'EFGH', 'OPEF'], name='Name'), columns=pd.MultiIndex.from_product([[\n    'Unique Sessions'], ['2016-06-21', '2016-06-29']], names=[None, 'Date']))?_split_?maxfd = os.sysconf('SC_OPEN_MAX')?_split_?"}
{"nl":"split a string in python","code":"a.rstrip().split('\\n')","relevant":"if answer.strip() == 'end':\n    pass?_split_?m = Message(text=\n    'This is a Tkinter message widget. Pretty exiting, huh? I enjoy Tkinter. It is very simple.'\n    )\nm.pack(expand=True, fill='x')?_split_?from scipy import misc?_split_?"}
{"nl":"split a string in python","code":"a.split('\\n')[:-1]","relevant":"if answer.strip() == 'end':\n    pass?_split_?m = Message(text=\n    'This is a Tkinter message widget. Pretty exiting, huh? I enjoy Tkinter. It is very simple.'\n    )\nm.pack(expand=True, fill='x')?_split_?from scipy import misc?_split_?"}
{"nl":"How can I return HTTP status code 204 from a Django view?","code":"return HttpResponse(status=204)","relevant":"numbers = {a: b for item in PhoneList for a, _, b in (item.partition(':'),)}\nprint(numbers)?_split_?subprocess.call(('ps', '-l'))\nprocess.wait()\nprint('after wait')\nsubprocess.call(('ps', '-l'))?_split_?def socketio(remaining):\n    pass?_split_?"}
{"nl":"check if a value exist in a list","code":"(7 in a)","relevant":"def search(request):\n    if 'q_word' in request:\n        pass?_split_?def profileit(func):\n    pass?_split_?df\nres = df.groupby('month')\nres['qualified'] = df.groupby('month')?_split_?"}
{"nl":"check if a value exist in a list","code":"('a' in a)","relevant":"def search(request):\n    if 'q_word' in request:\n        pass?_split_?def profileit(func):\n    pass?_split_?df\nres = df.groupby('month')\nres['qualified'] = df.groupby('month')?_split_?"}
{"nl":"Sorting JSON data by keys value","code":"sorted(results, key=itemgetter('year'))","relevant":"my_list = [1, 2, 3]?_split_?import matplotlib.pyplot as plt?_split_?from py_compile import compile, PyCompileError?_split_?"}
{"nl":"How do I get current URL in Selenium Webdriver 2 Python?","code":"print(browser.current_url)","relevant":"[next(it) for it in islice(iters, len(a))]\n[next(it) for it in islice(iters, len(a))]?_split_?[['string 1', 'atest string:'], ['string 1', 'test 2: anothertest string']]?_split_?return 0?_split_?"}
{"nl":"Python: Split string with multiple delimiters","code":"re.split('; |, ', str)","relevant":"draw.rectangle((x, y, x + walnut.size[0], y + walnut.size[1]), outline='red')\nim.save('out.png')?_split_?def install():\n    print('In install')\nmethod_name = 'install'\npossibles = globals().copy()\npossibles.update(locals())\nmethod = possibles.get(method_name)\nif not method:\n    raise NotImplementedError('Method %s not implemented' % method_name)\nmethod()?_split_?for i in range(1000):\n    ff_array = numpy.append(ff_array, (i, 243))?_split_?"}
{"nl":"Unescaping Characters in a String with Python","code":"\"\"\"\\\\u003Cp\\\\u003E\"\"\".decode('unicode-escape')","relevant":"def closeEvent(self, event):\n    quit_msg = 'Are you sure you want to exit the program?'\nreply = QtGui.QMessageBox.question(self, 'Message', quit_msg, QtGui.\n    QMessageBox.Yes, QtGui.QMessageBox.No)\nif reply == QtGui.QMessageBox.Yes:\n    event.accept()\nelse:\n    event.ignore()?_split_?import mmap\nwith open('infilename', 'r') as in_f:\n    pass?_split_?import pylab\nNUM_COLORS = 22\ncm = pylab.get_cmap('gist_rainbow')?_split_?"}
{"nl":"Convert string date to timestamp in Python","code":"time.mktime(datetime.datetime.strptime(s, '%d\/%m\/%Y').timetuple())","relevant":"import numpy as np?_split_?import os, os.path\nfileiter = (os.path.join(root, f) for root, _, files in os.walk(dirtocheck) for\n    f in files)\nsmallfileiter = (f for f in fileiter if os.path.getsize(f) < 200 * 1024)\nfor small in smallfileiter:\n    os.remove(small)?_split_?ll = []\nfor l in list(d.values()):\n    pass?_split_?"}
{"nl":"Convert string date to timestamp in Python","code":"int(datetime.datetime.strptime('01\/12\/2011', '%d\/%m\/%Y').strftime('%s'))","relevant":"import numpy as np?_split_?import os, os.path\nfileiter = (os.path.join(root, f) for root, _, files in os.walk(dirtocheck) for\n    f in files)\nsmallfileiter = (f for f in fileiter if os.path.getsize(f) < 200 * 1024)\nfor small in smallfileiter:\n    os.remove(small)?_split_?ll = []\nfor l in list(d.values()):\n    pass?_split_?"}
{"nl":"How to get http headers in flask?","code":"request.headers['your-header-name']","relevant":"d.sort_values(['ANO', 'MNO']).reset_index(drop=True)?_split_?print('Current working directory : ', os.getcwd())?_split_?try:\n    u = urllib.request.urlopen(req)\nexcept urllib.error.HTTPError as e:\n    print(e.code)?_split_?"}
{"nl":"How to subset a data frame using Pandas based on a group criteria?","code":"df.groupby('User')['X'].filter(lambda x: x.sum() == 0)","relevant":"request.setRawHeader('Connection', 'keep-alive')\nreturn QNetworkAccessManager.createRequest(self, operation, request, data)?_split_?import datetime\n\n@app.before_first_request\ndef create_user():\n    pass?_split_?start = time.Now()\nwait(time.Millisecond * 200)\nfmt.Println('Verify:', time.Now().Sub(start))?_split_?"}
{"nl":"How to subset a data frame using Pandas based on a group criteria?","code":"df.loc[df.groupby('User')['X'].transform(sum) == 0]","relevant":"request.setRawHeader('Connection', 'keep-alive')\nreturn QNetworkAccessManager.createRequest(self, operation, request, data)?_split_?import datetime\n\n@app.before_first_request\ndef create_user():\n    pass?_split_?start = time.Now()\nwait(time.Millisecond * 200)\nfmt.Println('Verify:', time.Now().Sub(start))?_split_?"}
{"nl":"How to subset a data frame using Pandas based on a group criteria?","code":"df.groupby('User')['X'].transform(sum) == 0","relevant":"request.setRawHeader('Connection', 'keep-alive')\nreturn QNetworkAccessManager.createRequest(self, operation, request, data)?_split_?import datetime\n\n@app.before_first_request\ndef create_user():\n    pass?_split_?start = time.Now()\nwait(time.Millisecond * 200)\nfmt.Println('Verify:', time.Now().Sub(start))?_split_?"}
{"nl":"How do I find an element that contains specific text in Selenium Webdriver (Python)?","code":"driver.find_elements_by_xpath(\"\/\/*[contains(text(), 'My Button')]\")","relevant":"def change():\n    pass?_split_?i += 1?_split_?for i in range(len(the_list) - 1):\n    pass?_split_?"}
{"nl":"Convert pandas group by object to multi-indexed Dataframe","code":"df.set_index(['Name', 'Destination'])","relevant":"result = pool.apply_async(fill_array, [val])?_split_?return 'An employee of a department.'?_split_?fields = {'value_1': '12345', 'value_2': '67890'}?_split_?"}
{"nl":"How do I coalesce a sequence of identical characters into just one?","code":"print(re.sub('(\\\\W)\\\\1+', '\\\\1', a))","relevant":"import timeit?_split_?im = getattr(data, 'image')?_split_?import uuid\nuuid.uuid4().int & (1 << 64) - 1?_split_?"}
{"nl":"How to open a file with the standard application?","code":"os.system('start \"$file\"')","relevant":"choices[idx]?_split_?with open('secondfile', 'r') as f2:\n    pass?_split_?t_full = np.linspace(0, 0.01, 2 ** 12, endpoint=False)\nthetas = np.multiply.outer(2 * np.pi * t_full, w)\nthetas += 2 * pi * np.random.random(thetas.shape)?_split_?"}
{"nl":"Convert a Unicode string to a string","code":"unicodedata.normalize('NFKD', title).encode('ascii', 'ignore')","relevant":"t = 'f|u|n|n|y||b|o|y||a||c|a|t'?_split_?from google.appengine.ext import db?_split_?while last < len(seq):\n    pass?_split_?"}
{"nl":"Convert a Unicode string to a string","code":"a.encode('ascii', 'ignore')","relevant":"t = 'f|u|n|n|y||b|o|y||a||c|a|t'?_split_?from google.appengine.ext import db?_split_?while last < len(seq):\n    pass?_split_?"}
{"nl":"Get a filtered list of files in a directory","code":"files = [f for f in os.listdir('.') if re.match('[0-9]+.*\\\\.jpg', f)]","relevant":"file = forms.FileField(label='Choose excel to upload')?_split_?only_names.append(entry[0])?_split_?target_feature_names.append(final_label)\noutput_df = pd.DataFrame(output_nparray, columns=target_feature_names)?_split_?"}
{"nl":"Adding a 1-D Array to a 3-D array in Numpy","code":"np.zeros((6, 9, 20)) + np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])[(None), :, (None)]","relevant":"wine = 'pinot_noir'?_split_?print(groups.median())?_split_?pass?_split_?"}
{"nl":"Adding a 1-D Array to a 3-D array in Numpy","code":"np.zeros((6, 9, 20)) + np.array([1, 2, 3, 4, 5, 6, 7, 8, 9]).reshape((1, 9, 1))","relevant":"wine = 'pinot_noir'?_split_?print(groups.median())?_split_?pass?_split_?"}
{"nl":"How can I launch an instance of an application using Python?","code":"os.system('start excel.exe <path\/to\/file>')","relevant":"from subprocess import Popen?_split_?ch = logging.StreamHandler()?_split_?counter = byte(counter + 1)?_split_?"}
{"nl":"What is the proper way to print a nested list with the highest value in Python","code":"print(max(x, key=sum))","relevant":"class Command(BaseCommand):\n    help = 'runs your code in the django environment'\n\ndef handle(self, *args, **options):\n    all_entries = MyModel.objects.all()\nfor entry in all_entries:\n    pass?_split_?s = np.array([[20], [123], [113], [103], [123]])\nstd = s.std()?_split_?for i in f:\n    print(i)\nfor i in f:\n    pass?_split_?"}
{"nl":"Functional statement in Python to return the sum of certain lists in a list of lists","code":"sum(len(y) for y in x if len(y) > 1)","relevant":"self.ranges[k] += 1?_split_?self.__name = name + 'yes'?_split_?debug(str(s))?_split_?"}
{"nl":"Python - Insert numbers in string between quotes","code":"re.sub('(\\\\d+)', '\"\\\\1\"', 'This is number 1 and this is number 22')","relevant":"?_split_?success, modified_string = f(something)?_split_?if name.startswith('#'):\n    hashtags.append(name)?_split_?"}
{"nl":"Multiplying Rows and Columns of Python Sparse Matrix by elements in an Array","code":"numpy.dot(numpy.dot(a, m), a)","relevant":"fd = open(filename, 'wb')\nioctl(fd, USBDEVFS_RESET, 0)?_split_?choice = 'left'?_split_?insert = db + nosql + '.insert(post)'?_split_?"}
{"nl":"How to check if something exists in a postgresql database using django?","code":"Entry.objects.filter(name='name', title='title').exists()","relevant":"suitefn = getattr(mod, 'suite')\nsuite.addTest(suitefn())?_split_?def random_bool(shape, p=0.5):\n    n = np.prod(shape)?_split_?'\/etc\/apache2\/mime.types', '\/usr\/local\/etc\/httpd\/conf\/mime.types'\n'\/usr\/local\/lib\/netscape\/mime.types',?_split_?"}
{"nl":"Sort a nested list by two elements","code":"sorted(l, key=lambda x: (-int(x[1]), x[0]))","relevant":"lis = [[1], [1, 2], [1, 2, 3]]\nnew_lis = lis[:]\n[(id(x) == id(y)) for x, y in zip(lis, new_lis)]\nnew_lis1 = deepcopy(lis)\n[(id(x) == id(y)) for x, y in zip(lis, new_lis1)]?_split_?ax.yaxis.set_visible(False)?_split_?for i, x in enumerate(A):\n    pass?_split_?"}
{"nl":"Django - How to simply get domain name?","code":"request.META['HTTP_HOST']","relevant":"PyEval_SaveThread()?_split_?type = models.ForeignKey(Type, default=mydefault)?_split_?n.drop1 = L.Dropout(n.fc1, dropout_param=dict(dropout_ratio=0.5))?_split_?"}
{"nl":"Python Regex Get String Between Two Substrings","code":"re.findall(\"api\\\\('(.*?)'\", \"api('randomkey123xyz987', 'key', 'text')\")","relevant":"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 31]?_split_?from PyQt4.QtCore import pyqtSlot as Slot?_split_?from django.db.models import signals?_split_?"}
{"nl":"Call Perl script from Python","code":"subprocess.call(['\/usr\/bin\/perl', '.\/uireplace.pl', var])","relevant":"tree = cKDTree(data)?_split_?array([[0, 0, 0, 2, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 2], [0, 0, 0, 0, 0, \n    2, 1, 0], [2, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 2,\n    0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 0, 0, 0, 0, 1, 0]])?_split_?print(foo)?_split_?"}
{"nl":"Pythonic way to print list items","code":"print('\\n'.join(str(p) for p in myList))","relevant":"Route('\/', handlers.BarList),?_split_?df = pd.DataFrame.from_records(t, columns=t.columns)?_split_?assert b == 's', (h(b), h(f.read(4)), repr(f.read(50)))?_split_?"}
{"nl":"update dictionary with dynamic keys and values in python","code":"mydic.update({i: o['name']})","relevant":"def trysock(request):\n    pass?_split_?for key, value in list(request.POST.items()):\n    pass?_split_?[run]?_split_?"}
{"nl":"how to split a unicode string into list","code":"list(stru.decode('utf-8'))","relevant":"hourOfDay?_split_?X, Y = np.meshgrid(dx, dx)?_split_?sys.stdout.write(message)?_split_?"}
{"nl":"Convert UTF-8 with BOM to UTF-8 with no BOM in Python","code":"u = s.decode('utf-8-sig')","relevant":"0, 3234\n1, 42341?_split_?textb = 'so is very cool'?_split_?return 0, subset1, subset2?_split_?"}
{"nl":"How do I do a not equal in Django queryset filtering?","code":"Entry.objects.filter(~Q(id=3))","relevant":"import bz2\n\ndef comptest(s):\n    print('original length:', len(s))\nprint('zlib compressed length:', len(zlib.compress(s)))\nprint('bz2 compressed length:', len(bz2.compress(s)))?_split_?import textwrap?_split_?Data = pandas.read_csv('CSVfile.csv')?_split_?"}
{"nl":"How can I lookup an attribute in any scope by name?","code":"getattr(__builtins__, 'range')","relevant":"y = '123 4'?_split_?canada = gpd.read_file('CAN_adm1.shp')\ncanada.plot('myvalues', cmap='OrRd')?_split_?def run(self):\n    pass?_split_?"}
{"nl":"How to make a python script which can logoff, shutdown, and restart a computer?","code":"subprocess.call(['shutdown', '\/r', '\/t', '900'])","relevant":"next(b, None)\nreturn zip(a, b)?_split_?o = BillingSystem.query.get(1)\na = Product1()\na.billing_system_id = o.id?_split_?df = df.head(10)?_split_?"}
{"nl":"How to make a python script which can logoff, shutdown, and restart a computer?","code":"subprocess.call(['shutdown', '\/s'])","relevant":"next(b, None)\nreturn zip(a, b)?_split_?o = BillingSystem.query.get(1)\na = Product1()\na.billing_system_id = o.id?_split_?df = df.head(10)?_split_?"}
{"nl":"How to make a python script which can logoff, shutdown, and restart a computer?","code":"subprocess.call(['shutdown', '\/a '])","relevant":"next(b, None)\nreturn zip(a, b)?_split_?o = BillingSystem.query.get(1)\na = Product1()\na.billing_system_id = o.id?_split_?df = df.head(10)?_split_?"}
{"nl":"How to make a python script which can logoff, shutdown, and restart a computer?","code":"subprocess.call(['shutdown', '\/l '])","relevant":"next(b, None)\nreturn zip(a, b)?_split_?o = BillingSystem.query.get(1)\na = Product1()\na.billing_system_id = o.id?_split_?df = df.head(10)?_split_?"}
{"nl":"How to make a python script which can logoff, shutdown, and restart a computer?","code":"subprocess.call(['shutdown', '\/r'])","relevant":"next(b, None)\nreturn zip(a, b)?_split_?o = BillingSystem.query.get(1)\na = Product1()\na.billing_system_id = o.id?_split_?df = df.head(10)?_split_?"}
{"nl":"How to erase the file contents of text file in Python?","code":"open('filename', 'w').close()","relevant":"lines.set_transform(trans)\nax.add_collection(lines)\nplt.show()?_split_?ax_img.imshow(img, cmap=plt.cm.gray)?_split_?mask_0 = cv2.inRange(hsv, lower_red_0, upper_red_0)?_split_?"}
{"nl":"How to erase the file contents of text file in Python?","code":"open('file.txt', 'w').close()","relevant":"lines.set_transform(trans)\nax.add_collection(lines)\nplt.show()?_split_?ax_img.imshow(img, cmap=plt.cm.gray)?_split_?mask_0 = cv2.inRange(hsv, lower_red_0, upper_red_0)?_split_?"}
{"nl":"Pandas DataFrame to List of Dictionaries","code":"df.to_dict('index')","relevant":"import pandas as pd\nimport numpy as np?_split_?profile.set_preference('network.proxy.socks', '127.0.0.1')?_split_?class Foo(object):\n    pass?_split_?"}
{"nl":"Pandas DataFrame to List of Dictionaries","code":"df.to_dict('records')","relevant":"import pandas as pd\nimport numpy as np?_split_?profile.set_preference('network.proxy.socks', '127.0.0.1')?_split_?class Foo(object):\n    pass?_split_?"}
{"nl":"pandas dataframe groupby datetime month","code":"df.groupby(pd.TimeGrouper(freq='M'))","relevant":"temp = '{0:b}'.format(i)?_split_?import pandas as pd?_split_?ax2.set_xlim(-5, 5)?_split_?"}
{"nl":"How do I divide the members of a list by the corresponding members of another list in Python?","code":"[(c \/ t) for c, t in zip(conversions, trials)]","relevant":"root.geometry('%sx%s+%s+%s' % (w, h, a, b))\nroot.mainloop()?_split_?obj.keyframe_insert(data_path='location', frame=20.0)?_split_?i = i + 1?_split_?"}
{"nl":"sort dict by value python","code":"sorted(data, key=data.get)","relevant":"return True\ncpplib = cdll.LoadLibrary('call_callback.so')?_split_?[('XXX' if item == 'abc' else item) for item in mylist]?_split_?if accumulator is not None:\n    pass?_split_?"}
{"nl":"sort dict by value python","code":"sorted(data.values())","relevant":"return True\ncpplib = cdll.LoadLibrary('call_callback.so')?_split_?[('XXX' if item == 'abc' else item) for item in mylist]?_split_?if accumulator is not None:\n    pass?_split_?"}
{"nl":"sort dict by value python","code":"sorted(list(data.items()), key=lambda x: x[1])","relevant":"return True\ncpplib = cdll.LoadLibrary('call_callback.so')?_split_?[('XXX' if item == 'abc' else item) for item in mylist]?_split_?if accumulator is not None:\n    pass?_split_?"}
{"nl":"sort dict by value python","code":"sorted(list(data.items()), key=lambda x: x[1])","relevant":"return True\ncpplib = cdll.LoadLibrary('call_callback.so')?_split_?[('XXX' if item == 'abc' else item) for item in mylist]?_split_?if accumulator is not None:\n    pass?_split_?"}
{"nl":"How do I display current time using Python + Django?","code":"now = datetime.datetime.now().strftime('%H:%M:%S')","relevant":"import sys\nimport re?_split_?print(map(float_or_str, line.split()))?_split_?frame.grid_columnconfigure(0, weight=1)?_split_?"}
{"nl":"Find the nth occurrence of substring in a string","code":"\"\"\"foo bar bar bar\"\"\".replace('bar', 'XXX', 1).find('bar')","relevant":"def validate_map(e):\n    pass?_split_?print(list_A, list_B)?_split_?print(k, v)?_split_?"}
{"nl":"How do you check the presence of many keys in a Python dictinary?","code":"set(['stackoverflow', 'google']).issubset(sites)","relevant":"self.button = gtk.Button('Hello World')?_split_?array = string.split(',')\nfor word in array:\n    pass?_split_?s = Switcher({'a': 10, 'b': 20})?_split_?"}
{"nl":"Replace part of a string in Python?","code":"stuff.replace(' and ', '\/')","relevant":"try:\n    value = a \/ b\nexcept ZeroDivisionError:\n    value = float('Inf')?_split_?f = list(sys._current_frames().values())[0]\nprint(f.f_back.f_globals['__file__'])\nprint(f.f_back.f_globals['__name__'])?_split_?def decode_and_resize(image_str_tensor):\n    \"\"\"Decodes jpeg string, resizes it and returns a uint8 tensor.\"\"\"\nimage = tf.image.decode_jpeg(image_str_tensor, channels=CHANNELS)\nimage = tf.expand_dims(image, 0)\nimage = tf.image.resize_bilinear(image, [HEIGHT, WIDTH], align_corners=False)\nimage = tf.squeeze(image, squeeze_dims=[0])\nimage = tf.cast(image, dtype=tf.uint8)\nreturn image\ndecoded_images = tf.map_fn(decode_and_resize, images_placeholder, back_prop\n    =False, dtype=tf.uint8)\nimages = tf.image.convert_image_dtype(decoded_images, dtype=tf.float32)\nimages = tf.sub(images, 0.5)\nimages = tf.mul(images, 2.0)?_split_?"}
{"nl":"How to use `numpy.savez` in a loop for save more than one array?","code":"np.savez(tmp, *[getarray[0], getarray[1], getarray[8]])","relevant":"\"\"\"f = cos(x) * sin(x)\n\"\"\"?_split_?a_string = 'abcd'\nfor x in a_string:\n    pass?_split_?loop.run()?_split_?"}
{"nl":"time offset","code":"t = datetime.datetime.now()\n(t - datetime.timedelta(hours=1, minutes=10))","relevant":"curses.doupdate()?_split_?fig, ax = plt.subplots()?_split_?data_or_figure = [{'x': [1, 2, 3], 'y': [3, 1, 6]}]?_split_?"}
{"nl":"time offset","code":"(t - datetime.timedelta(hours=1, minutes=10))","relevant":"curses.doupdate()?_split_?fig, ax = plt.subplots()?_split_?data_or_figure = [{'x': [1, 2, 3], 'y': [3, 1, 6]}]?_split_?"}
{"nl":"time offset","code":"dt = datetime.datetime.combine(datetime.date.today(), t)","relevant":"curses.doupdate()?_split_?fig, ax = plt.subplots()?_split_?data_or_figure = [{'x': [1, 2, 3], 'y': [3, 1, 6]}]?_split_?"}
{"nl":"time offset","code":"dt -= datetime.timedelta(hours=5)","relevant":"curses.doupdate()?_split_?fig, ax = plt.subplots()?_split_?data_or_figure = [{'x': [1, 2, 3], 'y': [3, 1, 6]}]?_split_?"}
{"nl":"Manipulating binary data in Python","code":"print(data.encode('hex'))","relevant":"return cythonize(*args, **kwargs)?_split_?name = models.CharField(max_length=1024, blank=True)?_split_?import argparse?_split_?"}
{"nl":"Manipulating binary data in Python","code":"print(' '.join([str(ord(a)) for a in data]))","relevant":"return cythonize(*args, **kwargs)?_split_?name = models.CharField(max_length=1024, blank=True)?_split_?import argparse?_split_?"}
{"nl":"python - iterating over a subset of a list of tuples","code":"[x for x in l if x[1] == 1]","relevant":"lookup_field = 'id'?_split_?\"\"\"\nA ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed, and takes in a \"nested\"\nargument to return nested serializers\n\"\"\"\n\ndef __init__(self, *args, **kwargs):\n    fields = kwargs.pop('fields', None)\nexclude = kwargs.pop('exclude', None)\nnest = kwargs.pop('nest', None)\nif nest is not None:\n    if nest == True:\n        self.Meta.depth = 1\nsuper(DynamicModelSerializer, self).__init__(*args, **kwargs)?_split_?['phrase3']?_split_?"}
{"nl":"How to read stdin to a 2d python array of integers?","code":"a.fromlist([int(val) for val in stdin.read().split()])","relevant":"return super(ClassedWidgetMixin, self).__call__(field, **kwargs)?_split_?toor, = struct.unpack('>L', data[:4])?_split_?a2.eliminate_zeros()\na2?_split_?"}
{"nl":"Is there a way to refer to the entire matched expression in re.sub without the use of a group?","code":"print(re.sub('[_%^$]', '\\\\\\\\\\\\g<0>', line))","relevant":"print(('Test acc', history.history['val_acc'][nb_epochs - 1]))?_split_?from django.shortcuts import render\nfrom your_app.models import ToDo\n\n@login_required\ndef todos_for_user(request):\n    todos = ToDo.objects.filter(user=request.user)?_split_?df1 = pd.read_csv('file1.csv')?_split_?"}
{"nl":"How to use regular expression in lxml xpath?","code":"doc.xpath(\"\/\/a[starts-with(text(),'some text')]\")","relevant":"\"\"\"Retrieve the certificate from the server at the specified address,\n   and return it as a PEM-encoded string.\n   If 'ca_certs' is specified, validate the server cert against it.\n   If 'ssl_version' is specified, use it in the connection attempt.\"\"\"?_split_?@app.after_request\ndef add_header(r):\n    pass?_split_?mylist = [1, 5, 2]\na = np.asarray(mylist)\na.sum()?_split_?"}
{"nl":"Compare elements of a list of lists and return a list","code":"zip(*a)","relevant":"b.board = np.random.random((3, 3, 3))\nprint((b[2][0] == b[2][0]).all())?_split_?unpacked = struct.pack('!L', n)?_split_?from glob import glob?_split_?"}
{"nl":"Convert list of strings to int","code":"[map(int, sublist) for sublist in lst]","relevant":"reader = csv.DictReader((line.replace('\\x00', '') for line in csv_file),\n    delimiter='\\t')?_split_?infosoup = soup.find_all('div', class_='info')\nfor element in infosoup:\n    pass?_split_?import matplotlib.pyplot as plt?_split_?"}
{"nl":"Convert list of strings to int","code":"[[int(x) for x in sublist] for sublist in lst]","relevant":"reader = csv.DictReader((line.replace('\\x00', '') for line in csv_file),\n    delimiter='\\t')?_split_?infosoup = soup.find_all('div', class_='info')\nfor element in infosoup:\n    pass?_split_?import matplotlib.pyplot as plt?_split_?"}
{"nl":"Numpy: find index of elements in one array that occur in another array","code":"np.where(np.in1d(A, B))[0]","relevant":"def f(i):\n    print(i)\nreturn i?_split_?ax.w_xaxis.line.set_color((1.0, 1.0, 1.0, 0.0))?_split_?total, sign, i = 0, 1, 1?_split_?"}
{"nl":"Split dictionary of lists into list of dictionaries","code":"[{'key1': a, 'key2': b} for a, b in zip(d['key1'], d['key2'])]","relevant":"win.connect('delete-event', Gtk.main_quit)\nwin.set_wmclass('Hello World', 'Hello World')?_split_?reg0 = sm.OLS(p['p0'], p[['const', 'exmkt', 'smb', 'hml']]).fit()\nreg1 = sm.OLS(p['p2'], p[['const', 'exmkt', 'smb', 'hml']]).fit()\nreg2 = sm.OLS(p['p4'], p[['const', 'exmkt', 'smb', 'hml']]).fit()\nprint(summary_col([reg0, reg1, reg2], stars=True, float_format='%0.2f'))?_split_?col = sh1.col_values(0)?_split_?"}
{"nl":"Split dictionary of lists into list of dictionaries","code":"map(dict, zip(*[[(k, v) for v in value] for k, value in list(d.items())]))","relevant":"win.connect('delete-event', Gtk.main_quit)\nwin.set_wmclass('Hello World', 'Hello World')?_split_?reg0 = sm.OLS(p['p0'], p[['const', 'exmkt', 'smb', 'hml']]).fit()\nreg1 = sm.OLS(p['p2'], p[['const', 'exmkt', 'smb', 'hml']]).fit()\nreg2 = sm.OLS(p['p4'], p[['const', 'exmkt', 'smb', 'hml']]).fit()\nprint(summary_col([reg0, reg1, reg2], stars=True, float_format='%0.2f'))?_split_?col = sh1.col_values(0)?_split_?"}
{"nl":"Get Last Day of the Month","code":"calendar.monthrange(2002, 1)","relevant":"s = pd.Series({(0): ['a', 'b', 'c'], (1): ['c'], (2): ['b', 'c', 'e'], (3):\n    ['a', 'c'], (4): ['b', 'e']})\ns?_split_?numpy.where(numpy.all(a_view == may_b, axis=1))[0]?_split_?class Song:\n    \"\"\"The class to store the details of each song\"\"\"\nattsToStore = 'Name', 'Artist', 'Album', 'Genre', 'Location'\n\ndef __init__(self):\n    for att in self.attsToStore:\n        setattr(self, att.lower(), None)\n\ndef setDetail(self, key, val):\n    if key in self.attsToStore:\n        pass?_split_?"}
{"nl":"Get Last Day of the Month","code":"calendar.monthrange(2008, 2)","relevant":"s = pd.Series({(0): ['a', 'b', 'c'], (1): ['c'], (2): ['b', 'c', 'e'], (3):\n    ['a', 'c'], (4): ['b', 'e']})\ns?_split_?numpy.where(numpy.all(a_view == may_b, axis=1))[0]?_split_?class Song:\n    \"\"\"The class to store the details of each song\"\"\"\nattsToStore = 'Name', 'Artist', 'Album', 'Genre', 'Location'\n\ndef __init__(self):\n    for att in self.attsToStore:\n        setattr(self, att.lower(), None)\n\ndef setDetail(self, key, val):\n    if key in self.attsToStore:\n        pass?_split_?"}
{"nl":"Get Last Day of the Month","code":"calendar.monthrange(2100, 2)","relevant":"s = pd.Series({(0): ['a', 'b', 'c'], (1): ['c'], (2): ['b', 'c', 'e'], (3):\n    ['a', 'c'], (4): ['b', 'e']})\ns?_split_?numpy.where(numpy.all(a_view == may_b, axis=1))[0]?_split_?class Song:\n    \"\"\"The class to store the details of each song\"\"\"\nattsToStore = 'Name', 'Artist', 'Album', 'Genre', 'Location'\n\ndef __init__(self):\n    for att in self.attsToStore:\n        setattr(self, att.lower(), None)\n\ndef setDetail(self, key, val):\n    if key in self.attsToStore:\n        pass?_split_?"}
{"nl":"Get Last Day of the Month","code":"calendar.monthrange(year, month)[1]","relevant":"s = pd.Series({(0): ['a', 'b', 'c'], (1): ['c'], (2): ['b', 'c', 'e'], (3):\n    ['a', 'c'], (4): ['b', 'e']})\ns?_split_?numpy.where(numpy.all(a_view == may_b, axis=1))[0]?_split_?class Song:\n    \"\"\"The class to store the details of each song\"\"\"\nattsToStore = 'Name', 'Artist', 'Album', 'Genre', 'Location'\n\ndef __init__(self):\n    for att in self.attsToStore:\n        setattr(self, att.lower(), None)\n\ndef setDetail(self, key, val):\n    if key in self.attsToStore:\n        pass?_split_?"}
{"nl":"Get Last Day of the Month","code":"monthrange(2012, 2)","relevant":"s = pd.Series({(0): ['a', 'b', 'c'], (1): ['c'], (2): ['b', 'c', 'e'], (3):\n    ['a', 'c'], (4): ['b', 'e']})\ns?_split_?numpy.where(numpy.all(a_view == may_b, axis=1))[0]?_split_?class Song:\n    \"\"\"The class to store the details of each song\"\"\"\nattsToStore = 'Name', 'Artist', 'Album', 'Genre', 'Location'\n\ndef __init__(self):\n    for att in self.attsToStore:\n        setattr(self, att.lower(), None)\n\ndef setDetail(self, key, val):\n    if key in self.attsToStore:\n        pass?_split_?"}
{"nl":"Get Last Day of the Month","code":"(datetime.date(2000, 2, 1) - datetime.timedelta(days=1))","relevant":"s = pd.Series({(0): ['a', 'b', 'c'], (1): ['c'], (2): ['b', 'c', 'e'], (3):\n    ['a', 'c'], (4): ['b', 'e']})\ns?_split_?numpy.where(numpy.all(a_view == may_b, axis=1))[0]?_split_?class Song:\n    \"\"\"The class to store the details of each song\"\"\"\nattsToStore = 'Name', 'Artist', 'Album', 'Genre', 'Location'\n\ndef __init__(self):\n    for att in self.attsToStore:\n        setattr(self, att.lower(), None)\n\ndef setDetail(self, key, val):\n    if key in self.attsToStore:\n        pass?_split_?"}
{"nl":"Calling an external command","code":"from subprocess import call","relevant":"from string import ascii_letters?_split_?myList = np.random.random(100)\nbins = [0, 0.1, 0.9, 1]?_split_?subset = table[np.array([(i in id_list) for i in table.IDs])]?_split_?"}
{"nl":"Calling an external command","code":"os.system('some_command with args')","relevant":"from string import ascii_letters?_split_?myList = np.random.random(100)\nbins = [0, 0.1, 0.9, 1]?_split_?subset = table[np.array([(i in id_list) for i in table.IDs])]?_split_?"}
{"nl":"Calling an external command","code":"os.system('some_command < input_file | another_command > output_file')","relevant":"from string import ascii_letters?_split_?myList = np.random.random(100)\nbins = [0, 0.1, 0.9, 1]?_split_?subset = table[np.array([(i in id_list) for i in table.IDs])]?_split_?"}
{"nl":"Calling an external command","code":"stream = os.popen('some_command with args')","relevant":"from string import ascii_letters?_split_?myList = np.random.random(100)\nbins = [0, 0.1, 0.9, 1]?_split_?subset = table[np.array([(i in id_list) for i in table.IDs])]?_split_?"}
{"nl":"Calling an external command","code":"print(subprocess.Popen('echo Hello World', shell=True, stdout=subprocess.PIPE).stdout.read())","relevant":"from string import ascii_letters?_split_?myList = np.random.random(100)\nbins = [0, 0.1, 0.9, 1]?_split_?subset = table[np.array([(i in id_list) for i in table.IDs])]?_split_?"}
{"nl":"Calling an external command","code":"print(os.popen('echo Hello World').read())","relevant":"from string import ascii_letters?_split_?myList = np.random.random(100)\nbins = [0, 0.1, 0.9, 1]?_split_?subset = table[np.array([(i in id_list) for i in table.IDs])]?_split_?"}
{"nl":"Calling an external command","code":"return_code = subprocess.call('echo Hello World', shell=True)","relevant":"from string import ascii_letters?_split_?myList = np.random.random(100)\nbins = [0, 0.1, 0.9, 1]?_split_?subset = table[np.array([(i in id_list) for i in table.IDs])]?_split_?"}
{"nl":"Calling an external command","code":"p = subprocess.Popen('ls', shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\nfor line in p.stdout.readlines():\n    print(line, end=' ')\nretval = p.wait()","relevant":"from string import ascii_letters?_split_?myList = np.random.random(100)\nbins = [0, 0.1, 0.9, 1]?_split_?subset = table[np.array([(i in id_list) for i in table.IDs])]?_split_?"}
{"nl":"Calling an external command","code":"call(['ls', '-l'])","relevant":"from string import ascii_letters?_split_?myList = np.random.random(100)\nbins = [0, 0.1, 0.9, 1]?_split_?subset = table[np.array([(i in id_list) for i in table.IDs])]?_split_?"}
{"nl":"Url decode UTF-8 in Python","code":"print(urllib.parse.unquote(url).decode('utf8'))","relevant":"fig = plt.figure()\nax = fig.add_subplot(111)\nax.hist(x, bins=50, histtype='step', fill=None)\nplt.show()?_split_?yield grid[x_coord + dx, y_coord + dy]?_split_?atexit.register(__terminate)?_split_?"}
{"nl":"Url decode UTF-8 in Python","code":"url = urllib.parse.unquote(url).decode('utf8')","relevant":"fig = plt.figure()\nax = fig.add_subplot(111)\nax.hist(x, bins=50, histtype='step', fill=None)\nplt.show()?_split_?yield grid[x_coord + dx, y_coord + dy]?_split_?atexit.register(__terminate)?_split_?"}
{"nl":"Delete letters from string","code":"\"\"\"\"\"\".join(filter(str.isdigit, '12454v'))","relevant":"datetime.utcnow().strftime('%Y%m%d')?_split_?return null?_split_?if rank == 1:\n    pass?_split_?"}
{"nl":"applying regex to a pandas dataframe","code":"df['Season'].str.split('-').str[0].astype(int)","relevant":"class CustomGalleryDetailView(DetailView):\n\n    def get_queryset(self):\n        pass?_split_?import ctypes?_split_?self.workers.release()?_split_?"}
{"nl":"Sort tuples based on second parameter","code":"my_list.sort(key=lambda x: x[1])","relevant":"alert('Data: ' + data.some_list[1] + ' ' + data.nested_dict.foo + ' ' +\n    data.nested_dict.bar)?_split_?s = long_to_bytes(20988295476557333863)?_split_?time.sleep(5)?_split_?"}
{"nl":"Find all occurrences of a substring in Python","code":"[m.start() for m in re.finditer('(?=tt)', 'ttt')]","relevant":"import json?_split_?df.loc[:, ('vega')].fillna(0, inplace=True)?_split_?headers = {'content-type': 'application\/json'}\nr = requests.post(post_url, data=json.dumps(payload), headers=headers)?_split_?"}
{"nl":"Find all occurrences of a substring in Python","code":"[m.start() for m in re.finditer('test', 'test test test test')]","relevant":"import json?_split_?df.loc[:, ('vega')].fillna(0, inplace=True)?_split_?headers = {'content-type': 'application\/json'}\nr = requests.post(post_url, data=json.dumps(payload), headers=headers)?_split_?"}
{"nl":"re.split with spaces in python","code":"re.findall('\\\\s+|\\\\S+', s)","relevant":"pos = randint(0, siz - 1), randint(0, siz - 1)?_split_?p = mg(1, 'px')\nprint('500mm + 1px = {u}'.format(u=(s + p).ounit('px')))\nprint('500mm + 1px = {u}'.format(u=(s + p).ounit('mm')))?_split_?for i in a:\n    c.append('Adi_' + str(i))?_split_?"}
{"nl":"Working with set_index in Pandas DataFrame","code":"rdata.set_index(['race_date', 'track_code', 'race_number'])","relevant":"df_test\nrow_replacements = {'one': [3.1, 2.2], 'two': [8.8, 4.4]}\ndf_update = DataFrame.from_dict(row_replacements, orient='index')\ndf_update.columns = ['b', 'c']?_split_?found = re.search('\\\\b' + term + '\\\\b', phrase)\nif found:\n    pass?_split_?curses.wrapper(questionloop)?_split_?"}
{"nl":"recursively go through all subdirectories and read files","code":"for (root, subFolders, files) in os.walk(rootdir):\n    pass","relevant":"def index(self):\n    return 'Hello World!'?_split_?def calc(self):\n    print('Calculating')\nreturn 1?_split_?nonzero = (df['Value1'] > 0) & (df['Value1'].shift(1) == 0)\ndf['group'] = df['nonzero'].cumsum()?_split_?"}
{"nl":"sorting a list of dictionary values by date in python","code":"list.sort(key=lambda item: item['date'], reverse=True)","relevant":"d[k] = v?_split_?prev, current = current, next(self.__iter)?_split_?key = 'somekey'\na.setdefault(key, [])\na[key].append(2)?_split_?"}
{"nl":"How to truncate a string using str.format in Python?","code":"\"\"\"{:.5}\"\"\".format('aaabbbccc')","relevant":"def isBetween(a, b, c):\n    crossproduct = (c.y - a.y) * (b.x - a.x) - (c.x - a.x) * (b.y - a.y)\nif abs(crossproduct) > epsilon:\n    return False\ndotproduct = (c.x - a.x) * (b.x - a.x) + (c.y - a.y) * (b.y - a.y)\nif dotproduct < 0:\n    return False\nsquaredlengthba = (b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y)\nif dotproduct > squaredlengthba:\n    return False\nreturn True?_split_?if len(split_timestamp) == 3:\n    pass?_split_?self.id = self.num\n\n@classmethod\ndef increment(cls):\n    cls.num += 1?_split_?"}
{"nl":"How do I convert a string of hexadecimal values to a list of integers?","code":"struct.unpack('11B', s)","relevant":"class A(object):\n    pass\n\n\nclass B(object):\n\n    def b(self):\n        pass?_split_?my_pattern = '(?=(a.*?b.*?c))'?_split_?clf.fit(X, y)?_split_?"}
{"nl":"Finding the index of an item given a list containing it in Python","code":"[i for i, j in enumerate(['foo', 'bar', 'baz']) if j == 'foo']","relevant":"def sum_yearly_data(*data_dicts):\n    sums = Counter()?_split_?class Tag(Base):\n    __tablename__ = 'tag'?_split_?def launchVim():\n    os.system('vim')?_split_?"}
{"nl":"How to generate all permutations of a list in Python","code":"print(list(itertools.product([1, 2, 3], [4, 5, 6])))","relevant":"today = datetime.datetime.now()?_split_?\"\"\"{:>20}\"\"\".format(dt)\n\"\"\"{:>20}\"\"\".format(str(dt))?_split_?ns = parser.parse_args([])?_split_?"}
{"nl":"How to generate all permutations of a list in Python","code":"itertools.permutations([1, 2, 3])","relevant":"today = datetime.datetime.now()?_split_?\"\"\"{:>20}\"\"\".format(dt)\n\"\"\"{:>20}\"\"\".format(str(dt))?_split_?ns = parser.parse_args([])?_split_?"}
{"nl":"Remove punctuation from Unicode formatted strings","code":"return re.sub('\\\\p{P}+', '', text)","relevant":"H = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]])\nfig = plt.figure(figsize=(6, 3.2))?_split_?def __truediv__(self, other):\n    pass?_split_?class A(object):\n    pass?_split_?"}
{"nl":"manually throw\/raise an exception","code":"raise ValueError('A very specific bad thing happened')","relevant":"file3 = glob.glob(file2)?_split_?row_order = np.argsort(r, axis=1)[:, ::-1]\ncol_rank = np.argsort(col_order, axis=0)?_split_?if f.newlines is None:\n    raise ValueError('...')?_split_?"}
{"nl":"Manually raising (throwing) an exception","code":"raise Exception('I know Python!')","relevant":"row_order = np.argsort(r, axis=1)[:, ::-1]\ncol_rank = np.argsort(col_order, axis=0)?_split_?if f.newlines is None:\n    raise ValueError('...')?_split_?df2 = DataFrame(list('CDEF'), columns=['y'])?_split_?"}
{"nl":"Manually raising (throwing) an exception","code":"raise Exception('I know python!')","relevant":"row_order = np.argsort(r, axis=1)[:, ::-1]\ncol_rank = np.argsort(col_order, axis=0)?_split_?if f.newlines is None:\n    raise ValueError('...')?_split_?df2 = DataFrame(list('CDEF'), columns=['y'])?_split_?"}
{"nl":"Manually raising (throwing) an exception","code":"raise ValueError('represents a hidden bug, do not catch this')","relevant":"row_order = np.argsort(r, axis=1)[:, ::-1]\ncol_rank = np.argsort(col_order, axis=0)?_split_?if f.newlines is None:\n    raise ValueError('...')?_split_?df2 = DataFrame(list('CDEF'), columns=['y'])?_split_?"}
{"nl":"Manually raising (throwing) an exception","code":"raise Exception('This is the exception you expect to handle')","relevant":"row_order = np.argsort(r, axis=1)[:, ::-1]\ncol_rank = np.argsort(col_order, axis=0)?_split_?if f.newlines is None:\n    raise ValueError('...')?_split_?df2 = DataFrame(list('CDEF'), columns=['y'])?_split_?"}
{"nl":"Manually raising (throwing) an exception","code":"raise ValueError('A very specific bad thing happened')","relevant":"row_order = np.argsort(r, axis=1)[:, ::-1]\ncol_rank = np.argsort(col_order, axis=0)?_split_?if f.newlines is None:\n    raise ValueError('...')?_split_?df2 = DataFrame(list('CDEF'), columns=['y'])?_split_?"}
{"nl":"Manually raising (throwing) an exception","code":"raise RuntimeError('specific message')","relevant":"row_order = np.argsort(r, axis=1)[:, ::-1]\ncol_rank = np.argsort(col_order, axis=0)?_split_?if f.newlines is None:\n    raise ValueError('...')?_split_?df2 = DataFrame(list('CDEF'), columns=['y'])?_split_?"}
{"nl":"Manually raising (throwing) an exception","code":"raise AssertionError(\"Unexpected value of 'distance'!\", distance)","relevant":"row_order = np.argsort(r, axis=1)[:, ::-1]\ncol_rank = np.argsort(col_order, axis=0)?_split_?if f.newlines is None:\n    raise ValueError('...')?_split_?df2 = DataFrame(list('CDEF'), columns=['y'])?_split_?"}
{"nl":"Clear text from textarea with selenium","code":"driver.find_element_by_id('foo').clear()","relevant":"nx.has_path(G, 1, 3)\nG.add_edge(4, 5)\nnx.has_path(G, 1, 5)?_split_?access_log \/ var \/ log \/ nginx \/ sample_project.access.log?_split_?print('Wrong call.')?_split_?"}
{"nl":"Clear text from textarea with selenium","code":"driver.find_element_by_id('foo').clear()","relevant":"nx.has_path(G, 1, 3)\nG.add_edge(4, 5)\nnx.has_path(G, 1, 5)?_split_?access_log \/ var \/ log \/ nginx \/ sample_project.access.log?_split_?print('Wrong call.')?_split_?"}
{"nl":"Convert an IP string to a number and vice versa","code":"socket.inet_ntoa(struct.pack('!L', 2130706433))","relevant":"a = np.array([[1, 0, 0], [0, 1, 0], [1, 0, 1], [0, 0, 1], [0, 1, 0], [1, 0, 1]]\n    )\naa = sps.csc_matrix(a)\naa.indices[aa.indptr[0]:aa.indptr[1]]?_split_?groups = df1.groupby(level=df1.index.names)\ngroups.last()?_split_?trans = string.maketrans('ae', 'bx')\ntext = 'abcdef'?_split_?"}
{"nl":"How to rearrange Pandas column sequence?","code":"df = df[['x', 'y', 'a', 'b']]","relevant":"class HeadRequest(urllib.request.Request):\n\n    def get_method(self):\n        return 'HEAD'\nresponse = urllib.request.urlopen(HeadRequest('http:\/\/google.com\/index.html'))?_split_?return self.items.pop()?_split_?def install_conf(self):\n    self.mkpath((self.root or '') + self.conf_prefix)?_split_?"}
{"nl":"How to call Base Class's __init__ method from the child class?","code":"super(ChildClass, self).__init__(*args, **kwargs)","relevant":"ws = suds.client.Client('file:\/\/sandbox.xml', transport=t)?_split_?profile.set_preference('browser.download.panel.shown', False)?_split_?c += 1?_split_?"}
{"nl":"Sum of all values in a Python dict","code":"sum(d.values())","relevant":"article3?_split_?document = Document()\nrun = document.add_paragraph().add_run('some text')\nfont = run.font?_split_?stream.write(bytes(bytearray(buf)))?_split_?"}
{"nl":"Sum of all values in a Python dict","code":"sum(d.values())","relevant":"article3?_split_?document = Document()\nrun = document.add_paragraph().add_run('some text')\nfont = run.font?_split_?stream.write(bytes(bytearray(buf)))?_split_?"}
{"nl":"Convert Python dictionary to JSON array","code":"json.dumps(your_data, ensure_ascii=False)","relevant":"test_functions = [v for k, v in list(globals().items()) if k.startswith('test')]?_split_?Qt \/ QtGui \/ __init__.py?_split_?20100930?_split_?"}
{"nl":"numpy array assignment using slicing","code":"values = np.array([i for i in range(100)], dtype=np.float64)","relevant":"table = ''.join(chr(index) if index in ords_to_keep else replace_with for\n    index in range(15))?_split_?def get(self):\n    func_name = 'function' + str(self.i)?_split_?def __init__(self):\n    MonkeyDevice.__init__(self)?_split_?"}
{"nl":"Sort a list of dictionary provided an order","code":"sorted(list_of_dct, key=lambda x: order.index(list(x.values())[0]))","relevant":"image['Exif.Image.Copyright'] = COPYRIGHT?_split_?name_indexer = dict((p['name'], i) for i, p in enumerate(people))\nname_indexer.get('Tom', -1)?_split_?dictA = {'t': 1, 'tid': 2, 'gtm': 3}\nfor k in listA:\n    if all(x in k.items() for x in dictA.items()):\n        pass?_split_?"}
{"nl":"how to change the case of first letter of a string?","code":"return s[0].upper() + s[1:]","relevant":"from tornado.ioloop import IOLoop?_split_?def __getitem__(self, key):\n    i, k = self.lookup(key)\nif k == key:\n    return v\nvalue = self.constructor()\nself.store.insert(i, (key, value))\nreturn value\n\ndef __setitem__(self, key, value):\n    i, k = self.lookup(key)\nif k == key:\n    self.store[i] = key, value\nelse:\n    self.store.insert(i, (key, value))\n\ndef lookup(self, key):\n    i = bisect.bisect(self.store, (key, self.empty))\nif 0 <= i < len(self.store):\n    return i, self.store[i][0]\nreturn i, None\nif __name__ == '__main__':\n    s = mystore(set)\ns['a'] = set(['1'])\nprint(s.store)\ns['b']\nprint(s.store)\ns['a'] = set(['2'])\nprint(s.store)?_split_?code.interact(local=locals())?_split_?"}
{"nl":"how to change [1,2,3,4] to '1234' using python","code":"\"\"\"\"\"\".join([1, 2, 3, 4])","relevant":"corpus = tm_map(corpus, tolower)?_split_?\"\"\":return: last `n` output lines\"\"\"?_split_?self.yaxis.set_zorder(2.5)?_split_?"}
{"nl":"Delete every non utf-8 symbols froms string","code":"line = line.decode('utf-8', 'ignore').encode('utf-8')","relevant":"sys.stdout.flush()?_split_?partition_array = numpy.empty((nCr(n + b - 1, b - 1), b), dtype=int)?_split_?def init(files=None):\n    global inited?_split_?"}
{"nl":"How to execute a command in the terminal from a Python script?","code":"os.system(command)","relevant":"string_slice = ':2'\nsome_list[slice(*[(int(i.strip()) if i else None) for i in string_slice.\n    split(':')])]\nstring_slice = '::-1'\nsome_list[slice(*[(int(i.strip()) if i else None) for i in string_slice.\n    split(':')])]?_split_?(_host, _ssh_port),\nssh_username = _username,\nssh_password = _password,?_split_?d = json.loads(s)?_split_?"}
{"nl":"Python MySQL Parameterized Queries","code":"c.execute('SELECT * FROM foo WHERE bar = %s AND baz = %s', (param1, param2))","relevant":"left = [3]\nright = [2, 4]?_split_?np.stack([col1, col2]).ravel('F')?_split_?wheel\ntwine?_split_?"}
{"nl":"Convert a string to datetime object in python","code":"dateobj = datetime.datetime.strptime(datestr, '%Y-%m-%d').date()","relevant":"ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())?_split_?@functools.wraps(func)\ndef wrapper(*args, **kwargs):\n    pass?_split_?pd.to_numeric(corr_data1['A'], errors='coerce')?_split_?"}
